using COSMO, CovarianceEstimation, CSV, Clarabel, DataFrames, HiGHS, LinearAlgebra,
      OrderedCollections, PortfolioOptimiser, Statistics, StatsBase, Test, TimeSeries, SCS

prices_assets = TimeArray(CSV.File("./test/assets/stock_prices.csv"); timestamp = :date)
prices_factors = TimeArray(CSV.File("./test/assets/factor_prices.csv"); timestamp = :date)

rf = 1.0329^(1 / 252) - 1
l = 2.0

portfolio = HCPortfolio(; prices = prices_assets)
asset_statistics!(portfolio;
                  cor_settings = CorSettings(; method = :Gerber2,
                                             estimation = CorEstSettings(;
                                                                         estimator = AnalyticalNonlinearShrinkage()),))
cluster_assets!(portfolio; linkage = :DBHT)

plot_clusters(portfolio; cluster = false)
using Clustering
println(cutree(portfolio.clusters; k = portfolio.k))

target = DiagonalUnitVariance()
shrinkage = :lw # Ledoit-Wolf optimal shrinkage
method = LinearShrinkage(target, shrinkage)

test = wak()

# cluster_assets!(portfolio, linkage = :ward)
asset_sets = DataFrame("Assets" => portfolio.assets,
                       "PDBHT" => [1, 2, 1, 1, 1, 3, 2, 2, 3, 3, 3, 4, 4, 3, 3, 4, 2, 2, 3,
                                   1],
                       "SPDBHT" => [1, 1, 1, 1, 1, 2, 3, 4, 2, 3, 3, 2, 3, 3, 3, 3, 1, 4, 2,
                                    1],
                       "Pward" => [1, 1, 1, 1, 1, 2, 3, 2, 2, 2, 2, 4, 4, 2, 3, 4, 1, 2, 2,
                                   1],
                       "SPward" => [1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 4, 3, 2, 2, 3, 1, 2, 2,
                                    1],
                       "G2DBHT" => [1, 2, 1, 1, 1, 3, 2, 3, 4, 3, 4, 3, 3, 4, 4, 3, 2, 3, 4,
                                    1],
                       "G2ward" => [1, 1, 1, 1, 1, 2, 3, 4, 2, 2, 4, 2, 3, 3, 3, 2, 1, 4, 2,
                                    2])
constraints = DataFrame(:Enabled => [true, true, true, true, true, true, true, true, true,
                                     true, true, true, true, true, true, true, true, true,
                                     true, true, true, true, true, true, true, true, true,
                                     true, true, true],
                        :Type => ["Assets", "Assets", "Assets", "Assets", "All Assets",
                                  "All Assets", "All Assets", "All Assets", "Assets",
                                  "Assets", "All Assets", "All Assets", "Subset", "Subset",
                                  "Subset", "Subset", "All Subsets", "All Subsets",
                                  "All Subsets", "All Subsets", "Subset", "Subset",
                                  "All Subsets", "All Subsets", "Each Asset in Subset",
                                  "Each Asset in Subset", "Each Asset in Subset",
                                  "Each Asset in Subset", "Each Asset in Subset",
                                  "Each Asset in Subset"],
                        :Set => ["", "", "", "", "", "", "", "", "", "", "", "", "PDBHT",
                                 "PDBHT", "SPDBHT", "SPDBHT", "G2DBHT", "G2ward", "PDBHT",
                                 "SPDBHT", "Pward", "SPward", "G2DBHT", "G2ward", "PDBHT",
                                 "SPDBHT", "SPward", "G2DBHT", "Pward", "SPDBHT"],
                        :Position => ["GOOG", "GOOG", "AMZN", "AMZN", "", "", "", "", "T",
                                      "T", "", "", 3, 3, 4, 4, "", "", "", "", 1, 1, "", "",
                                      2, 3, 4, 2, 3, 1],
                        :Sign => [">=", "<=", ">=", "<=", ">=", "<=", ">=", "<=", ">=",
                                  "<=", ">=", "<=", ">=", "<=", ">=", "<=", ">=", "<=",
                                  ">=", "<=", ">=", "<=", ">=", "<=", ">=", "<=", ">=",
                                  "<=", ">=", "<="],
                        :Weight => [0.03, 0.1, "", "", 0.01, 0.35, "", "", "", "", "", "",
                                    0.04, 0.2, "", "", 0.03, 0.37, "", "", "", "", "", "",
                                    0.022, 0.41, "", "", "", ""],
                        :Relative_Type => ["", "", "Assets", "Assets", "", "", "Assets",
                                           "Assets", "Subset", "Subset", "Subset", "Subset",
                                           "", "", "Assets", "Assets", "", "", "Assets",
                                           "Assets", "Subset", "Subset", "Subset", "Subset",
                                           "", "", "Assets", "Assets", "Subset", "Subset"],
                        :Relative_Set => ["", "", "", "", "", "", "", "", "PDBHT", "SPDBHT",
                                          "Pward", "SPward", "", "", "", "", "", "", "", "",
                                          "PDBHT", "SPDBHT", "Pward", "SPward", "", "", "",
                                          "", "G2DBHT", "G2ward"],
                        :Relative_Position => ["", "", "T", "T", "", "", "GM", "PFE", 3, 1,
                                               2, 2, "", "", "T", "T", "", "", "GM", "PFE",
                                               4, 2, 1, 3, "", "", "GM", "AMZN", 4, 2],
                        :Factor => ["", "", 0.5, 2, "", "", 0.3, 2, 0.03, 0.4, 0.013, 0.5,
                                    "", "", 0.27, 0.61, "", "", 0.23, 3, 0.07, 0.11, 0.17,
                                    0.7, "", "", 0.1, 0.5, 0.19, 0.57])

A, B = asset_constraints(constraints, asset_sets)

At = reshape([1.0, -1.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.4,
              1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0,
              0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0,
              -0.0, -0.0, -0.0, 1.0, -1.0, 0.83, -0.17, -0.17, -0.17, -1.0, -0.0, -0.0,
              -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
              -0.0, -0.0, 0.0, 0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0,
              -0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.4, 0.0, 1.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 1.0,
              0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, -0.0, -0.0, -0.0,
              1.0, -1.0, -0.17, 0.83, -0.17, -0.17, -1.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -0.0, -0.0, 0.0, 0.0,
              -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -1.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, 0.0, 0.4, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -1.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0,
              0.0, 1.0, 0.0, 0.0, 0.0, -1.0, -0.0, -0.0, -0.0, 1.0, -1.0, 0.83, -0.17,
              -0.17, -0.17, -1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -1.0, -0.0,
              -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              0.0, 0.4, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              0.0, 0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
              0.0, -1.0, -0.0, -0.0, -0.0, 1.0, -1.0, 0.83, -0.17, -0.17, -0.17, -1.0, -0.0,
              -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, 0.0,
              0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.4, 0.0,
              0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0,
              0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0,
              -0.0, -0.0, -0.0, 1.0, -1.0, 0.83, -0.17, -0.17, -0.17, -1.0, -0.0, -0.0,
              -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5,
              0.5, 0.5, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, 0.0, 0.0, 0.0,
              -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.03, -0.0, -0.013, -0.013,
              -0.013, -0.013, -0.013, 0.987, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, 0.5, 0.5, 0.5,
              0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, 1.0, -1.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0,
              0.0, 1.0, 0.0, -0.0, -1.0, -0.0, -0.0, 0.0, 0.11, 0.0, 0.0, 1.0, 0.0, -0.0,
              -1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57,
              0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, -0.0, 0.0,
              1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -1.0,
              -0.0, 0.0, -0.0, 0.0, 1.0, 0.0, 0.0, -0.0, -0.0, -1.0, -0.0, 0.0, 1.0, 0.0,
              0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -1.0, -0.0, 1.0, 0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, 0.987, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0,
              0.0, 0.0, -0.0, -0.0, -0.0, -1.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.7, 0.7,
              0.7, -0.30000000000000004, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.03, -0.0,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, 0.987, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
              -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -1.0, -0.0, -0.0, 0.0, 0.11, 0.0,
              0.0, 0.0, 1.0, -0.0, -1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.19, -0.19, 0.57, 0.57, 0.57,
              0.57, 0.57, 0.57, 0.57, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, 0.7,
              -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.03, -0.0, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, 0.987, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0,
              0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.23, -0.23, 0.77, -0.23,
              -0.0, -0.0, -1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -1.0, -0.0, -0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.1, -0.0, -0.0,
              -0.0, 0.0, 0.0, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.0, 0.0, -0.5, 2.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.97, -1.0, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, 0.987, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 1.0, -1.0, -0.27, 0.61, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0,
              0.0, 1.0, 0.0, -0.0, -0.0, -1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0,
              -0.0, -0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, -0.0, -0.0, -0.0, -0.19, -0.19, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0,
              0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0,
              -1.0, -0.0, -0.0, -0.07, 0.11, 0.0, 0.0, 1.0, 0.0, -0.0, -1.0, -0.0, -0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0,
              -0.0, 0.0, 0.0, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.0, 0.0, 0.0, -0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0,
              0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.07,
              -0.0, 0.0, 0.0, 1.0, 0.0, 0.7, 0.7, -0.30000000000000004, 0.7, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.03, -0.0, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, 0.987, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0,
              0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0,
              -0.0, -1.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -1.0, -0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0,
              -0.19, -0.19, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.03, -0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0, -1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
              0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -1.0, -0.0, 0.0, -0.0, 0.0,
              0.0, 0.0, 1.0, -0.0, -0.0, -1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, -1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.19, 0.81, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0,
              -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0,
              -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.07, -0.0, 0.0, 0.0, 1.0, 0.0, 0.7,
              -0.30000000000000004, 0.7, 0.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, -1.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.57, 0.57, 0.57, 0.57, 0.57,
              0.57, 0.57, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, 0.0,
              0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, 0.0,
              0.0, 0.0, -0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
              -1.0, -0.0, -0.0, -0.0, 1.0, -1.0, -0.17, 0.83, -0.17, -0.17, -1.0, -0.0,
              -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -1.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, 0.0,
              0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              1.0, 0.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
              2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 0.0, -0.0, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, 0.987, -0.013, -0.013, 0.5, 0.5, 0.5,
              0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5,
              0.5, 0.5, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0,
              1.0, 0.0, 0.0, 3.0, 3.0, 3.0, 2.0, 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0,
              -0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0,
              0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.03, -0.0,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013,
              -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, -0.013, 0.987,
              -0.013, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 1.0, -1.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
              -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -1.0, -0.0, -0.0, 0.0, 0.11, 0.0,
              0.0, 0.0, 1.0, -0.0, -1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.19, -0.19, 0.57, 0.57, 0.57,
              0.57, 0.57, 0.57, 0.57, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -1.0, 0.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0,
              -0.0, -1.0, 0.0, 0.0, 0.0, -0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0,
              0.0, 0.0, 0.0, -1.0, -0.0, -0.0, -0.0, 1.0, -1.0, 0.83, -0.17, -0.17, -0.17,
              -0.0, -1.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57,
              -0.43000000000000005], (181, 20))
Bt = [0.03, -0.1, 0.0, 0.0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
      0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, -0.35, -0.35, -0.35,
      -0.35, -0.35, -0.35, -0.35, -0.35, -0.35, -0.35, -0.35, -0.35, -0.35, -0.35, -0.35,
      -0.35, -0.35, -0.35, -0.35, -0.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.04, -0.2, 0.0, 0.0, 0.03, 0.03, 0.03, 0.03, -0.37, -0.37, -0.37,
      -0.37, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.022, 0.022, 0.022, 0.022, 0.022, -0.41, -0.41, -0.41, -0.41, -0.41, -0.41,
      -0.41, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

@test isapprox(A, At)
@test isapprox(B, Bt)

println("At = reshape($(vec(A)), $(size(A)))")
println("Bt = $(B)")

println("loadingst = hcat(
            DataFrame(:ticker => $(loadings[!, 1])),
            DataFrame(
                reshape($(vec(Matrix(loadings[!, 2:end]))), $(size(loadings[!, 2:end]))),
                names(loadings)[2:end],
            ),
        )
        ")
println("Ct = reshape( $(vec(C)), $(size(C)))")
println("Dt = reshape( $(D), $(size(D)))")

@test loadingst == loadings
@test isapprox(C, Ct)
@test isapprox(D, Dt)

loadingst = hcat(DataFrame(:ticker => ["GOOG", "AAPL", "FB", "BABA", "AMZN", "GE", "AMD",
                                       "WMT", "BAC", "GM", "T", "UAA", "SHLD", "XOM", "RRC",
                                       "BBY", "MA", "PFE", "JPM", "SBUX"]),
                 DataFrame(reshape([0.0006682666783877028, 0.0008125085541546204,
                                    0.0009938539577313578, 0.0008448251080905889,
                                    0.0017791646483353075, -0.0005632788650349695,
                                    0.001738046978669652, 0.00033425409596189986,
                                    0.0008913431138749996, 0.00046117682801699036,
                                    0.0002458401993870664, -0.0005357683629290428,
                                    -0.001552593059063253, -1.9438538649469838e-6,
                                    -0.0011297716334776765, 0.001178183021578672,
                                    0.0010624628566782079, 0.00035901438896399323,
                                    0.0009055676318466468, 0.000618697117955252, 0.0, 0.0,
                                    0.0, 0.0, 0.026624010504930753, -0.2614329387110636,
                                    0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                                    0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.34214288894365086, 0.0, 0.0, 0.4759572343739958, 0.0,
                                    0.20947832327860058, 0.0, 0.46512629166678016, 0.0, 0.0,
                                    0.0, 0.0, 0.26762446801768025, 0.5882648692660363, 0.0,
                                    0.0, 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    0.0, 0.2677805704229642, -0.1957071228053125, 0.0, 0.0,
                                    0.0, -0.2693637060710647, -0.06016206857452389, 0.0,
                                    -0.24169692610064705, -0.23411356595605096,
                                    -0.21731935166210736, 0.0, -0.09204546965378291, 0.0,
                                    -0.33097845086566874, 0.0, 0.0, 0.0,
                                    -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0,
                                    -0.10164210407325881, 0.0, 0.0, -0.13261040097042645,
                                    0.0, 0.0, 0.0, 0.0916256099434114, 0.0, 0.0,
                                    0.41481713511157836, 0.0, 0.0, 0.0, 0.0,
                                    -0.6089091167169949, -0.27210017033490924, 0.0, 0.0,
                                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4748967098697935, 0.0],
                                   (20, 6)), names(loadings)[2:end]))

Ct = reshape([-0.0, -0.0, 0.0, 0.0, 0.0, 0.0916256099434114, -0.0, 0.0916256099434114, 0.0,
              0.0, 0.0, -0.0, -0.0916256099434114, 0.0916256099434114, -0.0, -0.0,
              0.09204546965378291, 0.0, 0.09204546965378291, -0.0, -0.0, -0.0, 0.0,
              -0.09204546965378291, -0.09204546965378291, 0.09204546965378291, -0.0, 0.0,
              -0.0, -0.0469998531043761, 0.0, 0.0, 0.0, -0.0, 0.0469998531043761,
              0.0469998531043761, -0.0469998531043761, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0,
              -0.0, 0.33097845086566874, 0.0, 0.33097845086566874, 0.41481713511157836,
              -0.0, 0.41481713511157836, 0.0, -0.33097845086566874, -0.33097845086566874,
              0.33097845086566874, -0.41481713511157836, 0.41481713511157836,
              -0.026624010504930753, -0.026624010504930753, 0.026624010504930753, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.026624010504930753, 0.0, -0.026624010504930753, -0.0,
              -0.0, 0.0, 0.2614329387110636, 0.2614329387110636, -0.2614329387110636,
              0.34214288894365086, 0.34214288894365086, -0.34214288894365086, -0.0, -0.0,
              0.2614329387110636, 0.0, 0.2614329387110636, 0.34214288894365086, -0.0, 0.0,
              -0.17373178882466736, -0.17373178882466736, 0.17373178882466736, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.17373178882466736, 0.0, -0.17373178882466736, -0.0, -0.0,
              0.0, -0.0, -0.0, 0.057535605163043506, 0.0, 0.057535605163043506, -0.0, -0.0,
              -0.0, 0.0, -0.057535605163043506, -0.057535605163043506, 0.057535605163043506,
              -0.0, 0.0, -0.0, -0.0, 0.0, 0.4759572343739958, 0.4759572343739958,
              -1.0848663510909906, -0.0, -0.6089091167169949, 0.0, 0.0, 0.0,
              0.4759572343739958, 0.6089091167169949, -0.6089091167169949, -0.0,
              0.2677805704229642, 0.0, 0.0, 0.0, -0.27210017033490924, -0.2677805704229642,
              -0.5398807407578734, 0.2677805704229642, 0.0, 0.0, -0.0, 0.27210017033490924,
              -0.27210017033490924, -0.0, -0.1957071228053125, 0.0, 0.20947832327860058,
              0.20947832327860058, -0.20947832327860058, 0.1957071228053125,
              0.1957071228053125, -0.1957071228053125, 0.0, 0.0, 0.20947832327860058, -0.0,
              0.0, -0.1622273531418773, -0.1622273531418773, 0.1622273531418773, 0.0, 0.0,
              -0.0, -0.0, -0.0, -0.1622273531418773, 0.0, -0.1622273531418773, -0.0, -0.0,
              0.0, -0.0, -0.0, 0.0, 0.46512629166678016, 0.46512629166678016,
              -0.46512629166678016, -0.0, -0.0, 0.0, 0.0, 0.0, 0.46512629166678016, -0.0,
              0.0, -0.0, -0.0, 0.10164210407325881, 0.0, 0.10164210407325881, -0.0, -0.0,
              -0.0, 0.0, -0.10164210407325881, -0.10164210407325881, 0.10164210407325881,
              -0.0, 0.0, -0.0, -0.2693637060710647, 0.0, 0.0, 0.0, -0.0, 0.2693637060710647,
              0.2693637060710647, -0.2693637060710647, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0,
              -0.06016206857452389, 0.0, 0.0, 0.0, -0.0, 0.06016206857452389,
              0.06016206857452389, -0.06016206857452389, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0,
              -0.0, 0.13261040097042645, 0.0, 0.13261040097042645, -0.0, -0.0, -0.0, 0.0,
              -0.13261040097042645, -0.13261040097042645, 0.13261040097042645, -0.0, 0.0,
              -0.0, -0.24169692610064705, 0.0, 0.26762446801768025, 0.26762446801768025,
              -0.26762446801768025, 0.24169692610064705, 0.24169692610064705,
              -0.24169692610064705, 0.0, 0.0, 0.26762446801768025, -0.0, 0.0, -0.0,
              -0.23411356595605096, 0.0, 0.5882648692660363, 0.5882648692660363,
              -1.0631615791358298, 0.23411356595605096, -0.24078314391374253,
              -0.23411356595605096, 0.0, 0.0, 0.5882648692660363, 0.4748967098697935,
              -0.4748967098697935, -0.18704558888036088, -0.40436494054246824,
              0.18704558888036088, 0.0, 0.0, -0.0, 0.21731935166210736, 0.21731935166210736,
              -0.40436494054246824, 0.0, -0.18704558888036088, -0.0, -0.0, 0.0], (14, 20))
Dt = reshape([-0.55, -0.9, 0.2, 0.2, 0.5, -0.7, 0.1, 0.3, -0.5, -0.2, -0.7, 0.1, -0.2, 0.6],
             (14,))

@test loadingst == loadings
@test isapprox(C, Ct)
@test isapprox(D, Dt)
########################################

println("cov_lt1 = reshape(", vec(portfolio.cov_l), ", 20, 20)")
println("cov_ut1 = reshape(", vec(portfolio.cov_u), ", 20, 20)")
println("cov_mut1 = ", sparse(portfolio.cov_mu))
println("cov_sigmat1 = ", sparse(portfolio.cov_sigma))
println("d_mut1 = ", portfolio.d_mu)
println("k_mut1 = ", portfolio.k_mu)
println("k_sigmat1 = ", portfolio.k_sigma)

println("kurtt = reshape(", vec(kurt), ", 16, 16)")
println("skurtt = reshape(", vec(skurt), ", 16, 16)")

println("w1t = ", w1.weights, "\n")
println("w2t = ", w2.weights, "\n")
println("w3t = ", w3.weights, "\n")
println("w4t = ", w4.weights, "\n")
println("w5t = ", w5.weights, "\n")
println("w6t = ", w6.weights, "\n")
println("w7t = ", w7.weights, "\n")
println("w8t = ", w8.weights, "\n")
println("w9t = ", w9.weights, "\n")
println("w10t = ", w10.weights, "\n")
println("w11t = ", w11.weights, "\n")
println("w12t = ", w12.weights, "\n")
println("w13t = ", w13.weights, "\n")
println("w14t = ", w14.weights, "\n")
println("w15t = ", w15.weights, "\n")
println("w16t = ", w16.weights, "\n")
println("w17t = ", w17.weights, "\n")
println("w18t = ", w18.weights, "\n")
println("w19t = ", w19.weights, "\n")
#######################################

for rtol in [1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 2.5e-1, 5e-1, 1e0]
    a1, a2 = [0.010490720965613475, 0.027638562976896618, 0.005157935454787538,
              0.014733203690891882, 0.001093266647285114, 0.02532695683718382,
              4.1693837439425117e-7, 0.1342437272400356, 1.6506785927756833e-6,
              2.097670384814251e-5, 0.30785405406384075, 6.251970691408918e-7,
              3.4608589721196204e-7, 0.12812746072176984, 1.365011443706727e-6,
              9.210330518075474e-5, 0.008584753808698897, 0.20759432127914562,
              2.922717534601414e-6, 0.12903462967591026],
             [0.011100928247540337, 0.028797601204028744, 0.00451697386063243,
              0.015117169787606181, 0.0003076466235640585, 0.02549899349018155,
              4.5392069132527076e-7, 0.13491962123190607, 1.681770276409214e-6,
              2.0441542555369992e-5, 0.3061835873256772, 6.640161273806851e-7,
              3.6474620983326474e-7, 0.12966556794012535, 1.4319449667839788e-6,
              0.00012979857147209442, 0.008064036470981209, 0.20700779271517056,
              2.9705961760174295e-6, 0.1286622739941112]
    if isapprox(a1, a2; rtol = rtol)
        println(", rtol = $(rtol)")
        break
    end
end

portfolio = Portfolio(; prices = prices,
                      solvers = OrderedDict(:Clarabel => Dict(:solver => Clarabel.Optimizer,
                                                              :params => Dict("verbose" => false,
                                                                              "max_step_fraction" => 0.75)),
                                            :COSMO => Dict(:solver => COSMO.Optimizer,
                                                           :params => Dict("verbose" => false))))
asset_statistics!(portfolio)

w1 = opt_port!(portfolio; rf = rf, l = l, class = :Classic, type = :Trad, rm = :Kurt,
               obj = :Min_Risk, kelly = :None,)
risk1 = calc_risk(portfolio; type = :Trad, rm = :Kurt, rf = rf)

rmf = :kurt_u
setproperty!(portfolio, rmf, risk1 + 1e-4 * risk1)
w18 = opt_port!(portfolio; rf = rf, l = l, class = :Classic, type = :Trad, rm = :Kurt,
                obj = :Sharpe, kelly = :None,)

@test isapprox(w18.weights, w1.weights, rtol = 1e-3)

w1 = opt_port!(portfolio; class = :Classic, type = :RP, rm = :Kurt)
rc1 = risk_contribution(portfolio; type = :RP, rm = :Kurt)
lrc1, hrc1 = extrema(rc1)

portfolio.risk_budget = 1:size(portfolio.returns, 2)
w2 = opt_port!(portfolio; class = :Classic, type = :RP, rm = :Kurt)
rc2 = risk_contribution(portfolio; type = :RP, rm = :Kurt)
lrc2, hrc2 = extrema(rc2)

w1t = [0.03879158773899491, 0.04946318916187915, 0.03767536457743636, 0.04975768359685481,
       0.03583384747996175, 0.05474667190193154, 0.02469826359420486, 0.10506491736193022,
       0.031245766025529604, 0.04312788495096333, 0.12822307815405873, 0.03170133005454372,
       0.026067725442004967, 0.057123092045424234, 0.03137705105386256, 0.04155724092469867,
       0.044681796838160794, 0.0754338209703899, 0.03624092724713855, 0.057188760880031476]

w2t = [0.004127710286387879, 0.010592152386952021, 0.012536905345418492,
       0.023303462236461917, 0.01936823663730284, 0.03214466953862615, 0.018650835191729918,
       0.08347430641751365, 0.026201862079995652, 0.04168068597107915, 0.1352680942007192,
       0.03614055044122551, 0.030447496750462644, 0.07180951106902754, 0.03968594759203002,
       0.05644735602737195, 0.07166639041345427, 0.11896200641502389, 0.06340744330857792,
       0.10408437769063927]

@test isapprox(w1.weights, w1t, rtol = 1.0e-5)
@test isapprox(w2.weights, w2t, rtol = 1.0e-5)
@test isapprox(hrc1 / lrc1, 1, atol = 1.6)
@test isapprox(hrc2 / lrc2, 20, atol = 3.2e0)
