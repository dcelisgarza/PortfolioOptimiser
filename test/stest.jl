using COSMO,
    CovarianceEstimation,
    CSV,
    Clarabel,
    HiGHS,
    LinearAlgebra,
    OrderedCollections,
    PortfolioOptimiser,
    Statistics,
    StatsBase,
    Test,
    TimeSeries,
    SCS

prices = TimeArray(CSV.File("./test/assets/stock_prices.csv"); timestamp = :date)

rf = 1.0329^(1 / 252) - 1
l = 2.0

settings = CovSettings()
settings.estimation.weights = eweights(100, 0.3)
settings.gerber.posdef_fix.func

cols = [:RRC, :AMZN, :JPM, :MA]
PortfolioOptimiser.MuTypes
PortfolioOptimiser.MuTargets

portfolio = HCPortfolio(; prices = prices)

asset_statistics!(portfolio;)
k1 = portfolio.kurt
sk1 = portfolio.skurt

asset_statistics!(portfolio; denoise = false, jlogo = false, posdef_fix = :Nearest)
k2 = portfolio.kurt
sk2 = portfolio.skurt

asset_statistics!(portfolio; denoise = false, jlogo = false, posdef_fix = :None)
k3 = portfolio.kurt
sk3 = portfolio.skurt

@test_throws ErrorException asset_statistics!(
    portfolio;
    denoise = false,
    jlogo = true,
    posdef_fix = :None,
)

asset_statistics!(portfolio; denoise = false, jlogo = true, posdef_fix = :Nearest)
k4 = portfolio.kurt
sk4 = portfolio.skurt

@test isapprox(k4, kt4)
@test isapprox(sk4, sk4)
@test isposdef(k4)
@test isposdef(sk4)
@test !isapprox(k1, k4)
@test !isapprox(sk1, sk4)

println("kt = reshape(", vec(portfolio.kurt), ", $(size(k1)))")
println("skt = reshape(", vec(portfolio.skurt), ", $(size(k1)))")

kt1 = reshape(
    [
        5.60146108913991e-6,
        1.365835764802368e-6,
        1.6901460512968054e-6,
        1.668770631788548e-6,
        1.365835764802368e-6,
        1.3003415858126553e-6,
        1.012646468098076e-6,
        8.740166167617141e-7,
        1.6901460512968054e-6,
        1.012646468098076e-6,
        2.502622237290048e-6,
        1.0713515313499325e-6,
        1.668770631788548e-6,
        8.740166167617141e-7,
        1.0713515313499325e-6,
        1.3511193201357009e-6,
        1.365835764802368e-6,
        1.3003415858126555e-6,
        1.0126462149363007e-6,
        8.74016398257423e-7,
        1.3003402854710697e-6,
        5.033872733715206e-7,
        8.180915810568269e-7,
        6.682191630091107e-7,
        1.0126462149363007e-6,
        8.180915810568269e-7,
        1.369085909777666e-6,
        6.148025944908652e-7,
        8.74016398257423e-7,
        6.682191630091107e-7,
        6.148025944908652e-7,
        6.69998436462236e-7,
        1.6901460512968054e-6,
        1.0126462149363007e-6,
        2.5026222372900474e-6,
        1.0713512635118823e-6,
        1.0126462149363007e-6,
        8.18091785579901e-7,
        1.3690855675059751e-6,
        6.148025944908651e-7,
        2.5026197346678103e-6,
        1.3690855675059751e-6,
        3.4458256357930257e-6,
        1.4016647587427316e-6,
        1.0713512635118823e-6,
        6.148025944908651e-7,
        1.4016647587427316e-6,
        7.971048652131828e-7,
        1.668770631788548e-6,
        8.74016398257423e-7,
        1.0713512635118823e-6,
        1.3511193201357007e-6,
        8.74016398257423e-7,
        6.682193300640476e-7,
        6.148025944908651e-7,
        6.699982689625224e-7,
        1.0713512635118823e-6,
        6.148025944908651e-7,
        1.4016651091592276e-6,
        7.971046659368419e-7,
        1.3511179690163807e-6,
        6.699982689625224e-7,
        7.971046659368419e-7,
        1.073035123703889e-6,
        1.365835764802368e-6,
        1.3003402854710697e-6,
        1.0126462149363007e-6,
        8.74016398257423e-7,
        1.3003415858126555e-6,
        5.033872733715206e-7,
        8.180915810568269e-7,
        6.682191630091107e-7,
        1.0126462149363007e-6,
        8.180915810568269e-7,
        1.369085909777666e-6,
        6.148025944908652e-7,
        8.74016398257423e-7,
        6.682191630091107e-7,
        6.148025944908652e-7,
        6.69998436462236e-7,
        1.3003415858126553e-6,
        5.033872733715206e-7,
        8.18091785579901e-7,
        6.682193300640476e-7,
        5.033872733715206e-7,
        8.392024650478883e-6,
        1.0354700605943403e-6,
        1.0129430988343115e-6,
        8.18091785579901e-7,
        1.0354700605943403e-6,
        1.6931520482552753e-6,
        8.013336072195046e-7,
        6.682193300640476e-7,
        1.0129430988343115e-6,
        8.013336072195046e-7,
        8.691126521577142e-7,
        1.012646468098076e-6,
        8.180915810568269e-7,
        1.3690855675059751e-6,
        6.148025944908651e-7,
        8.180915810568269e-7,
        1.0354700605943403e-6,
        1.6931520482552755e-6,
        8.013334068859776e-7,
        1.3690855675059751e-6,
        1.6931503551032276e-6,
        2.9770491363670096e-6,
        1.1797608073645254e-6,
        6.148025944908651e-7,
        8.013334068859779e-7,
        1.1797608073645259e-6,
        6.97643563606462e-7,
        8.740166167617141e-7,
        6.682191630091107e-7,
        6.148025944908651e-7,
        6.699982689625224e-7,
        6.682191630091107e-7,
        1.0129430988343115e-6,
        8.013334068859776e-7,
        8.691126521577144e-7,
        6.148025944908651e-7,
        8.013334068859779e-7,
        1.1797611023049853e-6,
        6.976433891954623e-7,
        6.699982689625224e-7,
        8.691117830450626e-7,
        6.976433891954623e-7,
        8.412945367240834e-7,
        1.6901460512968054e-6,
        1.0126462149363007e-6,
        2.5026197346678103e-6,
        1.0713512635118823e-6,
        1.0126462149363007e-6,
        8.18091785579901e-7,
        1.3690855675059751e-6,
        6.148025944908651e-7,
        2.5026222372900474e-6,
        1.3690855675059751e-6,
        3.4458256357930257e-6,
        1.4016647587427316e-6,
        1.0713512635118823e-6,
        6.148025944908651e-7,
        1.4016647587427316e-6,
        7.971048652131828e-7,
        1.012646468098076e-6,
        8.180915810568269e-7,
        1.3690855675059751e-6,
        6.148025944908651e-7,
        8.180915810568269e-7,
        1.0354700605943403e-6,
        1.6931503551032276e-6,
        8.013334068859779e-7,
        1.3690855675059751e-6,
        1.6931520482552755e-6,
        2.9770491363670096e-6,
        1.1797608073645259e-6,
        6.148025944908651e-7,
        8.013334068859776e-7,
        1.1797608073645254e-6,
        6.97643563606462e-7,
        2.502622237290048e-6,
        1.369085909777666e-6,
        3.4458256357930257e-6,
        1.4016651091592276e-6,
        1.369085909777666e-6,
        1.6931520482552753e-6,
        2.9770491363670096e-6,
        1.1797611023049853e-6,
        3.4458256357930257e-6,
        2.9770491363670096e-6,
        9.345069269408309e-6,
        3.12345694369119e-6,
        1.4016651091592276e-6,
        1.1797611023049853e-6,
        3.12345694369119e-6,
        1.5981445748263375e-6,
        1.0713515313499325e-6,
        6.148025944908652e-7,
        1.4016647587427316e-6,
        7.971046659368419e-7,
        6.148025944908652e-7,
        8.013336072195046e-7,
        1.1797608073645254e-6,
        6.976433891954623e-7,
        1.4016647587427316e-6,
        1.1797608073645259e-6,
        3.12345694369119e-6,
        1.5981445748263375e-6,
        7.971046659368419e-7,
        6.976433891954623e-7,
        1.5981429766817635e-6,
        1.1035636585627496e-6,
        1.668770631788548e-6,
        8.74016398257423e-7,
        1.0713512635118823e-6,
        1.3511179690163807e-6,
        8.74016398257423e-7,
        6.682193300640476e-7,
        6.148025944908651e-7,
        6.699982689625224e-7,
        1.0713512635118823e-6,
        6.148025944908651e-7,
        1.4016651091592276e-6,
        7.971046659368419e-7,
        1.3511193201357007e-6,
        6.699982689625224e-7,
        7.971046659368419e-7,
        1.073035123703889e-6,
        8.740166167617141e-7,
        6.682191630091107e-7,
        6.148025944908651e-7,
        6.699982689625224e-7,
        6.682191630091107e-7,
        1.0129430988343115e-6,
        8.013334068859779e-7,
        8.691117830450626e-7,
        6.148025944908651e-7,
        8.013334068859776e-7,
        1.1797611023049853e-6,
        6.976433891954623e-7,
        6.699982689625224e-7,
        8.691126521577144e-7,
        6.976433891954623e-7,
        8.412945367240834e-7,
        1.0713515313499325e-6,
        6.148025944908652e-7,
        1.4016647587427316e-6,
        7.971046659368419e-7,
        6.148025944908652e-7,
        8.013336072195046e-7,
        1.1797608073645259e-6,
        6.976433891954623e-7,
        1.4016647587427316e-6,
        1.1797608073645254e-6,
        3.12345694369119e-6,
        1.5981429766817635e-6,
        7.971046659368419e-7,
        6.976433891954623e-7,
        1.5981445748263375e-6,
        1.1035636585627496e-6,
        1.3511193201357009e-6,
        6.69998436462236e-7,
        7.971048652131828e-7,
        1.073035123703889e-6,
        6.69998436462236e-7,
        8.691126521577142e-7,
        6.97643563606462e-7,
        8.412945367240834e-7,
        7.971048652131828e-7,
        6.97643563606462e-7,
        1.5981445748263375e-6,
        1.1035636585627496e-6,
        1.073035123703889e-6,
        8.412945367240834e-7,
        1.1035636585627496e-6,
        3.0051684426841122e-6,
    ],
    (16, 16),
)
skt1 = reshape(
    [
        2.7638787040859677e-6,
        7.74070184291587e-7,
        1.1695529300832078e-6,
        9.949053359827922e-7,
        7.74070184291587e-7,
        5.095234930877007e-7,
        5.160358834906005e-7,
        4.608225248720831e-7,
        1.1695529300832078e-6,
        5.160358834906005e-7,
        1.1198674015020585e-6,
        6.450722225935622e-7,
        9.949053359827922e-7,
        4.608225248720831e-7,
        6.450722225935622e-7,
        6.085934566875495e-7,
        7.74070184291587e-7,
        5.095234930877006e-7,
        5.160357544815489e-7,
        4.608224096663799e-7,
        5.095229835642075e-7,
        4.661982359735263e-7,
        3.7475034787149937e-7,
        3.569435567587914e-7,
        5.160357544815489e-7,
        3.7475034787149937e-7,
        5.451082993745849e-7,
        3.600170068611062e-7,
        4.608224096663799e-7,
        3.569435567587914e-7,
        3.600170068611062e-7,
        3.632016222788567e-7,
        1.1695529300832078e-6,
        5.160357544815489e-7,
        1.1198674015020585e-6,
        6.450720613254061e-7,
        5.160357544815489e-7,
        3.747504415591683e-7,
        5.451081630974249e-7,
        3.600170068611063e-7,
        1.119866281634657e-6,
        5.451081630974249e-7,
        1.4032639554952983e-6,
        7.21743520524718e-7,
        6.450720613254061e-7,
        3.600170068611063e-7,
        7.21743520524718e-7,
        4.825117873492434e-7,
        9.949053359827922e-7,
        4.608224096663799e-7,
        6.450720613254061e-7,
        6.085934566875496e-7,
        4.608224096663799e-7,
        3.569436459947587e-7,
        3.600170068611063e-7,
        3.6320153147839443e-7,
        6.450720613254061e-7,
        3.600170068611063e-7,
        7.217437009607564e-7,
        4.825116667212212e-7,
        6.085928480940928e-7,
        3.6320153147839443e-7,
        4.82511666721221e-7,
        5.012026520596123e-7,
        7.74070184291587e-7,
        5.095229835642075e-7,
        5.160357544815489e-7,
        4.608224096663799e-7,
        5.095234930877006e-7,
        4.661982359735263e-7,
        3.7475034787149937e-7,
        3.569435567587914e-7,
        5.160357544815489e-7,
        3.7475034787149937e-7,
        5.451082993745849e-7,
        3.600170068611062e-7,
        4.608224096663799e-7,
        3.569435567587914e-7,
        3.600170068611062e-7,
        3.632016222788567e-7,
        5.095234930877007e-7,
        4.661982359735263e-7,
        3.747504415591683e-7,
        3.569436459947587e-7,
        4.661982359735263e-7,
        1.8110452963909602e-6,
        4.830730955832295e-7,
        4.93297908233427e-7,
        3.747504415591683e-7,
        4.830730955832295e-7,
        5.411541031232562e-7,
        3.825690956299179e-7,
        3.569436459947587e-7,
        4.93297908233427e-7,
        3.825690956299179e-7,
        4.1769128026039674e-7,
        5.160358834906005e-7,
        3.7475034787149937e-7,
        5.451081630974249e-7,
        3.600170068611063e-7,
        3.7475034787149937e-7,
        4.830730955832295e-7,
        5.411541031232563e-7,
        3.8256899998758434e-7,
        5.451081630974249e-7,
        5.411535619691531e-7,
        9.328894904406242e-7,
        5.308452862249216e-7,
        3.600170068611063e-7,
        3.8256899998758434e-7,
        5.308452862249216e-7,
        3.974906181370735e-7,
        4.608225248720831e-7,
        3.569435567587914e-7,
        3.600170068611063e-7,
        3.6320153147839443e-7,
        3.569435567587914e-7,
        4.93297908233427e-7,
        3.8256899998758434e-7,
        4.1769128026039674e-7,
        3.600170068611063e-7,
        3.8256899998758434e-7,
        5.308454189363594e-7,
        3.9749051876435683e-7,
        3.6320153147839443e-7,
        4.176908625691165e-7,
        3.974905187643567e-7,
        4.4734437387076344e-7,
        1.1695529300832078e-6,
        5.160357544815489e-7,
        1.119866281634657e-6,
        6.450720613254061e-7,
        5.160357544815489e-7,
        3.747504415591683e-7,
        5.451081630974249e-7,
        3.600170068611063e-7,
        1.1198674015020585e-6,
        5.451081630974249e-7,
        1.4032639554952983e-6,
        7.21743520524718e-7,
        6.450720613254061e-7,
        3.600170068611063e-7,
        7.21743520524718e-7,
        4.825117873492434e-7,
        5.160358834906005e-7,
        3.7475034787149937e-7,
        5.451081630974249e-7,
        3.600170068611063e-7,
        3.7475034787149937e-7,
        4.830730955832295e-7,
        5.411535619691531e-7,
        3.8256899998758434e-7,
        5.451081630974249e-7,
        5.411541031232563e-7,
        9.328894904406242e-7,
        5.308452862249216e-7,
        3.600170068611063e-7,
        3.8256899998758434e-7,
        5.308452862249216e-7,
        3.974906181370735e-7,
        1.1198674015020585e-6,
        5.451082993745849e-7,
        1.4032639554952983e-6,
        7.217437009607564e-7,
        5.451082993745849e-7,
        5.411541031232562e-7,
        9.328894904406242e-7,
        5.308454189363594e-7,
        1.4032639554952983e-6,
        9.328894904406242e-7,
        2.6810415190099118e-6,
        1.2300548046930697e-6,
        7.217437009607564e-7,
        5.308454189363594e-7,
        1.2300548046930697e-6,
        7.264990649744111e-7,
        6.450722225935622e-7,
        3.600170068611062e-7,
        7.21743520524718e-7,
        4.825116667212212e-7,
        3.600170068611062e-7,
        3.825690956299179e-7,
        5.308452862249216e-7,
        3.9749051876435683e-7,
        7.21743520524718e-7,
        5.308452862249216e-7,
        1.2300548046930697e-6,
        7.26499064974411e-7,
        4.82511666721221e-7,
        3.974905187643567e-7,
        7.264983384753454e-7,
        5.664911878283679e-7,
        9.949053359827922e-7,
        4.608224096663799e-7,
        6.450720613254061e-7,
        6.085928480940928e-7,
        4.608224096663799e-7,
        3.569436459947587e-7,
        3.600170068611063e-7,
        3.6320153147839443e-7,
        6.450720613254061e-7,
        3.600170068611063e-7,
        7.217437009607564e-7,
        4.82511666721221e-7,
        6.085934566875496e-7,
        3.6320153147839443e-7,
        4.825116667212212e-7,
        5.012026520596123e-7,
        4.608225248720831e-7,
        3.569435567587914e-7,
        3.600170068611063e-7,
        3.6320153147839443e-7,
        3.569435567587914e-7,
        4.93297908233427e-7,
        3.8256899998758434e-7,
        4.176908625691165e-7,
        3.600170068611063e-7,
        3.8256899998758434e-7,
        5.308454189363594e-7,
        3.974905187643567e-7,
        3.6320153147839443e-7,
        4.1769128026039674e-7,
        3.9749051876435683e-7,
        4.4734437387076344e-7,
        6.450722225935622e-7,
        3.600170068611062e-7,
        7.21743520524718e-7,
        4.82511666721221e-7,
        3.600170068611062e-7,
        3.825690956299179e-7,
        5.308452862249216e-7,
        3.974905187643567e-7,
        7.21743520524718e-7,
        5.308452862249216e-7,
        1.2300548046930697e-6,
        7.264983384753454e-7,
        4.825116667212212e-7,
        3.9749051876435683e-7,
        7.26499064974411e-7,
        5.664911878283679e-7,
        6.085934566875495e-7,
        3.632016222788567e-7,
        4.825117873492434e-7,
        5.012026520596123e-7,
        3.632016222788567e-7,
        4.1769128026039674e-7,
        3.974906181370735e-7,
        4.4734437387076344e-7,
        4.825117873492434e-7,
        3.974906181370735e-7,
        7.264990649744111e-7,
        5.664911878283679e-7,
        5.012026520596123e-7,
        4.4734437387076344e-7,
        5.664911878283679e-7,
        7.740555060917049e-7,
    ],
    (16, 16),
)
kt4 = reshape(
    [
        5.601461090179702e-6,
        1.3658357655386329e-6,
        8.645605407281924e-7,
        1.6687706325501322e-6,
        1.3658352589305973e-6,
        1.0890929107838542e-6,
        1.0166186053511303e-6,
        9.189970606143277e-7,
        8.645604644777263e-7,
        1.0166183049931087e-6,
        1.955800727901045e-6,
        8.328632458888466e-7,
        1.6687706325501307e-6,
        9.189967016777526e-7,
        8.328629895209612e-7,
        1.3159077943894283e-6,
        1.3658357655386329e-6,
        1.3003415861269958e-6,
        6.888021289320469e-7,
        8.740163984411496e-7,
        1.3003402857758028e-6,
        8.002915820543992e-7,
        8.180915815565675e-7,
        6.682191633603075e-7,
        6.88802079973508e-7,
        8.180912232009348e-7,
        1.5464582659530072e-6,
        6.499425533891646e-7,
        8.740163984433183e-7,
        6.682191633633653e-7,
        6.499423888401295e-7,
        6.699984792974173e-7,
        8.645605407281924e-7,
        6.888021289320469e-7,
        2.502622237672514e-6,
        6.064676783194831e-7,
        6.888018743299139e-7,
        8.88060769330368e-7,
        1.3690855681818272e-6,
        6.955309695813014e-7,
        2.5026197350056303e-6,
        1.3690855682000094e-6,
        3.4458256369093787e-6,
        1.2190228569111497e-6,
        6.064674244538951e-7,
        6.955308851921816e-7,
        1.219022856919933e-6,
        4.7191166316569737e-7,
        1.6687706325501322e-6,
        8.740163984411496e-7,
        6.064676783194831e-7,
        1.351119320173735e-6,
        8.740163984516028e-7,
        7.906812442858567e-7,
        7.099052894836631e-7,
        6.699982692285122e-7,
        6.064676201109905e-7,
        7.09905125973079e-7,
        1.3765994348439092e-6,
        5.896249463166816e-7,
        1.351117969043653e-6,
        6.699979041052817e-7,
        5.896247507362724e-7,
        1.0730351237263161e-6,
        1.3658352589305973e-6,
        1.3003402857758028e-6,
        6.888018743299139e-7,
        8.740163984516028e-7,
        1.3003415861269958e-6,
        8.002915465318406e-7,
        8.180912476518043e-7,
        6.682191633633644e-7,
        6.888018253360454e-7,
        8.180908892816038e-7,
        1.546457739580459e-6,
        6.49942365659478e-7,
        8.74016398441149e-7,
        6.682191633603079e-7,
        6.499422011115969e-7,
        6.699984366041119e-7,
        1.0890929107838542e-6,
        8.002915820543992e-7,
        8.88060769330368e-7,
        7.906812442858567e-7,
        8.002915465318406e-7,
        8.392024652843276e-6,
        1.0354698825481886e-6,
        1.0129431008395333e-6,
        8.88060679388169e-7,
        1.0354700626709067e-6,
        2.0216267101111442e-6,
        8.701745416756005e-7,
        7.906807982177792e-7,
        1.0129431008395368e-6,
        8.701742355250099e-7,
        6.18462812170517e-7,
        1.0166186053511303e-6,
        8.180915815565675e-7,
        1.3690855681818272e-6,
        7.099052894836631e-7,
        8.180912476518043e-7,
        1.0354698825481886e-6,
        1.6931520491769854e-6,
        8.013334074832732e-7,
        1.3690855681184587e-6,
        1.693150356010559e-6,
        2.9770491379389312e-6,
        1.1797608080233134e-6,
        7.099050063697252e-7,
        8.013334074843296e-7,
        1.1797608080261225e-6,
        5.52012023387906e-7,
        9.189970606143277e-7,
        6.682191633603075e-7,
        6.955309695813014e-7,
        6.699982692285122e-7,
        6.682191633633644e-7,
        1.0129431008395333e-6,
        8.013334074832732e-7,
        8.691126525950178e-7,
        6.955308842315867e-7,
        8.013334074623937e-7,
        1.5972560888625236e-6,
        6.976433896380269e-7,
        6.699978784697027e-7,
        8.691117834731648e-7,
        6.976431028102903e-7,
        5.243915949018318e-7,
        8.645604644777263e-7,
        6.88802079973508e-7,
        2.5026197350056303e-6,
        6.064676201109905e-7,
        6.888018253360454e-7,
        8.88060679388169e-7,
        1.3690855681184587e-6,
        6.955308842315867e-7,
        2.5026222376725125e-6,
        1.3690855681818261e-6,
        3.445823774477141e-6,
        1.2190223815901013e-6,
        6.064673662716576e-7,
        6.955307998731161e-7,
        1.2190223815808368e-6,
        4.7191161734154416e-7,
        1.0166183049931087e-6,
        8.180912232009348e-7,
        1.3690855682000094e-6,
        7.09905125973079e-7,
        8.180908892816038e-7,
        1.0354700626709067e-6,
        1.693150356010559e-6,
        8.013334074623937e-7,
        1.3690855681818261e-6,
        1.6931520491769854e-6,
        2.977049137938933e-6,
        1.1797608080261234e-6,
        7.099048428648842e-7,
        8.013334074832744e-7,
        1.1797608080219947e-6,
        5.520119018261026e-7,
        1.955800727901045e-6,
        1.5464582659530072e-6,
        3.4458256369093787e-6,
        1.3765994348439092e-6,
        1.546457739580459e-6,
        2.0216267101111442e-6,
        2.9770491379389312e-6,
        1.5972560888625236e-6,
        3.445823774477141e-6,
        2.977049137938933e-6,
        9.345069273015188e-6,
        3.1234569451874516e-6,
        1.3765988385918235e-6,
        1.597255755101799e-6,
        3.1234569451874507e-6,
        1.0717346166945694e-6,
        8.328632458888466e-7,
        6.499425533891646e-7,
        1.2190228569111497e-6,
        5.896249463166816e-7,
        6.49942365659478e-7,
        8.701745416756005e-7,
        1.1797608080233134e-6,
        6.976433896380269e-7,
        1.2190223815901013e-6,
        1.1797608080261234e-6,
        3.1234569451874516e-6,
        1.5981445753528803e-6,
        5.896246760509142e-7,
        6.976431425378182e-7,
        1.5981429771950994e-6,
        4.594535811400285e-7,
        1.6687706325501307e-6,
        8.740163984433183e-7,
        6.064674244538951e-7,
        1.351117969043653e-6,
        8.74016398441149e-7,
        7.906807982177792e-7,
        7.099050063697252e-7,
        6.699978784697027e-7,
        6.064673662716576e-7,
        7.099048428648842e-7,
        1.3765988385918235e-6,
        5.896246760509142e-7,
        1.3511193201737346e-6,
        6.699975133531871e-7,
        5.896244804541112e-7,
        1.0730351237263161e-6,
        9.189967016777526e-7,
        6.682191633633653e-7,
        6.955308851921816e-7,
        6.699979041052817e-7,
        6.682191633603079e-7,
        1.0129431008395368e-6,
        8.013334074843296e-7,
        8.691117834731648e-7,
        6.955307998731161e-7,
        8.013334074832744e-7,
        1.597255755101799e-6,
        6.976431425378182e-7,
        6.699975133531871e-7,
        8.691126525950192e-7,
        6.976428556959426e-7,
        5.243912971796744e-7,
        8.328629895209612e-7,
        6.499423888401295e-7,
        1.219022856919933e-6,
        5.896247507362724e-7,
        6.499422011115969e-7,
        8.701742355250099e-7,
        1.1797608080261225e-6,
        6.976431028102903e-7,
        1.2190223815808368e-6,
        1.1797608080219947e-6,
        3.1234569451874507e-6,
        1.5981429771950994e-6,
        5.896244804541112e-7,
        6.976428556959426e-7,
        1.5981445753528803e-6,
        4.5945342707092e-7,
        1.3159077943894283e-6,
        6.699984792974173e-7,
        4.7191166316569737e-7,
        1.0730351237263161e-6,
        6.699984366041119e-7,
        6.18462812170517e-7,
        5.52012023387906e-7,
        5.243915949018318e-7,
        4.7191161734154416e-7,
        5.520119018261026e-7,
        1.0717346166945694e-6,
        4.594535811400285e-7,
        1.0730351237263161e-6,
        5.243912971796744e-7,
        4.5945342707092e-7,
        3.0051684426994435e-6,
    ],
    (16, 16),
)
skt4 = reshape(
    [
        2.7638787041905216e-6,
        3.4396586331188516e-7,
        9.666607080407365e-7,
        9.949053361351785e-7,
        3.439657684660256e-7,
        4.4763478993470684e-7,
        4.797019428118439e-7,
        3.579609538442564e-7,
        9.666598023277339e-7,
        4.797019133161371e-7,
        1.2387867842415596e-6,
        6.450725266473273e-7,
        9.949053361351787e-7,
        3.579609004096439e-7,
        6.450722230779338e-7,
        7.48679036760552e-7,
        3.4396586331188516e-7,
        5.095234933092975e-7,
        3.8546377439861396e-7,
        2.560326962325582e-7,
        5.095229837835029e-7,
        4.2938975548914524e-7,
        3.7475034816921917e-7,
        3.5694355697256964e-7,
        3.8546379238234665e-7,
        3.7475021250587965e-7,
        6.672715666781064e-7,
        3.814911679160905e-7,
        2.5603270185830405e-7,
        3.5694355697284974e-7,
        3.8149111891499177e-7,
        2.9862397469647895e-7,
        9.666607080407365e-7,
        3.8546377439861396e-7,
        1.119867402103202e-6,
        6.450717116481422e-7,
        3.854636679992238e-7,
        5.01608847789606e-7,
        5.377000801685912e-7,
        4.0109745131500703e-7,
        1.1198662822257175e-6,
        5.377000436894945e-7,
        1.4032634527471599e-6,
        7.217435212140963e-7,
        6.45072061690253e-7,
        4.010973918321395e-7,
        7.21743521217924e-7,
        6.346555382896915e-7,
        9.949053361351785e-7,
        2.560326962325582e-7,
        6.450717116481422e-7,
        6.085934568687603e-7,
        2.560326258363169e-7,
        3.332623399114293e-7,
        3.568155705668674e-7,
        2.6655148051264185e-7,
        6.450712509495704e-7,
        3.56815555567264e-7,
        8.915179335275373e-7,
        4.825116671369589e-7,
        6.085928482654268e-7,
        2.6655143993930035e-7,
        4.825116671291909e-7,
        5.012026523401597e-7,
        3.439657684660256e-7,
        5.095229837835029e-7,
        3.854636679992238e-7,
        2.560326258363169e-7,
        5.095234933092973e-7,
        4.2938973596620154e-7,
        3.7475022901720665e-7,
        3.569435569728497e-7,
        3.8546368598866055e-7,
        3.7475009335284445e-7,
        6.672713807198522e-7,
        3.814910637431613e-7,
        2.560326314710989e-7,
        3.569435569725695e-7,
        3.8149101473478905e-7,
        2.986238929468554e-7,
        4.4763478993470684e-7,
        4.2938975548914524e-7,
        5.01608847789606e-7,
        3.332623399114293e-7,
        4.2938973596620154e-7,
        1.8110452967690573e-6,
        4.83073007322287e-7,
        4.932979085334831e-7,
        5.016088703241605e-7,
        4.830730959896156e-7,
        8.678085841926869e-7,
        4.967671724595067e-7,
        3.3326234698758943e-7,
        4.932979085334835e-7,
        4.967670916194955e-7,
        3.88800701720596e-7,
        4.797019428118439e-7,
        3.7475034816921917e-7,
        5.377000801685912e-7,
        3.568155705668674e-7,
        3.7475022901720665e-7,
        4.83073007322287e-7,
        5.411541035597148e-7,
        3.825690003020381e-7,
        5.377001089056542e-7,
        5.411535623960126e-7,
        9.328894914125931e-7,
        5.308452868085528e-7,
        3.568155795872788e-7,
        3.825690003094251e-7,
        5.308452868095867e-7,
        4.157722711157456e-7,
        3.579609538442564e-7,
        3.5694355697256964e-7,
        4.0109745131500703e-7,
        2.6655148051264185e-7,
        3.569435569728497e-7,
        4.932979085334831e-7,
        3.825690003020381e-7,
        4.176912804637227e-7,
        4.0109746857541895e-7,
        3.8256900027995396e-7,
        6.934990309534186e-7,
        3.974905191667294e-7,
        2.6655148591491645e-7,
        4.1769086276646326e-7,
        3.974904407506034e-7,
        3.1105298748040755e-7,
        9.666598023277339e-7,
        3.8546379238234665e-7,
        1.1198662822257175e-6,
        6.450712509495704e-7,
        3.8546368598866055e-7,
        5.016088703241605e-7,
        5.377001089056542e-7,
        4.0109746857541895e-7,
        1.1198674021032025e-6,
        5.377000724129827e-7,
        1.4032639566282963e-6,
        7.21743521217924e-7,
        6.450716010068534e-7,
        4.010974090838818e-7,
        7.217435212140966e-7,
        6.346553384937958e-7,
        4.797019133161371e-7,
        3.7475021250587965e-7,
        5.377000436894945e-7,
        3.56815555567264e-7,
        3.7475009335284445e-7,
        4.830730959896156e-7,
        5.411535623960126e-7,
        3.8256900027995396e-7,
        5.377000724129827e-7,
        5.411541035597141e-7,
        9.328893710125921e-7,
        5.308452868095863e-7,
        3.5681556458182576e-7,
        3.8256900030203775e-7,
        5.308452868085528e-7,
        4.157722646091357e-7,
        1.2387867842415596e-6,
        6.672715666781064e-7,
        1.4032634527471599e-6,
        8.915179335275373e-7,
        6.672713807198522e-7,
        8.678085841926869e-7,
        9.328894914125931e-7,
        6.934990309534186e-7,
        1.4032639566282963e-6,
        9.328893710125921e-7,
        2.6810415212544237e-6,
        1.2300548060468132e-6,
        8.915180911364955e-7,
        6.934989345839166e-7,
        1.2300548060468137e-6,
        9.914803248681236e-7,
        6.450725266473273e-7,
        3.814911679160905e-7,
        7.217435212140963e-7,
        4.825116671369589e-7,
        3.814910637431613e-7,
        4.967671724595067e-7,
        5.308452868085528e-7,
        3.974905191667294e-7,
        7.21743521217924e-7,
        5.308452868095863e-7,
        1.2300548060468132e-6,
        7.26499065736935e-7,
        4.825116671586764e-7,
        3.9749045616575896e-7,
        7.264983392315584e-7,
        5.664911883947898e-7,
        9.949053361351787e-7,
        2.5603270185830405e-7,
        6.45072061690253e-7,
        6.085928482654268e-7,
        2.560326314710989e-7,
        3.3326234698758943e-7,
        3.568155795872788e-7,
        2.6655148591491645e-7,
        6.450716010068534e-7,
        3.5681556458182576e-7,
        8.915180911364955e-7,
        4.825116671586764e-7,
        6.085934568687605e-7,
        2.665514453379096e-7,
        4.825116671369591e-7,
        5.012023883923566e-7,
        3.579609004096439e-7,
        3.5694355697284974e-7,
        4.010973918321395e-7,
        2.6655143993930035e-7,
        3.569435569725695e-7,
        4.932979085334835e-7,
        3.825690003094251e-7,
        4.1769086276646326e-7,
        4.010974090838818e-7,
        3.8256900030203775e-7,
        6.934989345839166e-7,
        3.9749045616575896e-7,
        2.665514453379096e-7,
        4.176912804637226e-7,
        3.974903777473192e-7,
        3.110529389050411e-7,
        6.450722230779338e-7,
        3.8149111891499177e-7,
        7.21743521217924e-7,
        4.825116671291909e-7,
        3.8149101473478905e-7,
        4.967670916194955e-7,
        5.308452868095867e-7,
        3.974904407506034e-7,
        7.217435212140966e-7,
        5.308452868085528e-7,
        1.2300548060468137e-6,
        7.264983392315584e-7,
        4.825116671369591e-7,
        3.974903777473192e-7,
        7.26499065736935e-7,
        5.664911883947897e-7,
        7.48679036760552e-7,
        2.9862397469647895e-7,
        6.346555382896915e-7,
        5.012026523401597e-7,
        2.986238929468554e-7,
        3.88800701720596e-7,
        4.157722711157456e-7,
        3.1105298748040755e-7,
        6.346553384937958e-7,
        4.157722646091357e-7,
        9.914803248681236e-7,
        5.664911883947898e-7,
        5.012023883923566e-7,
        3.110529389050411e-7,
        5.664911883947897e-7,
        7.740555064933794e-7,
    ],
    (16, 16),
)

@test isapprox(k1, kt1)
@test isapprox(sk1, skt1)
@test isposdef(k1)
@test isposdef(sk1)
@test isapprox(k1, k2)
@test isapprox(sk1, sk2)
@test !isapprox(k1, k3)
@test !isapprox(sk1, sk3)
@test !isposdef(k3)
@test !isposdef(sk3)
@test isapprox(k4, kt4)
@test isapprox(sk4, sk4)
@test isposdef(k4)
@test isposdef(sk4)
@test !isapprox(k1, k4)
@test !isapprox(sk1, sk4)

###########################################

asset_statistics!(
    portfolio::AbstractPortfolio;
    # # flags
    # calc_codep::Bool = true,
    # calc_cov::Bool = true,
    # calc_mu::Bool = true,
    # calc_kurt::Bool = true,
    # # cov_mtx
    # alpha::Real = 0.0,
    # cov_args::Tuple = (),
    # cov_est::CovarianceEstimator = StatsBase.SimpleCovariance(; corrected = true),
    # cov_func::Function = cov,
    # cov_kwargs::NamedTuple = (;),
    # cov_type::Symbol = portfolio.cov_type,
    # cov_weights::Union{AbstractWeights, Nothing} = nothing,
    # custom_cov::Union{AbstractMatrix, Nothing} = nothing,
    # denoise::Bool = false,
    # detone::Bool = false,
    # gs_threshold::Real = portfolio.gs_threshold,
    # jlogo::Bool = portfolio.jlogo,
    # kernel = ASH.Kernels.gaussian,
    # m::Integer = 10,
    # method::Symbol = :Fixed,
    # mkt_comp::Integer = 0,
    # n::Integer = 1000,
    # opt_args = (),
    # opt_kwargs = (;),
    # posdef_args::Tuple = (),
    # posdef_fix::Symbol = portfolio.posdef_fix,
    # posdef_func::Function = x -> x,
    # posdef_kwargs::NamedTuple = (;),
    # std_args::Tuple = (),
    # std_func::Function = std,
    # std_kwargs::NamedTuple = (;),
    # target_ret::Union{Real, AbstractVector{<:Real}} = 0.0,
    # # mean_vec
    # custom_mu::Union{AbstractVector, Nothing} = nothing,
    # mean_args::Tuple = (),
    # mean_func::Function = mean,
    # mean_kwargs::NamedTuple = (;),
    # mkt_ret::Union{AbstractVector, Nothing} = nothing,
    # mu_target::Symbol = :GM,
    # mu_type::Symbol = portfolio.mu_type,
    # mu_weights::Union{AbstractWeights, Nothing} = nothing,
    # rf::Real = 0.0,
    # # codep_dist_mtx
    # alpha_tail::Union{Real, Nothing} = isa(portfolio, HCPortfolio) ? portfolio.alpha_tail :
    #                                    nothing,
    # bins_info::Union{Symbol, Integer, Nothing} = isa(portfolio, HCPortfolio) ?
    #                                              portfolio.bins_info : nothing,
    # codep_type::Union{Symbol, Nothing} = isa(portfolio, HCPortfolio) ?
    #                                      portfolio.codep_type : nothing,
    # cor_args::Tuple = (),
    # cor_func::Function = cor,
    # cor_kwargs::NamedTuple = (;),
    # custom_cor::Union{AbstractMatrix, Nothing} = nothing,
    # dist_args::Tuple = (),
    # dist_func::Function = x -> sqrt.(clamp!((1 .- x) / 2, 0, 1)),
    # dist_kwargs::NamedTuple = (;),
    # custom_kurt::Union{AbstractMatrix, Nothing} = nothing,
    # custom_skurt::Union{AbstractMatrix, Nothing} = nothing,
    # uplo::Symbol = :L,
)

########################################
println("w1t = ", w1.weights, "\n")
println("w2t = ", w2.weights, "\n")
println("w3t = ", w3.weights, "\n")
println("w4t = ", w4.weights, "\n")
println("w5t = ", w5.weights, "\n")
println("w6t = ", w6.weights, "\n")
println("w7t = ", w7.weights, "\n")
println("w8t = ", w8.weights, "\n")
println("w9t = ", w9.weights, "\n")
println("w10t = ", w10.weights, "\n")
println("w11t = ", w11.weights, "\n")
println("w12t = ", w12.weights, "\n")
println("w13t = ", w13.weights, "\n")
println("w14t = ", w14.weights, "\n")
println("w15t = ", w15.weights, "\n")
println("w16t = ", w16.weights, "\n")
println("w17t = ", w17.weights, "\n")
println("w18t = ", w18.weights, "\n")
println("w19t = ", w19.weights, "\n")
#######################################

for rtol in [1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 2.5e-1, 5e-1, 1e0]
    a1, a2 = [
        1.7150154769600987e-21,
        8.666080739534902e-22,
        1.711513132434247e-21,
        1.857794837773291e-21,
        1.3333852360756072e-11,
        0.0,
        2.3590925212291668e-21,
        2.997524829964462e-11,
        1.8502685023366617e-17,
        5.06385081427147e-21,
        3.686442843995881e-21,
        1.9743753470184037e-21,
        1.0531835075583913e-21,
        4.859959612117148e-21,
        0.0,
        4.531223098562913e-11,
        8.189533305929652e-11,
        5.583213744580228e-21,
        5.244094318302363e-11,
        1.2977650473309283e-21,
    ],
    [
        1.7149792859546157e-21,
        8.66548275855857e-22,
        1.71147684291976e-21,
        1.857762618528853e-21,
        1.3333853940616244e-11,
        0.0,
        2.359074250825494e-21,
        2.9975251915976844e-11,
        1.8532720963928818e-17,
        5.083675479399401e-21,
        3.6808030970866095e-21,
        1.974388418397284e-21,
        1.0531929490588798e-21,
        4.856222321635003e-21,
        0.0,
        4.53122364522751e-11,
        8.189534276261004e-11,
        5.5806490077637644e-21,
        5.24409490029177e-11,
        1.2977754524772674e-21,
    ]
    if isapprox(a1, a2, rtol = rtol)
        println(", rtol = $(rtol)")
        break
    end
end

isapprox(1.0000027111955967, 1; atol = 3.0e-6)

portfolio = Portfolio(
    prices = prices,
    solvers = OrderedDict(
        :Clarabel => Dict(
            :solver => Clarabel.Optimizer,
            :params => Dict("verbose" => false, "max_step_fraction" => 0.75),
        ),
        :COSMO => Dict(:solver => COSMO.Optimizer, :params => Dict("verbose" => false)),
    ),
)
asset_statistics!(portfolio)

w1 = opt_port!(portfolio; class = :Classic, type = :RP, rm = :Kurt)
rc1 = risk_contribution(portfolio, type = :RP, rm = :Kurt)
lrc1, hrc1 = extrema(rc1)

portfolio.risk_budget = 1:size(portfolio.returns, 2)
w2 = opt_port!(portfolio; class = :Classic, type = :RP, rm = :Kurt)
rc2 = risk_contribution(portfolio, type = :RP, rm = :Kurt)
lrc2, hrc2 = extrema(rc2)

w1t = [
    0.03879158773899491,
    0.04946318916187915,
    0.03767536457743636,
    0.04975768359685481,
    0.03583384747996175,
    0.05474667190193154,
    0.02469826359420486,
    0.10506491736193022,
    0.031245766025529604,
    0.04312788495096333,
    0.12822307815405873,
    0.03170133005454372,
    0.026067725442004967,
    0.057123092045424234,
    0.03137705105386256,
    0.04155724092469867,
    0.044681796838160794,
    0.0754338209703899,
    0.03624092724713855,
    0.057188760880031476,
]

w2t = [
    0.004127710286387879,
    0.010592152386952021,
    0.012536905345418492,
    0.023303462236461917,
    0.01936823663730284,
    0.03214466953862615,
    0.018650835191729918,
    0.08347430641751365,
    0.026201862079995652,
    0.04168068597107915,
    0.1352680942007192,
    0.03614055044122551,
    0.030447496750462644,
    0.07180951106902754,
    0.03968594759203002,
    0.05644735602737195,
    0.07166639041345427,
    0.11896200641502389,
    0.06340744330857792,
    0.10408437769063927,
]

@test isapprox(w1.weights, w1t, rtol = 1.0e-5)
@test isapprox(w2.weights, w2t, rtol = 1.0e-5)
@test isapprox(hrc1 / lrc1, 1, atol = 1.6)
@test isapprox(hrc2 / lrc2, 20, atol = 3.2e0)
