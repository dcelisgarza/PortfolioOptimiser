using COSMO,
    CSV,
    DataFrames,
    LinearAlgebra,
    PortfolioOptimiser,
    Statistics,
    StatsBase,
    Test,
    TimeSeries

prices_assets  = TimeArray(CSV.File("./assets/stock_prices.csv"); timestamp = :date)
prices_factors = TimeArray(CSV.File("./assets/factor_prices.csv"); timestamp = :date)

rf = 1.0329^(1 / 252) - 1
l = 2.0

@testset "Asset constraints" begin end

@testset "Factor constraints" begin
    portfolio = Portfolio(; prices = prices_assets, f_prices = prices_factors)
    loadings = loadings_matrix(
        DataFrame(portfolio.f_returns, portfolio.f_assets),
        DataFrame(portfolio.returns, portfolio.assets),
        LoadingsSettings(; method = :BReg),
    )

    constraints = DataFrame(
        "Enabled" => [
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
        ],
        "Factor" => [
            "MTUM",
            "MTUM",
            "MTUM",
            "QUAL",
            "QUAL",
            "QUAL",
            "VLUE",
            "VLUE",
            "VLUE",
            "SIZE",
            "SIZE",
            "SIZE",
            "USMV",
            "USMV",
            "USMV",
        ],
        "Sign" => [
            "<=",
            "<=",
            ">=",
            ">=",
            ">=",
            "<=",
            "<=",
            "<=",
            ">=",
            ">=",
            ">=",
            "<=",
            "<=",
            ">=",
            "<=",
        ],
        "Value" => [
            0.55,
            0.9,
            0.2,
            0.2,
            0.5,
            0.7,
            -0.1,
            -0.3,
            -0.5,
            -0.2,
            -0.7,
            -0.1,
            0.2,
            0.6,
            0.73,
        ],
        "Relative Factor" => [
            "",
            "VLUE",
            "SIZE",
            "",
            "SIZE",
            "USMV",
            "",
            "USMV",
            "MTUM",
            "",
            "MTUM",
            "QUAL",
            "",
            "",
            "SIZE",
        ],
    )
    C, D = factor_constraints(constraints, loadings)

    loadingst = hcat(
        DataFrame(
            :ticker => [
                "GOOG",
                "AAPL",
                "FB",
                "BABA",
                "AMZN",
                "GE",
                "AMD",
                "WMT",
                "BAC",
                "GM",
                "T",
                "UAA",
                "SHLD",
                "XOM",
                "RRC",
                "BBY",
                "MA",
                "PFE",
                "JPM",
                "SBUX",
            ],
        ),
        DataFrame(
            reshape(
                [
                    0.0006682666783877028,
                    0.0008125085541546204,
                    0.0009938539577313578,
                    0.0008448251080905889,
                    0.0017791646483353075,
                    -0.0005632788650349695,
                    0.001738046978669652,
                    0.00033425409596189986,
                    0.0008913431138749996,
                    0.00046117682801699036,
                    0.0002458401993870664,
                    -0.0005357683629290428,
                    -0.001552593059063253,
                    -1.9438538649469838e-6,
                    -0.0011297716334776765,
                    0.001178183021578672,
                    0.0010624628566782079,
                    0.00035901438896399323,
                    0.0009055676318466468,
                    0.000618697117955252,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.026624010504930753,
                    -0.2614329387110636,
                    0.17373178882466736,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.1622273531418773,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.18704558888036088,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.34214288894365086,
                    0.0,
                    0.0,
                    0.4759572343739958,
                    0.0,
                    0.20947832327860058,
                    0.0,
                    0.46512629166678016,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.26762446801768025,
                    0.5882648692660363,
                    0.0,
                    0.0,
                    0.0,
                    -0.0469998531043761,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.2677805704229642,
                    -0.1957071228053125,
                    0.0,
                    0.0,
                    0.0,
                    -0.2693637060710647,
                    -0.06016206857452389,
                    0.0,
                    -0.24169692610064705,
                    -0.23411356595605096,
                    -0.21731935166210736,
                    0.0,
                    -0.09204546965378291,
                    0.0,
                    -0.33097845086566874,
                    0.0,
                    0.0,
                    0.0,
                    -0.057535605163043506,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    -0.10164210407325881,
                    0.0,
                    0.0,
                    -0.13261040097042645,
                    0.0,
                    0.0,
                    0.0,
                    0.0916256099434114,
                    0.0,
                    0.0,
                    0.41481713511157836,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    -0.6089091167169949,
                    -0.27210017033490924,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    -0.4748967098697935,
                    0.0,
                ],
                (20, 6),
            ),
            names(loadings)[2:end],
        ),
    )

    Ct = reshape(
        [
            -0.0,
            -0.0,
            0.0,
            0.0,
            0.0,
            0.0916256099434114,
            -0.0,
            0.0916256099434114,
            0.0,
            0.0,
            0.0,
            -0.0,
            -0.0916256099434114,
            0.0916256099434114,
            -0.0,
            -0.0,
            0.09204546965378291,
            0.0,
            0.09204546965378291,
            -0.0,
            -0.0,
            -0.0,
            0.0,
            -0.09204546965378291,
            -0.09204546965378291,
            0.09204546965378291,
            -0.0,
            0.0,
            -0.0,
            -0.0469998531043761,
            0.0,
            0.0,
            0.0,
            -0.0,
            0.0469998531043761,
            0.0469998531043761,
            -0.0469998531043761,
            0.0,
            0.0,
            -0.0,
            -0.0,
            0.0,
            -0.0,
            -0.0,
            0.33097845086566874,
            0.0,
            0.33097845086566874,
            0.41481713511157836,
            -0.0,
            0.41481713511157836,
            0.0,
            -0.33097845086566874,
            -0.33097845086566874,
            0.33097845086566874,
            -0.41481713511157836,
            0.41481713511157836,
            -0.026624010504930753,
            -0.026624010504930753,
            0.026624010504930753,
            0.0,
            0.0,
            -0.0,
            -0.0,
            -0.0,
            -0.026624010504930753,
            0.0,
            -0.026624010504930753,
            -0.0,
            -0.0,
            0.0,
            0.2614329387110636,
            0.2614329387110636,
            -0.2614329387110636,
            0.34214288894365086,
            0.34214288894365086,
            -0.34214288894365086,
            -0.0,
            -0.0,
            0.2614329387110636,
            0.0,
            0.2614329387110636,
            0.34214288894365086,
            -0.0,
            0.0,
            -0.17373178882466736,
            -0.17373178882466736,
            0.17373178882466736,
            0.0,
            0.0,
            -0.0,
            -0.0,
            -0.0,
            -0.17373178882466736,
            0.0,
            -0.17373178882466736,
            -0.0,
            -0.0,
            0.0,
            -0.0,
            -0.0,
            0.057535605163043506,
            0.0,
            0.057535605163043506,
            -0.0,
            -0.0,
            -0.0,
            0.0,
            -0.057535605163043506,
            -0.057535605163043506,
            0.057535605163043506,
            -0.0,
            0.0,
            -0.0,
            -0.0,
            0.0,
            0.4759572343739958,
            0.4759572343739958,
            -1.0848663510909906,
            -0.0,
            -0.6089091167169949,
            0.0,
            0.0,
            0.0,
            0.4759572343739958,
            0.6089091167169949,
            -0.6089091167169949,
            -0.0,
            0.2677805704229642,
            0.0,
            0.0,
            0.0,
            -0.27210017033490924,
            -0.2677805704229642,
            -0.5398807407578734,
            0.2677805704229642,
            0.0,
            0.0,
            -0.0,
            0.27210017033490924,
            -0.27210017033490924,
            -0.0,
            -0.1957071228053125,
            0.0,
            0.20947832327860058,
            0.20947832327860058,
            -0.20947832327860058,
            0.1957071228053125,
            0.1957071228053125,
            -0.1957071228053125,
            0.0,
            0.0,
            0.20947832327860058,
            -0.0,
            0.0,
            -0.1622273531418773,
            -0.1622273531418773,
            0.1622273531418773,
            0.0,
            0.0,
            -0.0,
            -0.0,
            -0.0,
            -0.1622273531418773,
            0.0,
            -0.1622273531418773,
            -0.0,
            -0.0,
            0.0,
            -0.0,
            -0.0,
            0.0,
            0.46512629166678016,
            0.46512629166678016,
            -0.46512629166678016,
            -0.0,
            -0.0,
            0.0,
            0.0,
            0.0,
            0.46512629166678016,
            -0.0,
            0.0,
            -0.0,
            -0.0,
            0.10164210407325881,
            0.0,
            0.10164210407325881,
            -0.0,
            -0.0,
            -0.0,
            0.0,
            -0.10164210407325881,
            -0.10164210407325881,
            0.10164210407325881,
            -0.0,
            0.0,
            -0.0,
            -0.2693637060710647,
            0.0,
            0.0,
            0.0,
            -0.0,
            0.2693637060710647,
            0.2693637060710647,
            -0.2693637060710647,
            0.0,
            0.0,
            -0.0,
            -0.0,
            0.0,
            -0.0,
            -0.06016206857452389,
            0.0,
            0.0,
            0.0,
            -0.0,
            0.06016206857452389,
            0.06016206857452389,
            -0.06016206857452389,
            0.0,
            0.0,
            -0.0,
            -0.0,
            0.0,
            -0.0,
            -0.0,
            0.13261040097042645,
            0.0,
            0.13261040097042645,
            -0.0,
            -0.0,
            -0.0,
            0.0,
            -0.13261040097042645,
            -0.13261040097042645,
            0.13261040097042645,
            -0.0,
            0.0,
            -0.0,
            -0.24169692610064705,
            0.0,
            0.26762446801768025,
            0.26762446801768025,
            -0.26762446801768025,
            0.24169692610064705,
            0.24169692610064705,
            -0.24169692610064705,
            0.0,
            0.0,
            0.26762446801768025,
            -0.0,
            0.0,
            -0.0,
            -0.23411356595605096,
            0.0,
            0.5882648692660363,
            0.5882648692660363,
            -1.0631615791358298,
            0.23411356595605096,
            -0.24078314391374253,
            -0.23411356595605096,
            0.0,
            0.0,
            0.5882648692660363,
            0.4748967098697935,
            -0.4748967098697935,
            -0.18704558888036088,
            -0.40436494054246824,
            0.18704558888036088,
            0.0,
            0.0,
            -0.0,
            0.21731935166210736,
            0.21731935166210736,
            -0.40436494054246824,
            0.0,
            -0.18704558888036088,
            -0.0,
            -0.0,
            0.0,
        ],
        (14, 20),
    )
    Dt = reshape(
        [-0.55, -0.9, 0.2, 0.2, 0.5, -0.7, 0.1, 0.3, -0.5, -0.2, -0.7, 0.1, -0.2, 0.6],
        (14,),
    )

    @test isapprox(loadingst[!, 2:end], loadings[!, 2:end])
    @test isapprox(C, Ct)
    @test isapprox(D, Dt)
end
