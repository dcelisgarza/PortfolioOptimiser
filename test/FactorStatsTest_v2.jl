using CovarianceEstimation, CSV, Clarabel, HiGHS, LinearAlgebra, OrderedCollections,
      PortfolioOptimiser, Statistics, StatsBase, Test, TimeSeries, Logging, DataFrames

prices_assets = TimeArray(CSV.File("./assets/stock_prices.csv"); timestamp = :date)
prices_factors = TimeArray(CSV.File("./assets/factor_prices.csv"); timestamp = :date)

rf = 1.0329^(1 / 252) - 1
l = 2.0

@testset "Loadings Matrix" begin
    portfolio = Portfolio(; prices = prices_assets, f_prices = prices_factors)
    nms = ["tickers", "const", "MTUM", "QUAL", "VLUE", "SIZE", "USMV"]

    opt = ForwardReg()
    loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008407013969662878, 0.0017791646483353075, -0.0006069768500075827,
                 0.001738046978669652, 0.00033425409596189986, 0.0008641141675397427,
                 0.0004021965063144702, 0.00024611494888044164, -0.0005357683629290428,
                 -0.001552593059063253, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003575774384995594,
                 0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10297765603226086,
                 0.0, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0, 0.0, 0.0,
                 -0.06739388297308944, 0.0, -0.09204546965378291, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10164210407325881,
                 -0.3265706503736942, 0.0, -0.13261040097042645, 0.0, 0.0, 0.0,
                 0.0916256099434114, 0.0, 0.0, 0.12474407131296936, 0.0, 0.0, 0.0, 0.0,
                 -0.07813119508111976, 0.0, 0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.06760938082816292, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AIC()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008448251080905888, 0.0017791646483353075, -0.0005705023313015225,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.00046117682801699036, 0.00023380565458931617, -0.0005357683629290428,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003400639408427236,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2705732482923092, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17938541886894335,
                 0.0, 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.0, 0.4759572343739958, 0.0, 0.0, 0.0, 1.5152358143137712, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.5882648692660363, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0,
                 -0.18588533550714395, 0.0, 0.0, 0.0, 0.2677805704229642,
                 -0.1368807270072514, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0,
                 -0.1688494427521949, -0.23411356595605096, -0.21731935166210736, 0.0,
                 -0.09204546965378291, 0.0, -0.33097845086566885, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, -0.46343683351821613,
                 -0.10164210407325881, -0.3265706503736942, 0.0, -0.13261040097042645, 0.0,
                 0.0, 0.0, 0.0916256099434114, 0.0, 0.0, 0.4148171351115785, 0.0, 0.0, 0.0,
                 0.0, -0.6089091167169949, -0.27210017033490924, 0.1828375829856837, 0.0,
                 -0.9158091732143825, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AICC()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008448251080905888, 0.0017791646483353075, -0.0005705023313015225,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.00046117682801699036, 0.00023380565458931617, -0.0005357683629290428,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003400639408427236,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2705732482923092, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17938541886894335,
                 0.0, 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.0, 0.4759572343739958, 0.0, 0.0, 0.0, 1.5152358143137712, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.5882648692660363, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0,
                 -0.18588533550714395, 0.0, 0.0, 0.0, 0.2677805704229642,
                 -0.1368807270072514, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0,
                 -0.1688494427521949, -0.23411356595605096, -0.21731935166210736, 0.0,
                 -0.09204546965378291, 0.0, -0.33097845086566885, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, -0.46343683351821613,
                 -0.10164210407325881, -0.3265706503736942, 0.0, -0.13261040097042645, 0.0,
                 0.0, 0.0, 0.0916256099434114, 0.0, 0.0, 0.4148171351115785, 0.0, 0.0, 0.0,
                 0.0, -0.6089091167169949, -0.27210017033490924, 0.1828375829856837, 0.0,
                 -0.9158091732143825, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = BIC()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008407013969662878, 0.0017791646483353075, -0.0006069768500075827,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.0004021965063144702, 0.00024611494888044164, -0.0005357683629290428,
                 -0.001552593059063253, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003575774384995594,
                 0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0, 0.4759572343739958,
                 0.0, 0.0, 0.0, 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.10297765603226086, 0.0, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0,
                 0.0, 0.0, -0.06739388297308944, 0.0, -0.09204546965378291, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.10164210407325881, -0.3265706503736942, 0.0, -0.13261040097042645, 0.0,
                 0.0, 0.0, 0.0916256099434114, 0.0, 0.0, 0.12474407131296936, 0.0, 0.0, 0.0,
                 0.0, -0.6089091167169949, 0.0, 0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.06760938082816292, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = R2()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006605270346146956, 0.0007774242176882836, 0.0009370531829272047,
                 0.0008561485179286095, 0.0017762385187782336, -0.0005490480003969219,
                 0.001795187751077693, 0.00033117861888304546, 0.000886487183785207,
                 0.000485837378175358, 0.00023840334761025575, -0.0005300737742189842,
                 -0.0013719710233941755, -1.7316400621600023e-5, -0.0011626112121448753,
                 0.0011435095930696592, 0.0010475815408063694, 0.0003607202174155234,
                 0.000905002327242427, 0.0006335355748513342, -0.04507437059598512,
                 0.15247497298230217, 0.09603781841346652, -0.13526134186512948,
                 0.1902851254919559, -0.2037413548433964, 0.288689517996145,
                 0.09950211625811438, 0.020356052145108897, -0.17554176795392434,
                 -0.010596628752833528, 0.2175546149218007, -0.3348003264155173,
                 0.028730286176449786, 0.5609679140708942, 0.25974960885539,
                 0.1791136832070494, 0.1576174054666974, 0.01003594721236305,
                 0.20239510712940292, -0.08068093674781521, -0.1720437664966112,
                 -0.21548715966283602, 0.09575791638320814, -0.11454260932734896,
                 0.6859818842815929, 0.7330260332011653, 0.3019875958502012,
                 0.6531478892732593, 0.31691645318061845, 0.14530827117445438,
                 -0.3756027355574984, 1.50267884880278, 0.17591540350812612,
                 0.22181812002706483, 0.23464324623056007, 0.028790824760029497,
                 0.3291712644048697, 0.5820377566944817, 0.19856123464947448,
                 -0.07356747335142304, -0.034416947722216276, -0.1236919880155243,
                 -0.04695240036615764, 0.013271331872104516, -0.16331736469449784,
                 -0.15879312984621063, -0.15984372366879807, -0.15352705923754084,
                 0.19020696504724202, -0.18766345514624042, 0.3333280955357791,
                 0.2243925669722518, -0.10651349190692556, -0.3598564789115531,
                 -0.2766030283107483, -0.06262549687373214, -0.2589882965998035,
                 -0.2293083794155016, -0.26607818377911097, -0.00265749847204974,
                 -0.09785890326042787, 0.05548548974780297, -0.3059941081245066,
                 -0.07230812801559372, -0.08772917399626662, -0.20091330981361358,
                 -0.038107276136239654, -0.0301307597186033, -0.0029331243629587907,
                 -0.0030846362210230314, -0.3745504891367562, -0.5375459165227069,
                 -0.13451695124930121, -0.24243263320624733, 0.08750120363596908,
                 -0.1178110493382135, 0.005305723184252505, -0.01034554138147961,
                 0.010462255486823885, 0.3156618161151268, 0.07541020723900897,
                 0.22385463178341566, 0.4967783027694937, -0.04845885470690798,
                 -0.22924216223929628, -0.6879398855172563, -0.30640432745736895,
                 -0.6411804450194915, -0.3318959121852137, 0.09004448842949532,
                 0.33428341526935434, -0.6773456061966712, -0.05745465207553017,
                 -0.6112534458900131, -0.40039463845646667, -0.19807950081819095,
                 -0.26838621903106186, -0.47591858170378665, -0.21718778672737993]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AdjR2()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006578842498376756, 0.0008125085541546204, 0.0009544324464201135,
                 0.0008448251080905888, 0.0017791646483353075, -0.0005534582683851492,
                 0.001738046978669652, 0.00033425409596189986, 0.0008871437642839244,
                 0.00046117682801699036, 0.00023380565458931617, -0.0005064348607251292,
                 -0.0014180446758150116, -1.0903288485071947e-5, -0.0011729012942708831,
                 0.0011237784536619372, 0.0010624628566782079, 0.0003609869435232479,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2063391478113464, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.2036038528484018, 0.0, 0.0, 0.6143288994174554,
                 0.18003577844734933, 0.0, 0.15777451592095218, 0.0, 0.18704558888036088,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.6886586900825836, 0.0, 0.0, 0.6658929551670347,
                 0.0, 0.0, 0.0, 1.5152358143137712, 0.08481636839940015, 0.0, 0.0, 0.0,
                 0.32900937537809516, 0.5882648692660363, 0.0, -0.11545376480706666, 0.0,
                 -0.15715150650747267, 0.0, 0.0, -0.2041249049130362, 0.0, 0.0,
                 -0.1675283285693941, 0.2677805704229642, -0.1368807270072514,
                 0.22501801913844097, 0.0, 0.0, -0.2878814081814334, -0.20446885830467773,
                 0.0, -0.2565203204139224, -0.23411356595605096, -0.21731935166210736, 0.0,
                 -0.09204546965378291, 0.0, -0.33097845086566885, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, -0.34876549248126765,
                 -0.46343683351821613, -0.17272770121762607, -0.24418382874528208, 0.0,
                 -0.13261040097042645, 0.0, 0.0, 0.0, 0.2142893868685247, 0.0,
                 0.181867437019944, 0.4148171351115785, 0.0, -0.2626706043495686, 0.0, 0.0,
                 -0.642731243953271, -0.27210017033490924, 0.1828375829856837, 0.0,
                 -0.9158091732143825, 0.0, -0.5022419089711825, 0.0, 0.0,
                 -0.26636451915360293, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    ################################################################
    opt = BackwardReg()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008448251080905889, 0.0017791646483353075, -0.0005632788650349695,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.00046117682801699036, 0.0002458401993870664, -0.0005357683629290428,
                 -0.001552593059063253, -1.9438538649469838e-6, -0.0011297716334776765,
                 0.001178183021578672, 0.0010624628566782079, 0.00035901438896399323,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2614329387110636, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.34214288894365086, 0.0,
                 0.0, 0.4759572343739958, 0.0, 0.20947832327860058, 0.0,
                 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.26762446801768025,
                 0.5882648692660363, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.2677805704229642, -0.1957071228053125, 0.0, 0.0, 0.0,
                 -0.2693637060710647, -0.06016206857452389, 0.0, -0.24169692610064705,
                 -0.23411356595605096, -0.21731935166210736, 0.0, -0.09204546965378291, 0.0,
                 -0.33097845086566874, 0.0, 0.0, 0.0, -0.057535605163043506, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.10164210407325881, 0.0, 0.0, -0.13261040097042645, 0.0, 0.0,
                 0.0, 0.0916256099434114, 0.0, 0.0, 0.41481713511157836, 0.0, 0.0, 0.0, 0.0,
                 -0.6089091167169949, -0.27210017033490924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AIC()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.000709977675346524, 0.0007746382686595056, 0.000975348480044519,
                 0.0008448251080905889, 0.0017956125285473888, -0.0005705023313015225,
                 0.001845375649197695, 0.00034023703034132685, 0.0008913431138749996,
                 0.00046117682801699036, 0.0002458401993870664, -0.00045352998172103014,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011855254271186657,
                 0.00115449512163721, 0.0010624628566782079, 0.0003609869435232479,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.2705732482923092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.6088892622598946, 0.0, 0.0, 0.15777451592095218, 0.0,
                 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.3629195919075172, 0.4759572343739958, 0.0, 0.20947832327860058, 0.0,
                 1.5152358143137712, 0.0, 0.0, 0.0, 0.0, 0.32900937537809516,
                 0.5882648692660363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.18588533550714395,
                 0.0, -0.1774978841176457, 0.0, 0.2677805704229642, -0.1957071228053125,
                 0.34473167286296263, 0.0, 0.0, -0.39907363096671844, 0.0, 0.0,
                 -0.2565203204139224, -0.23411356595605096, -0.21731935166210736, 0.0, 0.0,
                 0.0, -0.33097845086566874, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.286196348705267, -0.46343683351821613, -0.10164210407325881, 0.0, 0.0,
                 -0.13261040097042645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.41481713511157836,
                 0.0, 0.0, 0.0, -0.2707354341978757, -0.6089091167169949,
                 -0.27210017033490924, 0.0, 0.0, -0.9158091732143825, 0.0,
                 -0.591646027027249, 0.0, 0.0, -0.26636451915360293, -0.4748967098697935,
                 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AICC()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.000709977675346524, 0.0007746382686595056, 0.000975348480044519,
                 0.0008448251080905889, 0.0017956125285473888, -0.0005705023313015225,
                 0.001845375649197695, 0.00034023703034132685, 0.0008913431138749996,
                 0.00046117682801699036, 0.0002458401993870664, -0.00045352998172103014,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011855254271186657,
                 0.00115449512163721, 0.0010624628566782079, 0.0003609869435232479,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.2705732482923092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.6088892622598946, 0.0, 0.0, 0.15777451592095218, 0.0,
                 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.3629195919075172, 0.4759572343739958, 0.0, 0.20947832327860058, 0.0,
                 1.5152358143137712, 0.0, 0.0, 0.0, 0.0, 0.32900937537809516,
                 0.5882648692660363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.18588533550714395,
                 0.0, -0.1774978841176457, 0.0, 0.2677805704229642, -0.1957071228053125,
                 0.34473167286296263, 0.0, 0.0, -0.39907363096671844, 0.0, 0.0,
                 -0.2565203204139224, -0.23411356595605096, -0.21731935166210736, 0.0, 0.0,
                 0.0, -0.33097845086566874, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.286196348705267, -0.46343683351821613, -0.10164210407325881, 0.0, 0.0,
                 -0.13261040097042645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.41481713511157836,
                 0.0, 0.0, 0.0, -0.2707354341978757, -0.6089091167169949,
                 -0.27210017033490924, 0.0, 0.0, -0.9158091732143825, 0.0,
                 -0.591646027027249, 0.0, 0.0, -0.26636451915360293, -0.4748967098697935,
                 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = BIC()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.000709977675346524, 0.0007746382686595056, 0.000975348480044519,
                 0.0008974890088837409, 0.0017956125285473888, -0.0005706669410836566,
                 0.001845375649197695, 0.0003105822107311081, 0.0008913431138749996,
                 0.0004427423929519425, 0.0002631446419061819, -0.0004355469454567747,
                 -0.0013430732876448985, -4.376248452712736e-5, -0.0012358294979835974,
                 0.00115449512163721, 0.0010079029335960474, 0.00035901438896399323,
                 0.0008621888482796806, 0.0006486846462746479, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4759572343739958, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.26762446801768025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.24169692610064705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, -0.6089091167169949, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = R2()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006605270346146956, 0.0007774242176882835, 0.0009370531829272047,
                 0.0008561485179286097, 0.0017762385187782331, -0.0005490480003969219,
                 0.001795187751077693, 0.00033117861888304535, 0.0008864871837852069,
                 0.00048583737817535814, 0.00023840334761025575, -0.0005300737742189843,
                 -0.0013719710233941755, -1.7316400621600047e-5, -0.0011626112121448753,
                 0.0011435095930696594, 0.0010475815408063692, 0.0003607202174155234,
                 0.0009050023272424269, 0.0006335355748513344, -0.045074370595985465,
                 0.15247497298230228, 0.09603781841346641, -0.13526134186512964,
                 0.19028512549195592, -0.2037413548433964, 0.288689517996145,
                 0.09950211625811443, 0.020356052145108806, -0.1755417679539243,
                 -0.0105966287528336, 0.21755461492180087, -0.3348003264155161,
                 0.028730286176449873, 0.5609679140708937, 0.2597496088553898,
                 0.17911368320704973, 0.1576174054666974, 0.01003594721236287,
                 0.2023951071294028, -0.0806809367478154, -0.1720437664966117,
                 -0.21548715966283596, 0.0957579163832087, -0.11454260932734849,
                 0.6859818842815929, 0.733026033201166, 0.30198759585020196,
                 0.6531478892732594, 0.31691645318061873, 0.14530827117445455,
                 -0.3756027355574993, 1.5026788488027794, 0.17591540350812607,
                 0.22181812002706874, 0.23464324623056168, 0.028790824760028776,
                 0.3291712644048697, 0.5820377566944815, 0.19856123464947423,
                 -0.073567473351423, -0.03441694772221593, -0.1236919880155243,
                 -0.04695240036615811, 0.013271331872104029, -0.16331736469449784,
                 -0.15879312984621186, -0.15984372366879857, -0.15352705923754084,
                 0.190206965047242, -0.18766345514624042, 0.3333280955357793,
                 0.22439256697225132, -0.10651349190692569, -0.3598564789115549,
                 -0.2766030283107488, -0.06262549687373202, -0.2589882965998035,
                 -0.22930837941550158, -0.26607818377911086, -0.002657498472049806,
                 -0.09785890326042801, 0.05548548974780297, -0.30599410812450634,
                 -0.07230812801559358, -0.08772917399626662, -0.20091330981361316,
                 -0.03810727613623948, -0.0301307597186033, -0.0029331243629587013,
                 -0.0030846362210230085, -0.3745504891367561, -0.537545916522707,
                 -0.1345169512493009, -0.24243263320624764, 0.08750120363596914,
                 -0.11781104933821343, 0.005305723184252505, -0.010345541381479657,
                 0.010462255486823849, 0.3156618161151275, 0.07541020723900915,
                 0.22385463178341575, 0.49677830276949353, -0.04845885470690811,
                 -0.22924216223929628, -0.687939885517256, -0.30640432745736956,
                 -0.6411804450194915, -0.3318959121852142, 0.0900444884294952,
                 0.3342834152693548, -0.6773456061966712, -0.057454652075530334,
                 -0.6112534458900147, -0.4003946384564678, -0.19807950081819076,
                 -0.26838621903106186, -0.4759185817037862, -0.2171877867273796]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AdjR2()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006578842498376756, 0.0007841952298179896, 0.0009544324464201135,
                 0.0008448251080905889, 0.0017956125285473888, -0.0005534582683851492,
                 0.001822946586668907, 0.00034023703034132685, 0.0008871437642839244,
                 0.00048568992592094634, 0.0002458401993870664, -0.0005003851266011519,
                 -0.0014180446758150116, -1.0903288485071947e-5, -0.0011855254271186657,
                 0.001123778453661937, 0.001052679682192032, 0.0003609869435232479,
                 0.0009055676318466468, 0.0006340615270329902, 0.0, 0.1734542732738663, 0.0,
                 0.0, 0.0, -0.2063391478113464, 0.0, 0.0, 0.0, -0.17562862218379008, 0.0,
                 0.0, 0.0, 0.0, 0.6088892622598946, 0.18003577844734905,
                 0.16899770884632118, 0.15777451592095218, 0.0, 0.2027049102712144, 0.0,
                 -0.16441071542895827, 0.0, 0.0, 0.0, 0.6886586900825836,
                 0.6251873618824249, 0.3629195919075172, 0.6658929551670347,
                 0.3170059491139811, 0.20947832327860058, 0.0, 1.5152358143137712,
                 0.08481636839940047, 0.0, 0.0, 0.0, 0.32900937537809516,
                 0.5882648692660363, 0.19824200873062883, -0.11545376480706655, 0.0,
                 -0.15715150650747267, 0.0, 0.0, -0.2041249049130362, 0.0,
                 -0.1774978841176457, -0.1675283285693941, 0.1888426117203485,
                 -0.1957071228053125, 0.23960292354068619, 0.0, 0.0, -0.39907363096671844,
                 -0.2044688583046774, 0.0, -0.2565203204139224, -0.23411356595605096,
                 -0.2612116280815347, 0.0, -0.10367274107064804, 0.0, -0.33097845086566874,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.36941602983235183,
                 -0.46343683351821613, -0.1727277012176264, 0.0, 0.0, -0.14488227110529303,
                 0.0, 0.0, 0.0, 0.21428938686852453, 0.0, 0.181867437019944,
                 0.41481713511157836, 0.0, -0.2626706043495686, -0.5693600754090178,
                 -0.2707354341978757, -0.642731243953271, -0.333013553825995, 0.0,
                 0.26906461993536374, -0.9158091732143825, 0.0, -0.591646027027249, 0.0,
                 -0.19676044991186897, -0.26636451915360293, -0.4748967098697935,
                 -0.21320123486609163]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt = DimensionReductionReg()
    @time loadings = loadings_matrix2(DataFrame(portfolio.f_returns, portfolio.f_assets),
                                      DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006662517554895613, 0.0007849399521007353, 0.0009459643095974261,
                 0.0008592165739551059, 0.0017810088172303237, -0.0005785685052765102,
                 0.0017612947636060521, 0.00031520900097339053, 0.0008537176877854478,
                 0.00047237916398566173, 0.00023196965409296732, -0.0005054162297035768,
                 -0.001428622056331956, -2.5004548117932965e-5, -0.001179636183792172,
                 0.0011274045369944025, 0.0010443935920757378, 0.00034316200087855785,
                 0.0008756515571520005, 0.0006211971816987232, -0.06480893184671573,
                 0.1265663349283535, 0.0653189102028268, -0.1458377072284466,
                 0.1738406998081868, -0.10197670562589776, 0.40552722097762495,
                 0.15455342961953245, 0.13332079577168368, -0.12914789861819367,
                 0.011581940571448275, 0.1325538204431709, -0.13950988276499687,
                 0.05523327575227011, 0.6196572987779648, 0.315267811840457,
                 0.1901033490552249, 0.2181450202232006, 0.1112154776675105,
                 0.24492867002761706, 0.03621442191787707, -0.018576988118456914,
                 -0.03352731026571275, 0.15840577598426964, -0.017135982753150723,
                 0.0831909218360671, 0.04095160488367174, -0.02410240121837963,
                 -0.01598551861123954, 0.04210781026291533, 0.01393611737205344,
                 0.12788949977560313, 0.3458988137936377, 0.01892805360877195,
                 -0.12582156590453195, -0.09421231675663497, -0.03630517178213051,
                 -0.02935696159653079, -0.017287323397846218, -0.05338133590717174,
                 -0.11792470271706608, -0.09265160448044046, -0.19273865391548436,
                 -0.07072481964191567, -0.023690683780219036, 0.06541829500950375,
                 0.10382212284974605, -0.036105288208929893, 0.10038297096845952,
                 0.2944861267239948, -0.13781284666197127, 0.14227242984111085,
                 0.6633454725811263, -0.04694291556860384, -0.22794077702668802,
                 -0.15181516844961981, -0.03792410511305874, -0.1229408184421549,
                 -0.0018878868853721012, -0.17047580472220158, 0.007948848158307329,
                 -0.08393429696037787, 0.07199537737330615, -0.30030983697667524,
                 -0.06347006586041139, -0.14242261919650265, -0.26370777286611385,
                 -0.06769462315395024, -0.09084369945363686, -0.027867525155885045,
                 -0.015004515818550985, -0.3288667833455897, -0.6425048316279028,
                 -0.14876099197615023, -0.27397526290127255, 0.057662926631842935,
                 -0.12371744897166057, -0.027224863873640707, -0.06472451430464975,
                 -0.01239742230337165, 0.2429776134867728, -0.020013687633151846,
                 0.11071406987599973, 0.45782457720286424, -0.10902518568940027,
                 0.14556639266862656, -0.25761588843203403, -0.10364528131083896,
                 -0.2251209131507337, -0.16102302797620519, 0.17173019738912343,
                 0.021217677908348307, 0.04192704432402359, 0.040158294070653806,
                 -0.39509504865053635, -0.1959159949203974, -0.15760355158485595,
                 -0.045457451592167034, -0.10326507296810955, -0.06053276587733206]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)
end
