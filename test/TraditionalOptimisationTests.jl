using Test,
    PortfolioOptimiser,
    DataFrames,
    TimeSeries,
    CSV,
    Dates,
    ECOS,
    SCS,
    Clarabel,
    COSMO,
    OrderedCollections,
    LinearAlgebra,
    StatsBase

A = TimeArray(CSV.File("./assets/stock_prices.csv"), timestamp = :date)
Y = percentchange(A)
RET = dropmissing!(DataFrame(Y))
rf = 1.0329^(1 / 252) - 1
l = 2.0
type = :trad

@testset "mv" begin
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)

    rm = :mv

    w11 = [
        0.00790101350930099,
        0.0306909139358808,
        0.010506322670541511,
        0.027487810990731512,
        0.012278574123481116,
        0.033410647094723245,
        5.992768702616961e-10,
        0.1398486652999066,
        1.0318412667826644e-9,
        1.1506529577820253e-8,
        0.2878239722245232,
        6.544625217911222e-10,
        4.93689273689815e-10,
        0.1252846767367913,
        2.4717046303259267e-9,
        0.015084330918903146,
        1.814161154983086e-8,
        0.19312632144038927,
        1.2981261894646573e-9,
        0.11655671485758536,
    ]
    w12 = [
        7.501098494991323e-9,
        1.0064670665034103e-8,
        1.1722347049257423e-8,
        1.0361728384158447e-8,
        0.7742138078975956,
        3.1023452209126238e-9,
        0.10997534056425429,
        7.085470209215128e-9,
        1.1532235426098252e-8,
        6.972409318059648e-9,
        6.650081562400164e-9,
        2.953876334873929e-9,
        2.162908256197495e-9,
        4.5301912036774246e-9,
        2.128892154621845e-9,
        0.11581072064765068,
        1.4678173585918143e-8,
        7.408376181540708e-9,
        1.3081152141411003e-8,
        8.954543362088613e-9,
    ]
    w13 = [
        2.374679736183779e-9,
        4.939301272870657e-9,
        6.179061867835019e-9,
        4.034411541161419e-9,
        0.5180871979643897,
        8.070325177367361e-10,
        0.06365369306001793,
        4.3349884009920866e-9,
        5.452105198932873e-9,
        2.5299877405583313e-9,
        4.118309846310807e-9,
        6.403157613827995e-10,
        4.338684204098137e-10,
        1.4266510957251872e-9,
        4.641523581003893e-10,
        0.14327007654199483,
        0.19648906566805555,
        4.3761672024213315e-9,
        0.07849992010817639,
        4.5463326801949395e-9,
    ]
    w14 = [
        1.5192065610514992e-11,
        1.7722471226445733e-11,
        2.9669315137971204e-11,
        2.4155024681950277e-11,
        7.59468703964738e-9,
        4.471042028698165e-12,
        0.9999999921281696,
        7.096032846356474e-12,
        2.025110689901504e-11,
        8.759180650670239e-12,
        6.652117745262745e-12,
        4.483930062795914e-12,
        4.799732666967364e-12,
        5.010418115419259e-12,
        4.745332577894867e-12,
        4.8538726608548216e-11,
        3.238920124696666e-11,
        7.938033081344488e-12,
        2.2053788083893776e-11,
        1.3216026591344278e-11,
    ]
    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1e-5
    @test rmsd(w13, w23) < 1e-5
    @test rmsd(w14, w24) < 1e-7

    w11 = [
        0.00790101350930099,
        0.0306909139358808,
        0.010506322670541511,
        0.027487810990731512,
        0.012278574123481116,
        0.033410647094723245,
        5.992768702616961e-10,
        0.1398486652999066,
        1.0318412667826644e-9,
        1.1506529577820253e-8,
        0.2878239722245232,
        6.544625217911222e-10,
        4.93689273689815e-10,
        0.1252846767367913,
        2.4717046303259267e-9,
        0.015084330918903146,
        1.814161154983086e-8,
        0.19312632144038927,
        1.2981261894646573e-9,
        0.11655671485758536,
    ]
    w12 = [
        1.0865353755842134e-7,
        2.0686588717409895e-7,
        2.7187228304113667e-7,
        2.0072734321853616e-7,
        0.7186482205643473,
        3.586615839912499e-8,
        0.0986154275914106,
        1.241580400451212e-7,
        3.0436884512675934e-7,
        1.088247045474315e-7,
        1.112603543141629e-7,
        3.1508000068382684e-8,
        2.222968616538749e-8,
        5.931283202136737e-8,
        2.173470660006859e-8,
        0.155173188146538,
        0.02755989731852978,
        1.3508443743246354e-7,
        1.3614308668529052e-6,
        1.6248149155617866e-7,
    ]
    w13 = [
        6.855095326572051e-6,
        0.00017172239690563856,
        0.0038555391801365674,
        2.143004752616271e-5,
        0.44500402816108947,
        1.8152494753280122e-6,
        0.0530854298623821,
        0.01112265539105882,
        1.1115099133313281e-5,
        7.943733622637706e-6,
        0.0002625353133695802,
        1.3338274727547277e-6,
        9.698302908052664e-7,
        3.7126808251988777e-6,
        9.44699303794041e-7,
        0.13922569809430452,
        0.21448393215354267,
        0.0002952249055260894,
        0.13232670442156164,
        0.0001104098571462203,
    ]
    w14 = [
        2.85898052025261e-10,
        3.228570520084843e-10,
        3.96885303999293e-10,
        3.6151119117976806e-10,
        0.8503207438320458,
        1.3091890174421828e-10,
        0.14967925108373412,
        2.2266817711863868e-10,
        3.578136311569646e-10,
        2.430092800863492e-10,
        2.1336134958599728e-10,
        1.3701726564971077e-10,
        1.0011479238014472e-10,
        1.7239200605803413e-10,
        9.960662977431538e-11,
        6.90047353140167e-10,
        4.4818671820098014e-10,
        2.33945765127216e-10,
        3.813924242288859e-10,
        2.865940556541881e-10,
    ]
    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights
    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1e-4
    @test rmsd(w13, w23) < 6e-3
    @test rmsd(w14, w24) < 1e-4

    w11 = [
        0.00790101350930099,
        0.0306909139358808,
        0.010506322670541511,
        0.027487810990731512,
        0.012278574123481116,
        0.033410647094723245,
        5.992768702616961e-10,
        0.1398486652999066,
        1.0318412667826644e-9,
        1.1506529577820253e-8,
        0.2878239722245232,
        6.544625217911222e-10,
        4.93689273689815e-10,
        0.1252846767367913,
        2.4717046303259267e-9,
        0.015084330918903146,
        1.814161154983086e-8,
        0.19312632144038927,
        1.2981261894646573e-9,
        0.11655671485758536,
    ]
    w12 = [
        1.315015450408368e-9,
        2.5569969088173495e-9,
        3.2848585681829983e-9,
        2.415839535140197e-9,
        0.7207185008699422,
        4.214879579614106e-10,
        0.09835548176963889,
        1.5542515887798901e-9,
        3.729782644427829e-9,
        1.3295817491560547e-9,
        1.388763754161527e-9,
        3.705725275704055e-10,
        2.521544891441231e-10,
        7.154212396901733e-10,
        2.4979939717861087e-10,
        0.1550534383573205,
        0.025872538818152355,
        1.6894699154777678e-9,
        1.6889096272823596e-8,
        2.0218541540301808e-9,
    ]
    w13 = [
        3.5379549415042476e-9,
        1.0875979548667672e-8,
        1.4071917588238513e-8,
        8.228849778539734e-9,
        0.48941829873075493,
        1.0581922819515598e-9,
        0.058337193245876315,
        1.1157269577897694e-8,
        6.978121275865596e-9,
        4.032629340398236e-9,
        8.367592140519154e-9,
        8.203007150891988e-10,
        5.956884940425251e-10,
        2.00603917076689e-9,
        5.766499624947155e-10,
        0.14032716520895433,
        0.21337786390770655,
        9.556458677811914e-9,
        0.09853938790242223,
        9.140642129470356e-9,
    ]
    w14 = [
        5.572234280636143e-12,
        6.2577610721475044e-12,
        7.80856647073791e-12,
        7.0310636849368874e-12,
        0.8533951447515135,
        2.372412685580246e-12,
        0.14660485515191704,
        4.210456213977918e-12,
        6.789275907086024e-12,
        4.566909792245081e-12,
        4.040076957903744e-12,
        2.4655779176383524e-12,
        1.7223062268928809e-12,
        3.197669196657552e-12,
        1.7515788729082566e-12,
        1.2784956162245935e-11,
        8.759115642694511e-12,
        4.44077647544962e-12,
        7.27702202443673e-12,
        5.5217229111629075e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights
    @test rmsd(w11, w21) < 1e-4
    @test rmsd(w12, w22) < 1e-6
    @test rmsd(w13, w23) < 1e-6
    @test rmsd(w14, w24) < 1e-7
end

@testset "msv" begin
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)

    rm = :msv

    w11 = [
        2.55758354864312e-11,
        0.049737933019557645,
        1.3014700073272225e-11,
        0.0029777224539362067,
        0.0025509059694021636,
        0.0201330430354537,
        8.397918006915536e-13,
        0.1280946321089455,
        2.270551221852937e-12,
        3.059427039464877e-12,
        0.29957704078280734,
        3.2275482148862498e-12,
        1.4589123785012587e-12,
        0.12069607876051516,
        0.012266320099222476,
        0.009663147476582737,
        1.610951395799657e-11,
        0.2292760516042169,
        2.8487748300041965e-12,
        0.12502712462095514,
    ]
    w12 = [
        1.9156653261040654e-10,
        0.05530892517886745,
        1.8207787819858364e-10,
        0.0042753961376044885,
        0.03390811748805293,
        1.7514163524383542e-10,
        2.1440183312559418e-11,
        0.12521696144034022,
        5.723675318626706e-11,
        6.48366010575146e-11,
        0.29837124853503444,
        3.3294773632339516e-11,
        1.931116699761228e-11,
        0.1072434224473909,
        0.0027603560012123274,
        0.021120535368443192,
        0.005355512144905968,
        0.22898955441834898,
        8.401612007629805e-11,
        0.11744997001087748,
    ]
    w13 = [
        9.607244670198283e-13,
        2.391137555008359e-12,
        1.8922378269442666e-12,
        1.1313327665810094e-12,
        0.6665999471445081,
        2.3334981438405056e-13,
        0.03791833955846937,
        1.9095293384972558e-12,
        2.353045340592011e-12,
        9.34156262240138e-13,
        2.472837754753188e-12,
        1.6272296653923608e-13,
        7.367793241732568e-14,
        5.990452133427442e-13,
        8.504687243647897e-14,
        0.17184265886747102,
        0.10259234079986289,
        2.5939306665781046e-12,
        0.02104671360990669,
        1.9890215642933244e-12,
    ]
    w14 = [
        5.1608094762415435e-11,
        5.207032566247801e-11,
        3.782701076683847e-11,
        5.7306423152006965e-11,
        4.454447352632455e-9,
        4.512526606836864e-11,
        0.9999999946698693,
        5.479796043404423e-11,
        5.86551194224155e-11,
        5.742197185891196e-11,
        5.541951271588821e-11,
        4.3846453202089875e-11,
        3.234749500702867e-11,
        5.2403775872871985e-11,
        3.4954868529747976e-11,
        5.234152591865969e-11,
        3.1546432022118925e-11,
        5.5618418746024516e-11,
        5.0220204576520237e-11,
        5.217247326479619e-11,
    ]

    rm = :msv
    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-6
    @test rmsd(w12, w22) < 1e-6
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        2.55758354864312e-11,
        0.049737933019557645,
        1.3014700073272225e-11,
        0.0029777224539362067,
        0.0025509059694021636,
        0.0201330430354537,
        8.397918006915536e-13,
        0.1280946321089455,
        2.270551221852937e-12,
        3.059427039464877e-12,
        0.29957704078280734,
        3.2275482148862498e-12,
        1.4589123785012587e-12,
        0.12069607876051516,
        0.012266320099222476,
        0.009663147476582737,
        1.610951395799657e-11,
        0.2292760516042169,
        2.8487748300041965e-12,
        0.12502712462095514,
    ]
    w12 = [
        1.2704782106128035e-10,
        0.05530881628945258,
        1.2075938661785783e-10,
        0.004275454549045597,
        0.033908000135876144,
        1.1615985361241391e-10,
        1.4219483963950566e-11,
        0.1252169293774202,
        3.79606854965062e-11,
        4.300146829448829e-11,
        0.2983713212474063,
        2.2081584317588234e-11,
        1.2807309112850566e-11,
        0.10724336239856848,
        0.0027604095390312148,
        0.021120538338028398,
        0.005355646795958502,
        0.228989580117213,
        5.5722225044495545e-11,
        0.11744994066223978,
    ]
    w13 = [
        7.363661351586077e-8,
        2.5705950610421285e-7,
        1.5197234482781846e-7,
        8.679910869526458e-8,
        0.6097126504003868,
        2.4051954018376768e-8,
        0.034203863970850804,
        3.339626976419743e-7,
        1.5196279932077877e-7,
        7.632901292676212e-8,
        9.369605182195306e-7,
        1.821082337461327e-8,
        1.3211663682035826e-8,
        5.252775532485843e-8,
        1.3774904974813092e-8,
        0.16942833134359192,
        0.11618307189855633,
        6.234070334872332e-7,
        0.07046906010764163,
        2.0841223639248495e-7,
    ]
    w14 = [
        6.447654712857413e-11,
        7.199507451731768e-11,
        8.900328403278313e-11,
        8.038228123266515e-11,
        0.8503236439995903,
        2.8907569848280577e-11,
        0.149676354886852,
        4.959868578848664e-11,
        7.731383671877374e-11,
        5.331876976568252e-11,
        4.7722068298258526e-11,
        2.9791247533839734e-11,
        2.1294956968522065e-11,
        3.8212094371935885e-11,
        2.1763484425926076e-11,
        1.4140214364103512e-10,
        9.942634321375959e-11,
        5.212681397049816e-11,
        8.283615974871166e-11,
        6.398646761762893e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1e-4
    @test rmsd(w13, w23) < 1.5e-2
    @test rmsd(w14, w24) < 1e-5

    w11 = [
        2.55758354864312e-11,
        0.049737933019557645,
        1.3014700073272225e-11,
        0.0029777224539362067,
        0.0025509059694021636,
        0.0201330430354537,
        8.397918006915536e-13,
        0.1280946321089455,
        2.270551221852937e-12,
        3.059427039464877e-12,
        0.29957704078280734,
        3.2275482148862498e-12,
        1.4589123785012587e-12,
        0.12069607876051516,
        0.012266320099222476,
        0.009663147476582737,
        1.610951395799657e-11,
        0.2292760516042169,
        2.8487748300041965e-12,
        0.12502712462095514,
    ]
    w12 = [
        1.0869636665019237e-9,
        0.055189038801229384,
        1.036666634724481e-9,
        0.004437455383514737,
        0.03376639170501625,
        1.002048945961556e-9,
        1.2093682073975915e-10,
        0.12529118361655533,
        3.216828095668146e-10,
        3.6718397781408777e-10,
        0.2984002607982874,
        1.8732526662903816e-10,
        1.0884847693179967e-10,
        0.10741595040130675,
        0.002730634116446955,
        0.02106510835154312,
        0.0053525640221985605,
        0.22884015349994202,
        4.71643878713438e-10,
        0.11751125460065905,
    ]
    w13 = [
        2.427772859467267e-9,
        6.374404209825435e-9,
        4.730657999754549e-9,
        2.9305572867804203e-9,
        0.6079706108644816,
        8.070511714421598e-10,
        0.03578597555791761,
        5.987700937219431e-9,
        4.804544054084032e-9,
        2.420934715094821e-9,
        8.26404914320616e-9,
        6.367643511127184e-10,
        4.5854724188179494e-10,
        1.6347734766722213e-9,
        4.771538041253759e-10,
        0.16672161304707145,
        0.13732281060305965,
        7.964582581007634e-9,
        0.052198934636586085,
        5.371389733037639e-9,
    ]
    w14 = [
        2.372567339579673e-12,
        2.769343808491492e-12,
        3.450523690582476e-12,
        3.037652170506673e-12,
        0.853395144817874,
        1.0233579127715154e-12,
        0.14660485514075286,
        1.8423792083391256e-12,
        3.021317261414211e-12,
        1.9710723229578766e-12,
        1.8321553750679943e-12,
        1.0360765732858033e-12,
        7.238504663351113e-13,
        1.3785475292246846e-12,
        7.393585991081788e-13,
        4.191347610684789e-12,
        4.092086797226064e-12,
        1.9824825850098335e-12,
        3.525593957914199e-12,
        2.3833513620954525e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1e-7
    @test rmsd(w13, w23) < 1e-6
    @test rmsd(w14, w24) < 1e-8
end