using Test,
    PortfolioOptimiser,
    DataFrames,
    TimeSeries,
    CSV,
    Dates,
    ECOS,
    SCS,
    Clarabel,
    COSMO,
    OrderedCollections,
    LinearAlgebra,
    StatsBase

A = TimeArray(CSV.File("./assets/stock_prices.csv"), timestamp = :date)
Y = percentchange(A)
RET = dropmissing!(DataFrame(Y))
rf = 1.0329^(1 / 252) - 1
l = 2.0
type = :trad

#=
@testset "mv" begin
    println("Testing rm = :mv, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)

    rm = :mv

    w11 = [
        0.00790101350930099,
        0.0306909139358808,
        0.010506322670541511,
        0.027487810990731512,
        0.012278574123481116,
        0.033410647094723245,
        5.992768702616961e-10,
        0.1398486652999066,
        1.0318412667826644e-9,
        1.1506529577820253e-8,
        0.2878239722245232,
        6.544625217911222e-10,
        4.93689273689815e-10,
        0.1252846767367913,
        2.4717046303259267e-9,
        0.015084330918903146,
        1.814161154983086e-8,
        0.19312632144038927,
        1.2981261894646573e-9,
        0.11655671485758536,
    ]
    w12 = [
        7.501098494991323e-9,
        1.0064670665034103e-8,
        1.1722347049257423e-8,
        1.0361728384158447e-8,
        0.7742138078975956,
        3.1023452209126238e-9,
        0.10997534056425429,
        7.085470209215128e-9,
        1.1532235426098252e-8,
        6.972409318059648e-9,
        6.650081562400164e-9,
        2.953876334873929e-9,
        2.162908256197495e-9,
        4.5301912036774246e-9,
        2.128892154621845e-9,
        0.11581072064765068,
        1.4678173585918143e-8,
        7.408376181540708e-9,
        1.3081152141411003e-8,
        8.954543362088613e-9,
    ]
    w13 = [
        2.374679736183779e-9,
        4.939301272870657e-9,
        6.179061867835019e-9,
        4.034411541161419e-9,
        0.5180871979643897,
        8.070325177367361e-10,
        0.06365369306001793,
        4.3349884009920866e-9,
        5.452105198932873e-9,
        2.5299877405583313e-9,
        4.118309846310807e-9,
        6.403157613827995e-10,
        4.338684204098137e-10,
        1.4266510957251872e-9,
        4.641523581003893e-10,
        0.14327007654199483,
        0.19648906566805555,
        4.3761672024213315e-9,
        0.07849992010817639,
        4.5463326801949395e-9,
    ]
    w14 = [
        1.5192065610514992e-11,
        1.7722471226445733e-11,
        2.9669315137971204e-11,
        2.4155024681950277e-11,
        7.59468703964738e-9,
        4.471042028698165e-12,
        0.9999999921281696,
        7.096032846356474e-12,
        2.025110689901504e-11,
        8.759180650670239e-12,
        6.652117745262745e-12,
        4.483930062795914e-12,
        4.799732666967364e-12,
        5.010418115419259e-12,
        4.745332577894867e-12,
        4.8538726608548216e-11,
        3.238920124696666e-11,
        7.938033081344488e-12,
        2.2053788083893776e-11,
        1.3216026591344278e-11,
    ]
    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1e-5
    @test rmsd(w13, w23) < 1e-5
    @test rmsd(w14, w24) < 1e-7

    w11 = [
        0.00790101350930099,
        0.0306909139358808,
        0.010506322670541511,
        0.027487810990731512,
        0.012278574123481116,
        0.033410647094723245,
        5.992768702616961e-10,
        0.1398486652999066,
        1.0318412667826644e-9,
        1.1506529577820253e-8,
        0.2878239722245232,
        6.544625217911222e-10,
        4.93689273689815e-10,
        0.1252846767367913,
        2.4717046303259267e-9,
        0.015084330918903146,
        1.814161154983086e-8,
        0.19312632144038927,
        1.2981261894646573e-9,
        0.11655671485758536,
    ]
    w12 = [
        1.0865353755842134e-7,
        2.0686588717409895e-7,
        2.7187228304113667e-7,
        2.0072734321853616e-7,
        0.7186482205643473,
        3.586615839912499e-8,
        0.0986154275914106,
        1.241580400451212e-7,
        3.0436884512675934e-7,
        1.088247045474315e-7,
        1.112603543141629e-7,
        3.1508000068382684e-8,
        2.222968616538749e-8,
        5.931283202136737e-8,
        2.173470660006859e-8,
        0.155173188146538,
        0.02755989731852978,
        1.3508443743246354e-7,
        1.3614308668529052e-6,
        1.6248149155617866e-7,
    ]
    w13 = [
        6.855095326572051e-6,
        0.00017172239690563856,
        0.0038555391801365674,
        2.143004752616271e-5,
        0.44500402816108947,
        1.8152494753280122e-6,
        0.0530854298623821,
        0.01112265539105882,
        1.1115099133313281e-5,
        7.943733622637706e-6,
        0.0002625353133695802,
        1.3338274727547277e-6,
        9.698302908052664e-7,
        3.7126808251988777e-6,
        9.44699303794041e-7,
        0.13922569809430452,
        0.21448393215354267,
        0.0002952249055260894,
        0.13232670442156164,
        0.0001104098571462203,
    ]
    w14 = [
        2.85898052025261e-10,
        3.228570520084843e-10,
        3.96885303999293e-10,
        3.6151119117976806e-10,
        0.8503207438320458,
        1.3091890174421828e-10,
        0.14967925108373412,
        2.2266817711863868e-10,
        3.578136311569646e-10,
        2.430092800863492e-10,
        2.1336134958599728e-10,
        1.3701726564971077e-10,
        1.0011479238014472e-10,
        1.7239200605803413e-10,
        9.960662977431538e-11,
        6.90047353140167e-10,
        4.4818671820098014e-10,
        2.33945765127216e-10,
        3.813924242288859e-10,
        2.865940556541881e-10,
    ]
    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights
    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1e-4
    @test rmsd(w13, w23) < 6e-3
    @test rmsd(w14, w24) < 1e-4

    w11 = [
        0.00790101350930099,
        0.0306909139358808,
        0.010506322670541511,
        0.027487810990731512,
        0.012278574123481116,
        0.033410647094723245,
        5.992768702616961e-10,
        0.1398486652999066,
        1.0318412667826644e-9,
        1.1506529577820253e-8,
        0.2878239722245232,
        6.544625217911222e-10,
        4.93689273689815e-10,
        0.1252846767367913,
        2.4717046303259267e-9,
        0.015084330918903146,
        1.814161154983086e-8,
        0.19312632144038927,
        1.2981261894646573e-9,
        0.11655671485758536,
    ]
    w12 = [
        1.315015450408368e-9,
        2.5569969088173495e-9,
        3.2848585681829983e-9,
        2.415839535140197e-9,
        0.7207185008699422,
        4.214879579614106e-10,
        0.09835548176963889,
        1.5542515887798901e-9,
        3.729782644427829e-9,
        1.3295817491560547e-9,
        1.388763754161527e-9,
        3.705725275704055e-10,
        2.521544891441231e-10,
        7.154212396901733e-10,
        2.4979939717861087e-10,
        0.1550534383573205,
        0.025872538818152355,
        1.6894699154777678e-9,
        1.6889096272823596e-8,
        2.0218541540301808e-9,
    ]
    w13 = [
        3.5379549415042476e-9,
        1.0875979548667672e-8,
        1.4071917588238513e-8,
        8.228849778539734e-9,
        0.48941829873075493,
        1.0581922819515598e-9,
        0.058337193245876315,
        1.1157269577897694e-8,
        6.978121275865596e-9,
        4.032629340398236e-9,
        8.367592140519154e-9,
        8.203007150891988e-10,
        5.956884940425251e-10,
        2.00603917076689e-9,
        5.766499624947155e-10,
        0.14032716520895433,
        0.21337786390770655,
        9.556458677811914e-9,
        0.09853938790242223,
        9.140642129470356e-9,
    ]
    w14 = [
        5.572234280636143e-12,
        6.2577610721475044e-12,
        7.80856647073791e-12,
        7.0310636849368874e-12,
        0.8533951447515135,
        2.372412685580246e-12,
        0.14660485515191704,
        4.210456213977918e-12,
        6.789275907086024e-12,
        4.566909792245081e-12,
        4.040076957903744e-12,
        2.4655779176383524e-12,
        1.7223062268928809e-12,
        3.197669196657552e-12,
        1.7515788729082566e-12,
        1.2784956162245935e-11,
        8.759115642694511e-12,
        4.44077647544962e-12,
        7.27702202443673e-12,
        5.5217229111629075e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights
    @test rmsd(w11, w21) < 1e-4
    @test rmsd(w12, w22) < 1e-6
    @test rmsd(w13, w23) < 1e-6
    @test rmsd(w14, w24) < 1e-7
end

@testset "mad" begin
    println("Testing rm = :mad, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 1)),
        ),
    )
    asset_statistics!(port)
    rm = :mad

    w11 = [
        0.014061880230098326,
        0.042374911253546026,
        0.016863338191130086,
        0.002020812393188773,
        0.01768388730031514,
        0.05422406737508933,
        9.113561695090867e-14,
        0.15821655500572893,
        8.46594672298905e-14,
        2.0403599807029582e-13,
        0.23689727682445483,
        1.874295992935553e-14,
        1.6648543494044883e-14,
        0.12783200177689702,
        0.0003509455035553752,
        0.0009122889020762202,
        0.04394937954196347,
        0.1827242784279457,
        1.1531703482203527e-13,
        0.10188837727348043,
    ]
    w12 = [
        0.009459604882737808,
        0.05572444620116,
        0.009430414009520324,
        0.010307935591294204,
        0.07101573331118137,
        7.839058521990585e-12,
        0.0001581465738274952,
        0.1419952435186637,
        1.030148707398242e-11,
        0.01166920447831044,
        0.20323468319872826,
        9.403326025584615e-13,
        1.078177294820107e-12,
        0.07795484495517012,
        2.9356518300200813e-12,
        0.018196904111046245,
        0.08494632444810453,
        0.1710124635707962,
        0.0348180544878595,
        0.10007599663850512,
    ]
    w13 = [
        3.2775465892126126e-14,
        1.3324468779911932e-13,
        1.3508376405283924e-13,
        5.825260884346701e-14,
        0.6622657752292105,
        1.2893443650953926e-14,
        0.04259470718268862,
        6.402051883460471e-14,
        1.4053330248177402e-13,
        5.0973946679400004e-14,
        1.2310891296174548e-13,
        1.8485767870164157e-14,
        2.2469205389774708e-14,
        3.2784628518521933e-15,
        2.1453760820002276e-14,
        0.13436659616544247,
        0.08736654877101017,
        1.0887119028450206e-13,
        0.07340637265061209,
        1.1047477580014884e-13,
    ]
    w14 = [
        5.1608094762415435e-11,
        5.207032566247801e-11,
        3.782701076683847e-11,
        5.7306423152006965e-11,
        4.454447352632455e-9,
        4.512526606836864e-11,
        0.9999999946698693,
        5.479796043404423e-11,
        5.86551194224155e-11,
        5.742197185891196e-11,
        5.541951271588821e-11,
        4.3846453202089875e-11,
        3.234749500702867e-11,
        5.2403775872871985e-11,
        3.4954868529747976e-11,
        5.234152591865969e-11,
        3.1546432022118925e-11,
        5.5618418746024516e-11,
        5.0220204576520237e-11,
        5.217247326479619e-11,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-10
    @test rmsd(w12, w22) < 1e-3
    @test rmsd(w13, w23) < 1e-11
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        0.014061880230098326,
        0.042374911253546026,
        0.016863338191130086,
        0.002020812393188773,
        0.01768388730031514,
        0.05422406737508933,
        9.113561695090867e-14,
        0.15821655500572893,
        8.46594672298905e-14,
        2.0403599807029582e-13,
        0.23689727682445483,
        1.874295992935553e-14,
        1.6648543494044883e-14,
        0.12783200177689702,
        0.0003509455035553752,
        0.0009122889020762202,
        0.04394937954196347,
        0.1827242784279457,
        1.1531703482203527e-13,
        0.10188837727348043,
    ]
    w12 = [
        0.009565267432672603,
        0.05620284535416836,
        0.008993474211176244,
        0.010206322935447884,
        0.0710167281388428,
        2.298858951190326e-11,
        0.00017536205588263538,
        0.1418013594524342,
        2.8660788530265935e-11,
        0.011593356383033267,
        0.20333070438882536,
        2.6847869096026175e-12,
        3.06758039909358e-12,
        0.07780288116378963,
        8.418334431600834e-12,
        0.018214560919887397,
        0.08518138137390815,
        0.17144261641315284,
        0.0345995473220713,
        0.09987359238888735,
    ]
    w13 = [
        9.504881872318081e-11,
        2.9123136038561247e-10,
        4.0097177827889205e-10,
        1.212786084526373e-10,
        0.5088097565792566,
        2.677323781992036e-11,
        0.03160672364497261,
        4.97480365723299e-10,
        1.706107548502445e-10,
        1.0552531049364852e-10,
        0.002868526653981817,
        1.7183631715074215e-11,
        1.275187573074244e-11,
        5.240853030999799e-11,
        1.3953791270255274e-11,
        0.13826739485875297,
        0.1856567959322612,
        7.583330580870742e-10,
        0.13279079938109614,
        3.861275708474309e-10,
    ]
    w14 = [
        6.451870016207551e-11,
        7.204189513443317e-11,
        8.906070782869375e-11,
        8.043422201618524e-11,
        0.8503236439328641,
        2.8926968274147874e-11,
        0.14967635495285603,
        4.963144068207656e-11,
        7.736352584584053e-11,
        5.335368390612564e-11,
        4.775366195384848e-11,
        2.981109178487484e-11,
        2.1309243400208645e-11,
        3.823750623124682e-11,
        2.1778192018626845e-11,
        1.4148999322396185e-10,
        9.9490223515674e-11,
        5.216117002128669e-11,
        8.28894231464527e-11,
        6.402829476449138e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-10
    @test rmsd(w12, w22) < 1e-4
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-10

    w11 = [
        0.014061880230098326,
        0.042374911253546026,
        0.016863338191130086,
        0.002020812393188773,
        0.01768388730031514,
        0.05422406737508933,
        9.113561695090867e-14,
        0.15821655500572893,
        8.46594672298905e-14,
        2.0403599807029582e-13,
        0.23689727682445483,
        1.874295992935553e-14,
        1.6648543494044883e-14,
        0.12783200177689702,
        0.0003509455035553752,
        0.0009122889020762202,
        0.04394937954196347,
        0.1827242784279457,
        1.1531703482203527e-13,
        0.10188837727348043,
    ]
    w12 = [
        0.009655333104202836,
        0.05668988463932766,
        0.008732431589792788,
        0.010029023064255843,
        0.07087921569422946,
        6.053991567851434e-10,
        0.00027672453242039656,
        0.14173992880953148,
        7.853345255824746e-10,
        0.011690881540715927,
        0.2034942612496262,
        6.57223748541311e-11,
        7.396199492284394e-11,
        0.07793795323823294,
        2.170816203984454e-10,
        0.018196999328664754,
        0.08532599960948957,
        0.1714774352067705,
        0.03408825592081158,
        0.09978567072442833,
    ]
    w13 = [
        5.307195679149273e-9,
        1.4194129525935186e-8,
        1.7354954130135684e-8,
        7.69709015502935e-9,
        0.5791948770331061,
        1.6231439384973383e-9,
        0.03882080552455042,
        1.1852355445669338e-8,
        1.197142154465931e-8,
        6.274221797039603e-9,
        2.0423609005150175e-8,
        1.111272705926853e-9,
        8.190299006052292e-10,
        3.06150066521855e-9,
        8.86433926811959e-10,
        0.13597962032185792,
        0.1396816496855953,
        1.5682996078576144e-8,
        0.10632291549847374,
        1.3677061998106875e-8,
    ]
    w14 = [
        2.372567339579673e-12,
        2.769343808491492e-12,
        3.450523690582476e-12,
        3.037652170506673e-12,
        0.853395144817874,
        1.0233579127715154e-12,
        0.14660485514075286,
        1.8423792083391256e-12,
        3.021317261414211e-12,
        1.9710723229578766e-12,
        1.8321553750679943e-12,
        1.0360765732858033e-12,
        7.238504663351113e-13,
        1.3785475292246846e-12,
        7.393585991081788e-13,
        4.191347610684789e-12,
        4.092086797226064e-12,
        1.9824825850098335e-12,
        3.525593957914199e-12,
        2.3833513620954525e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-6
    @test rmsd(w12, w22) < 1e-5
    @test rmsd(w13, w23) < 1e-5
    @test rmsd(w14, w24) < 1e-8
end

@testset "msv" begin
    println("Testing rm = :msv, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)

    rm = :msv

    w11 = [
        2.55758354864312e-11,
        0.049737933019557645,
        1.3014700073272225e-11,
        0.0029777224539362067,
        0.0025509059694021636,
        0.0201330430354537,
        8.397918006915536e-13,
        0.1280946321089455,
        2.270551221852937e-12,
        3.059427039464877e-12,
        0.29957704078280734,
        3.2275482148862498e-12,
        1.4589123785012587e-12,
        0.12069607876051516,
        0.012266320099222476,
        0.009663147476582737,
        1.610951395799657e-11,
        0.2292760516042169,
        2.8487748300041965e-12,
        0.12502712462095514,
    ]
    w12 = [
        1.9156653261040654e-10,
        0.05530892517886745,
        1.8207787819858364e-10,
        0.0042753961376044885,
        0.03390811748805293,
        1.7514163524383542e-10,
        2.1440183312559418e-11,
        0.12521696144034022,
        5.723675318626706e-11,
        6.48366010575146e-11,
        0.29837124853503444,
        3.3294773632339516e-11,
        1.931116699761228e-11,
        0.1072434224473909,
        0.0027603560012123274,
        0.021120535368443192,
        0.005355512144905968,
        0.22898955441834898,
        8.401612007629805e-11,
        0.11744997001087748,
    ]
    w13 = [
        9.607244670198283e-13,
        2.391137555008359e-12,
        1.8922378269442666e-12,
        1.1313327665810094e-12,
        0.6665999471445081,
        2.3334981438405056e-13,
        0.03791833955846937,
        1.9095293384972558e-12,
        2.353045340592011e-12,
        9.34156262240138e-13,
        2.472837754753188e-12,
        1.6272296653923608e-13,
        7.367793241732568e-14,
        5.990452133427442e-13,
        8.504687243647897e-14,
        0.17184265886747102,
        0.10259234079986289,
        2.5939306665781046e-12,
        0.02104671360990669,
        1.9890215642933244e-12,
    ]
    w14 = [
        5.1608094762415435e-11,
        5.207032566247801e-11,
        3.782701076683847e-11,
        5.7306423152006965e-11,
        4.454447352632455e-9,
        4.512526606836864e-11,
        0.9999999946698693,
        5.479796043404423e-11,
        5.86551194224155e-11,
        5.742197185891196e-11,
        5.541951271588821e-11,
        4.3846453202089875e-11,
        3.234749500702867e-11,
        5.2403775872871985e-11,
        3.4954868529747976e-11,
        5.234152591865969e-11,
        3.1546432022118925e-11,
        5.5618418746024516e-11,
        5.0220204576520237e-11,
        5.217247326479619e-11,
    ]
    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-6
    @test rmsd(w12, w22) < 1e-6
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        2.55758354864312e-11,
        0.049737933019557645,
        1.3014700073272225e-11,
        0.0029777224539362067,
        0.0025509059694021636,
        0.0201330430354537,
        8.397918006915536e-13,
        0.1280946321089455,
        2.270551221852937e-12,
        3.059427039464877e-12,
        0.29957704078280734,
        3.2275482148862498e-12,
        1.4589123785012587e-12,
        0.12069607876051516,
        0.012266320099222476,
        0.009663147476582737,
        1.610951395799657e-11,
        0.2292760516042169,
        2.8487748300041965e-12,
        0.12502712462095514,
    ]
    w12 = [
        1.2704782106128035e-10,
        0.05530881628945258,
        1.2075938661785783e-10,
        0.004275454549045597,
        0.033908000135876144,
        1.1615985361241391e-10,
        1.4219483963950566e-11,
        0.1252169293774202,
        3.79606854965062e-11,
        4.300146829448829e-11,
        0.2983713212474063,
        2.2081584317588234e-11,
        1.2807309112850566e-11,
        0.10724336239856848,
        0.0027604095390312148,
        0.021120538338028398,
        0.005355646795958502,
        0.228989580117213,
        5.5722225044495545e-11,
        0.11744994066223978,
    ]
    w13 = [
        7.363661351586077e-8,
        2.5705950610421285e-7,
        1.5197234482781846e-7,
        8.679910869526458e-8,
        0.6097126504003868,
        2.4051954018376768e-8,
        0.034203863970850804,
        3.339626976419743e-7,
        1.5196279932077877e-7,
        7.632901292676212e-8,
        9.369605182195306e-7,
        1.821082337461327e-8,
        1.3211663682035826e-8,
        5.252775532485843e-8,
        1.3774904974813092e-8,
        0.16942833134359192,
        0.11618307189855633,
        6.234070334872332e-7,
        0.07046906010764163,
        2.0841223639248495e-7,
    ]
    w14 = [
        6.447654712857413e-11,
        7.199507451731768e-11,
        8.900328403278313e-11,
        8.038228123266515e-11,
        0.8503236439995903,
        2.8907569848280577e-11,
        0.149676354886852,
        4.959868578848664e-11,
        7.731383671877374e-11,
        5.331876976568252e-11,
        4.7722068298258526e-11,
        2.9791247533839734e-11,
        2.1294956968522065e-11,
        3.8212094371935885e-11,
        2.1763484425926076e-11,
        1.4140214364103512e-10,
        9.942634321375959e-11,
        5.212681397049816e-11,
        8.283615974871166e-11,
        6.398646761762893e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1e-4
    @test rmsd(w13, w23) < 1.5e-2
    @test rmsd(w14, w24) < 1e-5

    w11 = [
        2.55758354864312e-11,
        0.049737933019557645,
        1.3014700073272225e-11,
        0.0029777224539362067,
        0.0025509059694021636,
        0.0201330430354537,
        8.397918006915536e-13,
        0.1280946321089455,
        2.270551221852937e-12,
        3.059427039464877e-12,
        0.29957704078280734,
        3.2275482148862498e-12,
        1.4589123785012587e-12,
        0.12069607876051516,
        0.012266320099222476,
        0.009663147476582737,
        1.610951395799657e-11,
        0.2292760516042169,
        2.8487748300041965e-12,
        0.12502712462095514,
    ]
    w12 = [
        1.0869636665019237e-9,
        0.055189038801229384,
        1.036666634724481e-9,
        0.004437455383514737,
        0.03376639170501625,
        1.002048945961556e-9,
        1.2093682073975915e-10,
        0.12529118361655533,
        3.216828095668146e-10,
        3.6718397781408777e-10,
        0.2984002607982874,
        1.8732526662903816e-10,
        1.0884847693179967e-10,
        0.10741595040130675,
        0.002730634116446955,
        0.02106510835154312,
        0.0053525640221985605,
        0.22884015349994202,
        4.71643878713438e-10,
        0.11751125460065905,
    ]
    w13 = [
        2.427772859467267e-9,
        6.374404209825435e-9,
        4.730657999754549e-9,
        2.9305572867804203e-9,
        0.6079706108644816,
        8.070511714421598e-10,
        0.03578597555791761,
        5.987700937219431e-9,
        4.804544054084032e-9,
        2.420934715094821e-9,
        8.26404914320616e-9,
        6.367643511127184e-10,
        4.5854724188179494e-10,
        1.6347734766722213e-9,
        4.771538041253759e-10,
        0.16672161304707145,
        0.13732281060305965,
        7.964582581007634e-9,
        0.052198934636586085,
        5.371389733037639e-9,
    ]
    w14 = [
        2.372567339579673e-12,
        2.769343808491492e-12,
        3.450523690582476e-12,
        3.037652170506673e-12,
        0.853395144817874,
        1.0233579127715154e-12,
        0.14660485514075286,
        1.8423792083391256e-12,
        3.021317261414211e-12,
        1.9710723229578766e-12,
        1.8321553750679943e-12,
        1.0360765732858033e-12,
        7.238504663351113e-13,
        1.3785475292246846e-12,
        7.393585991081788e-13,
        4.191347610684789e-12,
        4.092086797226064e-12,
        1.9824825850098335e-12,
        3.525593957914199e-12,
        2.3833513620954525e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1e-7
    @test rmsd(w13, w23) < 1e-6
    @test rmsd(w14, w24) < 1e-8
end

@testset "flpm" begin
    println("Testing rm = :flpm, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 1)),
        ),
    )
    asset_statistics!(port)
    rm = :flpm

    w11 = [
        0.004266104170212475,
        0.04362179170407835,
        0.019960459298168455,
        0.007822769475608627,
        0.06052525617915513,
        1.4669228261368196e-12,
        0.00039596201057354153,
        0.13089268135668963,
        3.9610625266004783e-13,
        0.011878930759598547,
        0.20660964182727393,
        2.3577313221584285e-14,
        2.316805525860719e-14,
        0.0832948051848743,
        7.763336649709251e-14,
        0.013888096835933667,
        0.08734726460706164,
        0.1921003416581416,
        0.037213209126096373,
        0.1001826858045464,
    ]
    w12 = [
        3.97703723716329e-11,
        0.04213913352837321,
        0.012527562902683436,
        0.007205814358280906,
        0.09868075643555277,
        3.3465297249225032e-12,
        0.002773008726661481,
        0.10921155672499787,
        1.0110450839450292e-11,
        3.1329247819452524e-11,
        0.20154701424960908,
        9.672037716402015e-13,
        1.0503656341541338e-12,
        0.02654257492720819,
        1.726495529519959e-12,
        0.04173133597987413,
        0.11080124113039533,
        0.17232503202458582,
        0.0680011026628178,
        0.10651386626065946,
    ]
    w13 = [
        1.876923604420911e-15,
        9.44002949390975e-15,
        9.555029218396679e-15,
        4.530289570532286e-15,
        0.6999125313283426,
        1.184517271080013e-15,
        0.02929583116603214,
        6.387837166227903e-15,
        1.277182187796183e-14,
        4.1233562555874204e-15,
        9.707954733795156e-15,
        1.741986055403713e-15,
        2.083095182300139e-15,
        2.7698865307518983e-16,
        1.9698445297849096e-15,
        0.1518116450016806,
        0.04226454249441166,
        8.852368865865114e-15,
        0.07671545000944742,
        1.1102518515252822e-14,
    ]
    w14 = [
        5.3529747667019664e-11,
        5.398065147651168e-11,
        3.9028457439044154e-11,
        5.938482214023437e-11,
        2.985084905390435e-9,
        4.6954283924602456e-11,
        0.9999999961065184,
        5.692625044494419e-11,
        6.08405012326576e-11,
        5.96478985101771e-11,
        5.758412273517798e-11,
        4.560417554870693e-11,
        3.3631448559961506e-11,
        5.4484530383739083e-11,
        3.6359927660111094e-11,
        5.4059907555460024e-11,
        3.246534109619667e-11,
        5.778004677413067e-11,
        5.202256867147806e-11,
        5.4112166262118535e-11,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-10
    @test rmsd(w12, w22) < 1e-8
    @test rmsd(w13, w23) < 1e-9
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        0.004266104170212475,
        0.04362179170407835,
        0.019960459298168455,
        0.007822769475608627,
        0.06052525617915513,
        1.4669228261368196e-12,
        0.00039596201057354153,
        0.13089268135668963,
        3.9610625266004783e-13,
        0.011878930759598547,
        0.20660964182727393,
        2.3577313221584285e-14,
        2.316805525860719e-14,
        0.0832948051848743,
        7.763336649709251e-14,
        0.013888096835933667,
        0.08734726460706164,
        0.1921003416581416,
        0.037213209126096373,
        0.1001826858045464,
    ]
    w12 = [
        5.583524145162717e-11,
        0.042139131566751614,
        0.012527565127180097,
        0.007205814264460682,
        0.09868076274396621,
        5.079770317558342e-12,
        0.0027730065736920745,
        0.10921155768918284,
        1.4432537415666022e-11,
        4.53025962972074e-11,
        0.20154701506863107,
        1.4433519561270054e-12,
        1.5579686462387685e-12,
        0.026542585747955857,
        2.5733482555695855e-12,
        0.04173133433050141,
        0.11080122934388514,
        0.17232504372822366,
        0.06800109290200503,
        0.10651386078733938,
    ]
    w13 = [
        2.1920178421710392e-11,
        5.871292779778813e-11,
        6.784485956061595e-11,
        2.9339662203650365e-11,
        0.5637246782282297,
        7.174156177673923e-12,
        0.02602976749408832,
        7.411248211706471e-11,
        4.816744519592941e-11,
        2.7354806203999625e-11,
        4.414702337752316e-10,
        4.584962845266257e-12,
        3.5555053488206943e-12,
        1.3597531119516564e-11,
        3.956978044277948e-12,
        0.14917727787214147,
        0.12978985558886494,
        1.4933861215413567e-10,
        0.13127841977613147,
        8.941372634471405e-11,
    ]
    w14 = [
        6.51401905922968e-11,
        7.274141214004412e-11,
        8.993569677451936e-11,
        8.1222859747114e-11,
        0.8503236618406598,
        2.9195437580839036e-11,
        0.14967633703417974,
        5.0102312572015986e-11,
        7.812833399015634e-11,
        5.386655366310768e-11,
        4.820499079289575e-11,
        3.009097205219429e-11,
        2.1507807110106056e-11,
        3.859674681800695e-11,
        2.1978678073308094e-11,
        1.4296384229108385e-10,
        1.0047390918688235e-10,
        5.2657548652916866e-11,
        8.370808928591076e-11,
        6.464514743714907e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-8
    @test rmsd(w12, w22) < 4e-3
    @test rmsd(w13, w23) < 1e-10
    @test rmsd(w14, w24) < 1e-10

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-6
    @test rmsd(w12, w22) < 4e-3
    @test rmsd(w13, w23) < 1.3e-2
    @test rmsd(w14, w24) < 1e-3
end

@testset "slpm" begin
    println("Testing rm = :slpm, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 1)),
        ),
    )
    asset_statistics!(port)
    rm = :slpm

    w11 = [
        9.734843743565922e-12,
        0.055245392174630495,
        9.265028500708643e-12,
        0.004319524740807712,
        0.03359645164504849,
        9.099457127650289e-12,
        1.0768073011057016e-12,
        0.12478083345794555,
        3.049353991287137e-12,
        3.4056535380734585e-12,
        0.3005646161459586,
        1.7918175719497817e-12,
        1.0076213333193919e-12,
        0.1066186362177196,
        0.003124151746210445,
        0.021391627262487112,
        0.0035938741203482647,
        0.2296514023036259,
        4.481963078085049e-12,
        0.11711349014230511,
    ]
    w12 = [
        5.905676944843912e-11,
        0.055105218383047244,
        7.218883740512182e-11,
        0.00042392114085447376,
        0.06590323402369498,
        3.14960977480048e-11,
        1.6375168320853316e-11,
        0.11928808515085303,
        4.211302584089351e-11,
        4.0145000636314516e-11,
        0.29373864011411,
        1.3600594278497308e-11,
        8.276682729550648e-12,
        0.07604809144606464,
        4.424145671310857e-11,
        0.03452496050911095,
        0.028236087800952582,
        0.2232046896140672,
        8.642217888728471e-11,
        0.10352707140332928,
    ]
    w13 = [
        1.0710633714502649e-12,
        2.651921538531967e-12,
        2.0543597788242345e-12,
        1.2310099909488965e-12,
        0.6654370457201403,
        2.605874910950091e-13,
        0.038071850442216205,
        2.158192329691087e-12,
        2.5720301013859423e-12,
        1.0201554894185877e-12,
        2.7640725345768247e-12,
        1.861704830545739e-13,
        8.469611916760072e-14,
        6.752933893403868e-13,
        9.640673819222276e-14,
        0.17459159243171005,
        0.10411304234874887,
        2.9044283963889756e-12,
        0.01778646903526312,
        2.1909333503726834e-12,
    ]
    w14 = [
        5.3529747667019664e-11,
        5.398065147651168e-11,
        3.9028457439044154e-11,
        5.938482214023437e-11,
        2.985084905390435e-9,
        4.6954283924602456e-11,
        0.9999999961065184,
        5.692625044494419e-11,
        6.08405012326576e-11,
        5.96478985101771e-11,
        5.758412273517798e-11,
        4.560417554870693e-11,
        3.3631448559961506e-11,
        5.4484530383739083e-11,
        3.6359927660111094e-11,
        5.4059907555460024e-11,
        3.246534109619667e-11,
        5.778004677413067e-11,
        5.202256867147806e-11,
        5.4112166262118535e-11,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1e-7
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-8

    w11 = [
        9.734843743565922e-12,
        0.055245392174630495,
        9.265028500708643e-12,
        0.004319524740807712,
        0.03359645164504849,
        9.099457127650289e-12,
        1.0768073011057016e-12,
        0.12478083345794555,
        3.049353991287137e-12,
        3.4056535380734585e-12,
        0.3005646161459586,
        1.7918175719497817e-12,
        1.0076213333193919e-12,
        0.1066186362177196,
        0.003124151746210445,
        0.021391627262487112,
        0.0035938741203482647,
        0.2296514023036259,
        4.481963078085049e-12,
        0.11711349014230511,
    ]
    w12 = [
        1.1241040489662525e-10,
        0.055105171737783495,
        1.3740898813638443e-10,
        0.0004239387860984131,
        0.0659032660971727,
        5.995002680896056e-11,
        3.116853243441848e-11,
        0.11928810428288263,
        8.015803048054586e-11,
        7.64130505287999e-11,
        0.2937386038028337,
        2.588739157768177e-11,
        1.5753853550298096e-11,
        0.07604804636797598,
        8.420999595356769e-11,
        0.03452498400561177,
        0.028236118490406917,
        0.22320471419933216,
        1.6449779683791834e-10,
        0.10352705144204402,
    ]
    w13 = [
        1.5382627441031582e-10,
        4.744951793870768e-10,
        2.9083004636740804e-10,
        1.7914988332240976e-10,
        0.5737564396681322,
        5.04872533532364e-11,
        0.02956614173266077,
        6.165744335121019e-10,
        2.632484889520154e-10,
        1.5354888576012826e-10,
        1.3684758947668124e-9,
        3.907906778003871e-11,
        2.8346176535886915e-11,
        1.0876657779774813e-10,
        2.940619749942788e-11,
        0.16718960426117846,
        0.15962973783229092,
        8.854133625684913e-10,
        0.0698580714648303,
        3.9925951529603846e-10,
    ]
    w14 = [
        7.218059688369303e-11,
        8.056321810868184e-11,
        9.953296527918561e-11,
        8.990269945575493e-11,
        0.8503236604178088,
        3.243077267816855e-11,
        0.1496763383363862,
        5.557003210699212e-11,
        8.643332320168008e-11,
        5.969683381679134e-11,
        5.3478278738193595e-11,
        3.3401669738623014e-11,
        2.3890260936160026e-11,
        4.283705837053415e-11,
        2.443067918443955e-11,
        1.5766969562016922e-10,
        1.1115221346582016e-10,
        5.839312211726877e-11,
        9.261053062837624e-11,
        7.163097741826096e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1.5e-4
    @test rmsd(w13, w23) < 1e-10
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        0.004266104170212475,
        0.04362179170407835,
        0.019960459298168455,
        0.007822769475608627,
        0.06052525617915513,
        1.4669228261368196e-12,
        0.00039596201057354153,
        0.13089268135668963,
        3.9610625266004783e-13,
        0.011878930759598547,
        0.20660964182727393,
        2.3577313221584285e-14,
        2.316805525860719e-14,
        0.0832948051848743,
        7.763336649709251e-14,
        0.013888096835933667,
        0.08734726460706164,
        0.1921003416581416,
        0.037213209126096373,
        0.1001826858045464,
    ]
    w12 = [
        5.366943379001608e-9,
        0.037685257234435575,
        0.015475261449440647,
        0.008116632652606873,
        0.09893828295115893,
        3.6741917420142557e-10,
        0.002533108099369867,
        0.10486352409926158,
        1.0817154460311678e-9,
        3.502277841381867e-9,
        0.20310196149743928,
        1.0079014838622261e-10,
        1.0701726983355811e-10,
        0.035552354824832065,
        1.7874131295885733e-10,
        0.03730691016280064,
        0.10541166388792744,
        0.1786179249226791,
        0.0624840388163108,
        0.1099130686968325,
    ]
    w13 = [
        2.039188294486064e-9,
        5.048458542242682e-9,
        5.421379567488297e-9,
        2.941564579072603e-9,
        0.6065808866779807,
        6.869768753641578e-10,
        0.028287238295437254,
        4.467607312036331e-9,
        5.382327186082125e-9,
        2.411810008366047e-9,
        7.11392756683615e-9,
        4.690206350403667e-10,
        3.554206535948382e-10,
        1.242614201364564e-9,
        3.853001141584733e-10,
        0.14977655653657573,
        0.1082455171784687,
        6.430554936785963e-9,
        0.10710975085009784,
        6.065289355076913e-9,
    ]
    w14 = [
        8.464106423945461e-13,
        9.53841045161041e-13,
        1.1872996296829948e-12,
        1.0663212593506019e-12,
        0.8533951448523589,
        3.6129321116430966e-13,
        0.14660485513294397,
        6.433174401880225e-13,
        1.0350079073877415e-12,
        6.958897637913575e-13,
        6.178225638101201e-13,
        3.743294644932179e-13,
        2.6115447196553085e-13,
        4.875692540542846e-13,
        2.6591775306822504e-13,
        1.9123353345067804e-12,
        1.3487854956949795e-12,
        6.787915725876882e-13,
        1.1184001779704939e-12,
        8.426196746306771e-13,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 4e-2
    @test rmsd(w12, w22) < 4e-2
    @test rmsd(w13, w23) < 1.6e-2
    @test rmsd(w14, w24) < 1e-8
end

@testset "wr" begin
    println("Testing rm = :wr, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 1)),
        ),
    )
    asset_statistics!(port)
    rm = :wr

    w11 = [
        1.5872117599818181e-12,
        0.22119704093179035,
        2.7460744440299463e-12,
        8.760783938755109e-12,
        2.42796997026455e-11,
        4.153621663627526e-12,
        0.02918541160594417,
        4.6506478406695e-12,
        2.5706293424936534e-12,
        5.068814556141634e-12,
        0.545516556476523,
        6.062817157637105e-13,
        2.9662912155824217e-12,
        1.031358077466878e-12,
        1.0810184999857832e-9,
        3.4809641727814008e-12,
        1.1123583810364371e-11,
        2.28985847538167e-12,
        3.3954259268973147e-12,
        0.20410098982601288,
    ]
    w12 = [
        3.560271431548733e-12,
        0.2211970386593474,
        3.059641331261165e-12,
        1.8513954627393046e-12,
        4.855396500761436e-12,
        2.249088265017882e-12,
        0.02918541185511367,
        3.1662278504445505e-12,
        2.193191628560586e-12,
        2.1134156752419318e-12,
        0.5455165570204782,
        1.0808200666307882e-12,
        1.1402263376615155e-12,
        1.6268062260262784e-12,
        1.3432415726654499e-11,
        5.712610404244119e-12,
        4.996863571198007e-12,
        2.50876282906927e-12,
        2.2061293672236323e-12,
        0.20410099240930754,
    ]
    w13 = [
        2.5249282417299593e-12,
        6.989609320130095e-12,
        2.273164837384381e-12,
        4.030282074065242e-12,
        0.3797661697236015,
        3.693030786466783e-13,
        0.17660513859783303,
        3.2050070941789235e-12,
        3.4383509435362943e-12,
        0.040750909622561456,
        0.05638227444983319,
        3.946602613760457e-13,
        1.9709649688509545e-14,
        2.5981044526983304e-12,
        2.8723207504665393e-13,
        0.1585473448927049,
        0.18794816267268055,
        3.6155144948511706e-12,
        9.321661877136584e-12,
        1.717866934662681e-12,
    ]
    w14 = [
        1.7959854306408767e-12,
        1.7156481414042887e-12,
        1.2771013362498924e-12,
        1.4834517685526053e-12,
        2.4173240009633934e-10,
        1.4999073050992992e-12,
        0.9999999997299931,
        1.8841529140028033e-12,
        1.6272444266391985e-12,
        1.9083773025285005e-12,
        1.8700985786185693e-12,
        1.5553736088431574e-12,
        1.2484132458499945e-12,
        1.7382976188005103e-12,
        1.2781860831397474e-12,
        9.01786461024123e-13,
        1.183246640619779e-12,
        1.9014146908574295e-12,
        1.5581671397691983e-12,
        1.847450196180598e-12,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-9
    @test rmsd(w12, w22) < 1e-10
    @test rmsd(w13, w23) < 1e-10
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        1.5872117599818181e-12,
        0.22119704093179035,
        2.7460744440299463e-12,
        8.760783938755109e-12,
        2.42796997026455e-11,
        4.153621663627526e-12,
        0.02918541160594417,
        4.6506478406695e-12,
        2.5706293424936534e-12,
        5.068814556141634e-12,
        0.545516556476523,
        6.062817157637105e-13,
        2.9662912155824217e-12,
        1.031358077466878e-12,
        1.0810184999857832e-9,
        3.4809641727814008e-12,
        1.1123583810364371e-11,
        2.28985847538167e-12,
        3.3954259268973147e-12,
        0.20410098982601288,
    ]
    w12 = [
        5.580118825542006e-12,
        0.22119703872625918,
        5.833275701497547e-12,
        3.9356989124554925e-11,
        1.6652924492694228e-11,
        1.4531635293386055e-11,
        0.029185411802843234,
        1.5084072253204066e-11,
        5.253374561521923e-12,
        8.812347870425367e-12,
        0.5455165569799576,
        3.5800226333485165e-12,
        9.296190283320398e-12,
        4.963437479493972e-12,
        6.630418990866132e-11,
        1.0929402734492203e-11,
        3.283613803392497e-11,
        6.620394448355113e-12,
        6.303108776951111e-12,
        0.20410099223900247,
    ]
    w13 = [
        3.999083476616732e-9,
        2.8780832136796113e-8,
        3.201044912321686e-9,
        7.364193078023599e-9,
        0.37976614060599495,
        1.0996123653630493e-9,
        0.17660512637564443,
        7.332034223940026e-9,
        5.17433543394314e-9,
        0.04075088649799189,
        0.056382248000272014,
        1.3378845498290765e-9,
        7.017547192890002e-10,
        8.443080003112706e-9,
        1.2178573036750075e-9,
        0.15854733762603024,
        0.18794816432764888,
        7.050239510025053e-9,
        1.7124171816281148e-8,
        3.740293885250038e-9,
    ]
    w14 = [
        5.432491017337578e-10,
        6.088877217065151e-10,
        7.568888313805797e-10,
        6.829362461973679e-10,
        0.8503254122959001,
        2.3943626149029237e-10,
        0.14967457826143366,
        4.1500086957672766e-10,
        6.593731940823428e-10,
        4.4880242354909025e-10,
        3.9860209517794684e-10,
        2.479958142645432e-10,
        1.7655956953068637e-10,
        3.182809897936625e-10,
        1.795357817956996e-10,
        1.2368513808641989e-9,
        8.481233016212245e-10,
        4.367623435601381e-10,
        7.062017525713229e-10,
        5.391785591969758e-10,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-7
    @test rmsd(w12, w22) < 1.5e-4
    @test rmsd(w13, w23) < 1e-7
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        1.5872117599818181e-12,
        0.22119704093179035,
        2.7460744440299463e-12,
        8.760783938755109e-12,
        2.42796997026455e-11,
        4.153621663627526e-12,
        0.02918541160594417,
        4.6506478406695e-12,
        2.5706293424936534e-12,
        5.068814556141634e-12,
        0.545516556476523,
        6.062817157637105e-13,
        2.9662912155824217e-12,
        1.031358077466878e-12,
        1.0810184999857832e-9,
        3.4809641727814008e-12,
        1.1123583810364371e-11,
        2.28985847538167e-12,
        3.3954259268973147e-12,
        0.20410098982601288,
    ]
    w12 = [
        7.45989992711553e-12,
        0.22119703935082163,
        1.2129605506189624e-11,
        3.030619355618286e-11,
        5.130838714873081e-11,
        1.5193888909346986e-11,
        0.029185411828414175,
        1.5638488715182897e-11,
        1.2468753956520241e-11,
        1.4635748676102266e-11,
        0.545516556818022,
        5.0611334298293105e-12,
        9.691820170210439e-12,
        7.496507459625859e-12,
        1.4996790132973115e-10,
        1.3336869774187548e-11,
        3.6802565605001553e-11,
        9.645249385748878e-12,
        1.3380874125869641e-11,
        0.20410099159821812,
    ]
    w13 = [
        1.9829182115492817e-10,
        6.620856343474973e-10,
        1.5786279568215212e-10,
        3.1883061547143337e-10,
        0.37976617050877287,
        5.563110615358895e-11,
        0.17660513696675353,
        3.1906755895221523e-10,
        2.8586380930272815e-10,
        0.040750907805173445,
        0.056382272517820534,
        5.867118305299877e-11,
        3.5930256458744575e-11,
        2.642012788113992e-10,
        5.80493968369723e-11,
        0.15854734516583013,
        0.1879481629272116,
        3.586456944045736e-10,
        1.199359003210698e-9,
        1.3594766555055647e-10,
    ]
    w14 = [
        2.2214447250728438e-12,
        2.5454915608984357e-12,
        3.2228182522120352e-12,
        2.9236350294530333e-12,
        0.853395144873137,
        8.398455809331968e-13,
        0.1466048550886921,
        1.5747499898192399e-12,
        2.7952455160063363e-12,
        1.7346016644847664e-12,
        1.4968040241016079e-12,
        8.72177328997753e-13,
        6.36222713719807e-13,
        1.1407125376912396e-12,
        6.374402567087384e-13,
        5.02661761490207e-12,
        3.618879541395566e-12,
        1.6774741223781233e-12,
        3.0129758027187774e-12,
        2.1939477909300844e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-8
    @test rmsd(w12, w22) < 1e-9
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-8
end

@testset "cvar" begin
    println("Testing rm = :cvar, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS =>
                Dict(:solver => ECOS.Optimizer, :params => Dict("verbose" => false)),
            :COSMO => Dict(:solver => COSMO.Optimizer),
            :Clarabel => Dict(:solver => Clarabel.Optimizer),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 1)),
        ),
    )
    asset_statistics!(port)
    rm = :cvar

    w11 = [
        2.303134652727294e-13,
        0.04242033344689568,
        2.2560723197168515e-13,
        5.879677806934238e-13,
        0.00757402780230305,
        2.3254133834035285e-13,
        2.137006070885132e-14,
        0.09464947869391295,
        9.5745671879576e-14,
        1.2881104140338158e-13,
        0.3040110655982685,
        1.2263136596657544e-13,
        5.45900791459912e-14,
        0.06564167131742486,
        2.0400196887884809e-13,
        0.029371611103182725,
        2.426150553645928e-13,
        0.3663101128910502,
        1.2705737244784516e-13,
        0.0900216991446889,
    ]
    w12 = [
        2.7548924145067353e-12,
        0.036359165797018506,
        2.4593262619968404e-12,
        8.082040204696044e-12,
        0.01717734834554079,
        2.552923489640131e-12,
        4.5149908101297456e-13,
        0.09164255516352998,
        1.2849261042143455e-12,
        1.4615907979630983e-12,
        0.32258428845565756,
        1.2430706489478934e-12,
        7.266810569848359e-13,
        0.03955071305075278,
        2.1699297437998916e-12,
        0.03091937834243328,
        3.2957346960749036e-12,
        0.37332984206148495,
        1.587025068411895e-12,
        0.08843670875551242,
    ]
    w13 = [
        2.27808798340481e-14,
        3.9771469177560906e-14,
        5.1934421313554014e-14,
        1.514276585711131e-14,
        0.5628454293454889,
        1.6738404571264975e-14,
        0.04434184295741817,
        1.0098965813453761e-13,
        4.276588411855481e-14,
        5.074743635238302e-15,
        7.67170461851457e-14,
        1.8117849009016032e-14,
        2.388234773936646e-14,
        2.6096030468732262e-15,
        2.4399823832566055e-14,
        0.20959173458768757,
        0.1832209931085117,
        1.1316968761107113e-13,
        2.683466231053402e-13,
        7.123753568969862e-14,
    ]
    w14 = [
        5.152273955249736e-11,
        5.197813415202082e-11,
        3.769639077745766e-11,
        5.720033360276275e-11,
        4.1856645151623315e-9,
        4.509891998252037e-11,
        0.9999999949400076,
        5.4745257607000495e-11,
        5.855899562059385e-11,
        5.736300095386456e-11,
        5.536978956261922e-11,
        4.381613412623681e-11,
        3.2327676722967096e-11,
        5.2366249771619416e-11,
        3.493451254347115e-11,
        5.217368209578132e-11,
        3.140615455370963e-11,
        5.556211964812391e-11,
        5.011464681628099e-11,
        5.20932177761396e-11,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-11
    @test rmsd(w12, w22) < 1e-9
    @test rmsd(w13, w23) < 1e-11
    @test rmsd(w14, w24) < 1e-9

    w11 = [
        2.303134652727294e-13,
        0.04242033344689568,
        2.2560723197168515e-13,
        5.879677806934238e-13,
        0.00757402780230305,
        2.3254133834035285e-13,
        2.137006070885132e-14,
        0.09464947869391295,
        9.5745671879576e-14,
        1.2881104140338158e-13,
        0.3040110655982685,
        1.2263136596657544e-13,
        5.45900791459912e-14,
        0.06564167131742486,
        2.0400196887884809e-13,
        0.029371611103182725,
        2.426150553645928e-13,
        0.3663101128910502,
        1.2705737244784516e-13,
        0.0900216991446889,
    ]
    w12 = [
        3.901389196720429e-11,
        0.036359167344902056,
        3.871435968505127e-11,
        1.2956334498057992e-10,
        0.01717734945422618,
        3.640854067607285e-11,
        6.540525080510947e-12,
        0.09164255746184724,
        2.0849167049660003e-11,
        2.3240324850316875e-11,
        0.3225842755340019,
        1.991626464471255e-11,
        1.1263417343482922e-11,
        0.03955071896162385,
        3.7028392830986467e-11,
        0.030919377880693818,
        4.812427503923967e-11,
        0.37332984167627487,
        2.5967158513110906e-11,
        0.08843671124980043,
    ]
    w13 = [
        9.248469965923031e-9,
        1.3906018526509056e-8,
        1.2668796300024209e-8,
        8.702857504711827e-9,
        0.5593115737357834,
        2.917223597832455e-9,
        0.029474953334083825,
        1.8590253529694341e-7,
        1.0584028972234713e-8,
        6.341342591015511e-9,
        4.0564908724766405e-8,
        2.54958359092519e-9,
        1.712875005001451e-9,
        5.616527190888435e-9,
        1.7681063630272971e-9,
        0.20296964510473753,
        0.2082432909638256,
        1.1771121720685817e-7,
        8.661971978368329e-8,
        3.0047359022582616e-8,
    ]
    w14 = [
        6.407064851238897e-11,
        7.154417226653421e-11,
        8.845011061977296e-11,
        7.988197742640806e-11,
        0.8503236439412061,
        2.8720964009681457e-11,
        0.1496763549521902,
        4.9283402050981806e-11,
        7.683519547180937e-11,
        5.298263419371677e-11,
        4.741798203501393e-11,
        2.960032072307228e-11,
        2.1157547772592066e-11,
        3.796755892069836e-11,
        2.162204483249587e-11,
        1.405552206249925e-10,
        9.881091300043403e-11,
        5.179609682439249e-11,
        8.232307798705996e-11,
        6.358371799699763e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-11
    @test rmsd(w12, w22) < 1e-8
    @test rmsd(w13, w23) < 1e-6
    @test rmsd(w14, w24) < 1e-10

    w11 = [
        2.303134652727294e-13,
        0.04242033344689568,
        2.2560723197168515e-13,
        5.879677806934238e-13,
        0.00757402780230305,
        2.3254133834035285e-13,
        2.137006070885132e-14,
        0.09464947869391295,
        9.5745671879576e-14,
        1.2881104140338158e-13,
        0.3040110655982685,
        1.2263136596657544e-13,
        5.45900791459912e-14,
        0.06564167131742486,
        2.0400196887884809e-13,
        0.029371611103182725,
        2.426150553645928e-13,
        0.3663101128910502,
        1.2705737244784516e-13,
        0.0900216991446889,
    ]
    w12 = [
        4.619652900809258e-11,
        0.036359181702277345,
        4.567868530205557e-11,
        1.535693864641901e-10,
        0.01717734054145095,
        4.317662540103457e-11,
        7.732997861072141e-12,
        0.09164255790625052,
        2.4542973162652893e-11,
        2.750093897975244e-11,
        0.32258422434562267,
        2.341204509979607e-11,
        1.3296342203092745e-11,
        0.03955073570081477,
        4.459084506586277e-11,
        0.030919378085716848,
        5.698511415879638e-11,
        0.3733298473737275,
        3.060116587468088e-11,
        0.08843673382685575,
    ]
    w13 = [
        3.8545685729666835e-10,
        5.592942794436413e-10,
        6.167673692826263e-10,
        3.389405573886444e-10,
        0.562270214633016,
        1.229763320980819e-10,
        0.041921692832627776,
        1.1705453923513893e-9,
        5.008459377062156e-10,
        2.68632339497541e-10,
        1.1673754279984465e-9,
        1.130667604574582e-10,
        7.449945196456532e-11,
        2.285445606805847e-10,
        7.673264675361186e-11,
        0.20851374053679536,
        0.1872943421590053,
        1.2552113375430242e-9,
        2.156007168445332e-9,
        8.036591855912093e-10,
    ]
    w14 = [
        3.5417734327410802e-12,
        4.012191134390014e-12,
        5.004219622080099e-12,
        4.480615548386929e-12,
        0.8533951448549584,
        1.5154165972083055e-12,
        0.14660485508355525,
        2.6967059397037035e-12,
        4.357606295122794e-12,
        2.9147323855324295e-12,
        2.6103783523309775e-12,
        1.5655944256000861e-12,
        1.0921489055281942e-12,
        2.042525560663503e-12,
        1.1121951106451e-12,
        7.703092052941846e-12,
        5.689252206869037e-12,
        2.8573540674297534e-12,
        4.769579735749646e-12,
        3.5209346491164276e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-8
    @test rmsd(w12, w22) < 1e-7
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-8
end

@testset "evar" begin
    println("Testing rm = :evar, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS => Dict(
                :solver => ECOS.Optimizer,
                :params => Dict("verbose" => false, "maxit" => 200),
            ),
            :Clarabel => Dict(
                :solver => Clarabel.Optimizer,
                :params => Dict("verbose" => false),
            ),
            :COSMO =>
                Dict(:solver => COSMO.Optimizer, :params => Dict("verbose" => false)),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)
    rm = :evar

    w11 = [
        2.3010332937056324e-5,
        0.15904585435949511,
        1.9466595990956338e-5,
        0.01633520792118815,
        2.5449936092232598e-5,
        0.00011588683539808774,
        0.015339264469876133,
        0.1549916981169939,
        1.843005652452624e-5,
        2.0025819790224893e-5,
        0.4526592005243169,
        1.634814762506855e-5,
        2.475704699222494e-5,
        3.763276839876931e-5,
        0.004169221826305033,
        0.0002584312109083365,
        0.015516948227763287,
        0.00016834457761860904,
        2.3068531181638514e-5,
        0.1811917526946038,
    ]
    w12 = [
        7.764316037289316e-9,
        0.1513987651581381,
        6.6931398915977e-9,
        0.020421294226148183,
        9.73743511402055e-9,
        2.3826337632147742e-8,
        0.01722231388670238,
        0.15323487083507017,
        6.341129824521381e-9,
        6.945031403755022e-9,
        0.4464508152608372,
        5.248720283090065e-9,
        6.916440813172021e-9,
        1.2524728037154376e-8,
        1.0490108231508911e-7,
        3.8175293262760857e-7,
        0.02761804576300884,
        6.271388103407004e-8,
        8.081265106185231e-9,
        0.18365325142365505,
    ]
    w13 = [
        3.076508751529447e-8,
        9.277077352505919e-9,
        3.3148660421548246e-8,
        2.4208446607157443e-8,
        0.5367723899818512,
        1.356870169870626e-7,
        0.13762177716967672,
        2.1540712490549928e-8,
        3.448560220321819e-8,
        4.170353478994931e-8,
        1.6444447189432472e-8,
        1.37303315455866e-7,
        2.0076520038710387e-7,
        5.436589531217834e-8,
        1.8278300815340426e-7,
        0.18389339314791642,
        0.1417114521759636,
        1.806081806104358e-8,
        1.0611895955842585e-8,
        3.637387306368509e-8,
    ]
    w14 = [
        4.732587949531317e-11,
        4.9806119822412933e-11,
        5.95821742305601e-11,
        5.535634453627276e-11,
        3.458816523090677e-9,
        2.4028811539018406e-11,
        0.9999999957781234,
        3.626071166523671e-11,
        5.210197729169735e-11,
        3.929339808672974e-11,
        3.528663694328443e-11,
        2.5333408613328912e-11,
        1.858696725887365e-11,
        3.007989177316934e-11,
        1.9188881417893284e-11,
        7.25553669978091e-11,
        6.155452199676112e-11,
        3.789054139559595e-11,
        5.363293798393116e-11,
        4.5195415964148415e-11,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1e-6
    @test rmsd(w13, w23) < 1e-3
    @test rmsd(w14, w24) < 1e-7

    w11 = [
        2.3010332937056324e-5,
        0.15904585435949511,
        1.9466595990956338e-5,
        0.01633520792118815,
        2.5449936092232598e-5,
        0.00011588683539808774,
        0.015339264469876133,
        0.1549916981169939,
        1.843005652452624e-5,
        2.0025819790224893e-5,
        0.4526592005243169,
        1.634814762506855e-5,
        2.475704699222494e-5,
        3.763276839876931e-5,
        0.004169221826305033,
        0.0002584312109083365,
        0.015516948227763287,
        0.00016834457761860904,
        2.3068531181638514e-5,
        0.1811917526946038,
    ]
    w12 = [
        4.076362009442859e-8,
        0.15140502026410385,
        3.514701860253866e-8,
        0.02042091252708798,
        5.114683996032453e-8,
        1.2503221108629294e-7,
        0.017220719804414565,
        0.15322901011669066,
        3.3293806651945786e-8,
        3.646735897908761e-8,
        0.44645252415219394,
        2.7554486250213578e-8,
        3.632961532000158e-8,
        6.567476329734442e-8,
        5.469793714134177e-7,
        1.9611395486144403e-6,
        0.027608911247304718,
        3.2719931468864686e-7,
        4.24284540573486e-8,
        0.18365957273179523,
    ]
    w13 = [
        1.472729878979434e-7,
        1.0650700636223798e-6,
        1.339498448799022e-7,
        1.8549785111314984e-7,
        0.4916872630935656,
        3.252815170762038e-8,
        0.11118631530182936,
        5.426841283706828e-7,
        1.295474973227387e-7,
        1.1277334635718631e-7,
        9.970470090008889e-7,
        3.049912018398635e-8,
        2.039131263463318e-8,
        8.934038321740165e-8,
        2.2763786662346187e-8,
        0.18070116534217698,
        0.21642042243281093,
        4.734027143294267e-7,
        7.045013864675675e-7,
        1.465600332575276e-7,
    ]
    w14 = [
        6.83323119872969e-10,
        7.616689703304776e-10,
        9.105479364408012e-10,
        8.591436569668001e-10,
        0.8503244622653177,
        3.4620187410684163e-10,
        0.14967552562127506,
        5.549786987897421e-10,
        8.527038490066765e-10,
        6.012853786565789e-10,
        5.360463330580118e-10,
        3.567847079416162e-10,
        2.626379556300326e-10,
        4.4413215058670634e-10,
        2.6589856189575143e-10,
        1.517040468187833e-9,
        1.0082324234767702e-9,
        5.791402036610941e-10,
        8.900853861429578e-10,
        6.835558188589269e-10,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1e-4
    @test rmsd(w13, w23) < 3.5e-3
    @test rmsd(w14, w24) < 1e-10

    w11 = [
        2.3010332937056324e-5,
        0.15904585435949511,
        1.9466595990956338e-5,
        0.01633520792118815,
        2.5449936092232598e-5,
        0.00011588683539808774,
        0.015339264469876133,
        0.1549916981169939,
        1.843005652452624e-5,
        2.0025819790224893e-5,
        0.4526592005243169,
        1.634814762506855e-5,
        2.475704699222494e-5,
        3.763276839876931e-5,
        0.004169221826305033,
        0.0002584312109083365,
        0.015516948227763287,
        0.00016834457761860904,
        2.3068531181638514e-5,
        0.1811917526946038,
    ]
    w12 = [
        8.969445225396906e-11,
        0.12186895586627287,
        8.566656340934268e-11,
        0.023760506482624195,
        2.433068136596418e-10,
        1.3019165108393218e-10,
        0.0057136122764143964,
        0.1428088466436254,
        2.3971612221034656e-11,
        6.826252836396581e-11,
        0.42760458278251456,
        7.331710534327378e-11,
        3.690612785463839e-10,
        1.6887535081972322e-10,
        1.0123697800504516e-10,
        0.010614840764071817,
        0.04023390368296647,
        0.047891583808809195,
        4.316472317023914e-11,
        0.179503166295952,
    ]
    w13 = [
        5.991052752377225e-11,
        2.433071572090745e-10,
        6.137987612028502e-11,
        7.764227729932904e-11,
        0.5137576728307748,
        1.3933353478876682e-11,
        0.11861563828805713,
        1.1627729300826322e-10,
        5.840486231537919e-11,
        4.476212471392546e-11,
        1.5078033138891433e-10,
        1.3140683132002661e-11,
        8.958777288465453e-12,
        3.433655115631202e-11,
        9.66514874044241e-12,
        0.18153051016263663,
        0.18609617738724765,
        1.2749530550618746e-10,
        2.5163966524024895e-10,
        5.965006890936763e-11,
    ]
    w14 = [
        3.696510396916757e-12,
        4.169069932785755e-12,
        5.338268052922153e-12,
        4.734699188248743e-12,
        0.8533951447375869,
        1.5661530290111893e-12,
        0.14660485519752636,
        2.7744299162161516e-12,
        4.537600221937271e-12,
        3.0079350246873727e-12,
        2.662904487083837e-12,
        1.6290373955008443e-12,
        1.130376759336915e-12,
        2.1132873193150444e-12,
        1.148221081766175e-12,
        8.877450023425809e-12,
        6.028454624607497e-12,
        2.9253853085148482e-12,
        4.89375861052771e-12,
        3.65321267862404e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-3
    @test rmsd(w12, w22) < 1.5e-2
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 1e-8
end

@testset "rvar" begin
    println("Testing rm = :rvar, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS => Dict(
                :solver => ECOS.Optimizer,
                :params => Dict("verbose" => false, "maxit" => 200),
            ),
            :Clarabel => Dict(
                :solver => Clarabel.Optimizer,
                :params => Dict("verbose" => false),
            ),
            :COSMO =>
                Dict(:solver => COSMO.Optimizer, :params => Dict("verbose" => false)),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)
    rm = :rvar

    w11 = [
        1.9783062132048476e-7,
        0.12552716578011983,
        2.0786033868461824e-7,
        1.586179011783083e-7,
        1.3418986766135798e-7,
        1.554325253791357e-7,
        0.007646479601956259,
        0.213937896045473,
        1.5865119315748915e-7,
        1.800119946077241e-7,
        0.46520085503621345,
        2.4757097452420833e-7,
        1.6224989383347287e-7,
        1.9318708464560664e-7,
        7.831961814701979e-8,
        2.0812773657624318e-7,
        1.4911298452968159e-7,
        2.4156521233977854e-7,
        1.8856108319133288e-7,
        0.1876849422472079,
    ]
    w12 = [
        9.014301678525505e-9,
        0.19730124931412601,
        2.2149736568549733e-9,
        0.009958634808862141,
        7.461828199871207e-9,
        2.591178591018891e-8,
        0.029570057763818373,
        0.13927990418526945,
        4.258022055513588e-9,
        8.836842257229241e-9,
        0.42701761771346186,
        6.048384563202982e-9,
        1.5913279247827727e-9,
        2.846836598303463e-8,
        3.120543527898343e-8,
        1.9402185985933533e-8,
        1.8671029763241776e-8,
        3.9429180160636886e-8,
        1.1349954715369166e-8,
        0.19687232235084418,
    ]
    w13 = [
        4.3136559965343246e-8,
        4.058649205395248e-8,
        1.4440897587583353e-8,
        5.26403717915682e-8,
        0.47749083286356364,
        1.5076435414257574e-7,
        0.1838182351957419,
        7.659699338396456e-8,
        6.510534147892671e-8,
        1.1236961195377985e-7,
        8.911441819250446e-8,
        1.525950826382792e-7,
        2.3094566216738583e-7,
        1.2493246562437532e-7,
        2.8054529148271886e-7,
        0.15176147281036922,
        0.18692789962300255,
        6.682835912514554e-8,
        5.122451147371528e-8,
        7.680909701243837e-9,
    ]
    w14 = [
        4.332828618431265e-8,
        4.412541232011959e-8,
        4.3284571321645355e-8,
        4.3795015247105985e-8,
        1.7817758297642007e-6,
        4.6402267552826896e-8,
        0.999997401765868,
        4.543262704299355e-8,
        4.501601846359973e-8,
        4.5428127406551514e-8,
        4.52958390353112e-8,
        4.647397041305956e-8,
        5.0743050890492344e-8,
        4.5749636488478024e-8,
        4.766826784052939e-8,
        4.5286761124520554e-8,
        4.3953947229187936e-8,
        4.5207917895257286e-8,
        4.495100975199424e-8,
        4.431557583218842e-8,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 5e-2
    @test rmsd(w12, w22) < 3e-2
    @test rmsd(w13, w23) < 1.5e-2
    @test rmsd(w14, w24) < 1e-6

    w11 = [
        1.9783062132048476e-7,
        0.12552716578011983,
        2.0786033868461824e-7,
        1.586179011783083e-7,
        1.3418986766135798e-7,
        1.554325253791357e-7,
        0.007646479601956259,
        0.213937896045473,
        1.5865119315748915e-7,
        1.800119946077241e-7,
        0.46520085503621345,
        2.4757097452420833e-7,
        1.6224989383347287e-7,
        1.9318708464560664e-7,
        7.831961814701979e-8,
        2.0812773657624318e-7,
        1.4911298452968159e-7,
        2.4156521233977854e-7,
        1.8856108319133288e-7,
        0.1876849422472079,
    ]
    w12 = [
        9.014301678525505e-9,
        0.19730124931412601,
        2.2149736568549733e-9,
        0.009958634808862141,
        7.461828199871207e-9,
        2.591178591018891e-8,
        0.029570057763818373,
        0.13927990418526945,
        4.258022055513588e-9,
        8.836842257229241e-9,
        0.42701761771346186,
        6.048384563202982e-9,
        1.5913279247827727e-9,
        2.846836598303463e-8,
        3.120543527898343e-8,
        1.9402185985933533e-8,
        1.8671029763241776e-8,
        3.9429180160636886e-8,
        1.1349954715369166e-8,
        0.19687232235084418,
    ]
    w13 = [
        4.3136559965343246e-8,
        4.058649205395248e-8,
        1.4440897587583353e-8,
        5.26403717915682e-8,
        0.47749083286356364,
        1.5076435414257574e-7,
        0.1838182351957419,
        7.659699338396456e-8,
        6.510534147892671e-8,
        1.1236961195377985e-7,
        8.911441819250446e-8,
        1.525950826382792e-7,
        2.3094566216738583e-7,
        1.2493246562437532e-7,
        2.8054529148271886e-7,
        0.15176147281036922,
        0.18692789962300255,
        6.682835912514554e-8,
        5.122451147371528e-8,
        7.680909701243837e-9,
    ]
    w14 = [
        1.8627122645236273e-11,
        2.408694808141871e-11,
        3.6424621073439797e-11,
        3.0174191690909147e-11,
        0.8503271551723861,
        6.9268523006275565e-12,
        0.1496728444480554,
        7.85567861957879e-12,
        2.8160503255372478e-11,
        1.0658665145342347e-11,
        6.471150254909595e-12,
        6.2160861933501414e-12,
        1.2202245892621786e-11,
        2.988215511968398e-13,
        1.1957133510750498e-11,
        7.544005357222848e-11,
        4.398875603911654e-11,
        9.676675293326075e-12,
        3.2107546650158034e-11,
        1.8285626807746916e-11,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 5e-2
    @test rmsd(w12, w22) < 3e-2
    @test rmsd(w13, w23) < 1.7e-2
    @test rmsd(w14, w24) < 1e-10

    w11 = [
        1.9783062132048476e-7,
        0.12552716578011983,
        2.0786033868461824e-7,
        1.586179011783083e-7,
        1.3418986766135798e-7,
        1.554325253791357e-7,
        0.007646479601956259,
        0.213937896045473,
        1.5865119315748915e-7,
        1.800119946077241e-7,
        0.46520085503621345,
        2.4757097452420833e-7,
        1.6224989383347287e-7,
        1.9318708464560664e-7,
        7.831961814701979e-8,
        2.0812773657624318e-7,
        1.4911298452968159e-7,
        2.4156521233977854e-7,
        1.8856108319133288e-7,
        0.1876849422472079,
    ]
    w12 = [
        1.6339908824773239e-9,
        0.18785361734704872,
        5.6235750325061365e-9,
        0.010229273270024116,
        2.145881817979745e-9,
        2.6431786498852397e-8,
        0.034944108414147544,
        0.14769773602096598,
        3.318779302147341e-10,
        5.330873797911393e-9,
        0.4212644101745082,
        2.248051230140141e-9,
        1.8668271517284917e-9,
        2.796039828863696e-8,
        3.390260190245624e-8,
        1.687152400153133e-8,
        1.7477590155778092e-8,
        4.192912732730621e-8,
        9.336097931190306e-9,
        0.1980106616831015,
    ]
    w13 = [
        0.00020951098404609422,
        0.00026109773624657945,
        0.0003151223550578498,
        0.00027246322955495834,
        0.8060082183534146,
        8.925802345168651e-5,
        0.18941720354558209,
        0.00016691580392084898,
        0.0002840396261436436,
        0.0001728267369028469,
        0.0001617855626528449,
        8.87502485210866e-5,
        6.456853217838862e-5,
        0.0001220414806425407,
        6.599182538793858e-5,
        0.0011634618625357355,
        0.0004182999348165407,
        0.0001798399793284494,
        0.00032822084598869245,
        0.0002103833336264928,
    ]
    w14 = [
        7.76951241341802e-8,
        6.029864365730938e-7,
        7.374101569613261e-9,
        4.00563253322122e-7,
        0.8547023744913609,
        8.723761710817995e-7,
        0.14527653856538852,
        1.0389592522629672e-6,
        1.248425438190976e-6,
        1.2381426913148612e-6,
        9.523945158891405e-7,
        1.038965894041075e-6,
        2.8608425972503444e-6,
        8.852263146014757e-7,
        1.265902231714221e-6,
        5.1082833538909e-6,
        7.626403993103026e-7,
        9.197843680845396e-7,
        1.113399107849039e-6,
        6.929819995906802e-7,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 4.1e-2
    @test rmsd(w12, w22) < 2.7e-2
    @test rmsd(w13, w23) < 1e-8
    @test rmsd(w14, w24) < 5e-4
end

@testset "mdd" begin
    println("Testing rm = :mdd, for all kelly returns.")
    port = Portfolio(
        returns = RET,
        solvers = OrderedDict(
            :ECOS => Dict(
                :solver => ECOS.Optimizer,
                :params => Dict("verbose" => false, "maxit" => 500),
            ),
            :Clarabel => Dict(
                :solver => Clarabel.Optimizer,
                :params => Dict("verbose" => false, "max_step_fraction" => 0.9),
            ),
            :COSMO =>
                Dict(:solver => COSMO.Optimizer, :params => Dict("verbose" => false)),
            :SCS => Dict(:solver => SCS.Optimizer, :params => Dict("verbose" => 0)),
        ),
    )
    asset_statistics!(port)
    rm = :mdd

    w11 = [
        0.03773810157989838,
        8.218519125778296e-14,
        1.8909216453358465e-13,
        2.372179564900224e-13,
        0.06767028644965215,
        5.259644103336042e-13,
        4.737887712069405e-13,
        8.761479553870644e-11,
        2.929747505048438e-14,
        1.363805841188755e-12,
        0.49113432442939414,
        4.953508611797011e-13,
        0.028699870249064247,
        2.988125142775998e-13,
        3.2840057300798275e-13,
        0.14543878662957055,
        0.09520044588421932,
        0.102993342036098,
        6.306042456928766e-13,
        0.031124842649833936,
    ]
    w12 = [
        0.037738101641035415,
        1.6777856597250242e-13,
        2.676638607900095e-13,
        1.2408296300296452e-13,
        0.06767028650404505,
        5.068795730675681e-13,
        3.2142310425037224e-13,
        5.0758796938232184e-12,
        2.2591829242893184e-13,
        7.543183321177868e-13,
        0.4911343243422307,
        4.696749760872032e-13,
        0.028699870259353322,
        1.0457714469408207e-13,
        1.0256953717941221e-13,
        0.14543878670594462,
        0.09520044587568066,
        0.10299334216650265,
        4.739292201039674e-13,
        0.031124842496612893,
    ]
    w13 = [
        6.57454320675663e-14,
        1.0296890990307163e-12,
        2.330057794991116e-11,
        1.9035268729059683e-12,
        0.285395461042499,
        2.2223343528372137e-12,
        2.1831954492847816e-12,
        0.07964283619459461,
        2.0982852452748326e-12,
        2.0081979510485232e-12,
        0.3337054782271337,
        2.29516120325559e-12,
        2.388976373176604e-12,
        1.8573775710151153e-12,
        2.2925802529659753e-12,
        0.3012562244884411,
        7.577165637672333e-13,
        1.2236793228261315e-12,
        1.655409047909528e-12,
        4.8995886546650235e-14,
    ]
    w14 = [
        8.931449702368536e-13,
        9.484221316418283e-13,
        1.1410232540611591e-12,
        1.0926850959470071e-12,
        1.8065710361581948e-9,
        4.2090471598459996e-13,
        0.9999999981789072,
        6.789168763467449e-13,
        1.0276340381175471e-12,
        7.334005889094863e-13,
        6.513773987819921e-13,
        4.435361713334977e-13,
        3.168437382480083e-13,
        5.479795996320007e-13,
        3.3793880357004073e-13,
        1.5107675254536785e-12,
        1.195181363986857e-12,
        6.990411526707713e-13,
        1.055407115995939e-12,
        8.276457162462601e-13,
    ]

    kelly = :none
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-10
    @test rmsd(w12, w22) < 1e-8
    @test rmsd(w13, w23) < 1e-9
    @test rmsd(w14, w24) < 1e-7

    w11 = [
        0.03773810157989838,
        8.218519125778296e-14,
        1.8909216453358465e-13,
        2.372179564900224e-13,
        0.06767028644965215,
        5.259644103336042e-13,
        4.737887712069405e-13,
        8.761479553870644e-11,
        2.929747505048438e-14,
        1.363805841188755e-12,
        0.49113432442939414,
        4.953508611797011e-13,
        0.028699870249064247,
        2.988125142775998e-13,
        3.2840057300798275e-13,
        0.14543878662957055,
        0.09520044588421932,
        0.102993342036098,
        6.306042456928766e-13,
        0.031124842649833936,
    ]
    w12 = [
        0.03773810176281003,
        9.050753688497763e-13,
        1.2873468080774035e-12,
        6.707989287326192e-13,
        0.06767028647410092,
        2.781562677732707e-12,
        1.675190739326753e-12,
        2.950809289989109e-11,
        1.228458398588984e-12,
        4.098869698795381e-12,
        0.4911343241861302,
        2.590711105047106e-12,
        0.028699870219241,
        5.642523465331635e-13,
        5.583417493089745e-13,
        0.14543878679967,
        0.09520044602244468,
        0.10299334208215895,
        2.502875633444782e-12,
        0.031124842405072645,
    ]
    w13 = [
        4.174384706517092e-9,
        1.1148889702508254e-9,
        0.003985416566456653,
        5.674719397924786e-10,
        0.2867040527838013,
        3.141750827487696e-10,
        4.760282798933436e-10,
        0.07144836783605892,
        4.275097972867445e-10,
        5.035133020882635e-10,
        0.34363837207851805,
        2.4993523910536975e-10,
        1.7051918035616923e-10,
        6.241081077584317e-10,
        2.3139811750858842e-10,
        0.29422377472913586,
        2.5045181323018767e-9,
        1.3467942651217462e-9,
        9.2642123037968e-10,
        2.374362841435235e-9,
    ]
    w14 = [
        7.559524064239443e-12,
        8.415658144041507e-12,
        1.5967192144592853e-11,
        9.288382959419136e-12,
        0.8503265787909936,
        3.2299709982304365e-12,
        0.14967342106642417,
        6.11742988650333e-12,
        8.833042848971733e-12,
        6.079510204479378e-12,
        5.651514175493127e-12,
        3.3197209468580894e-12,
        2.342047963705129e-12,
        4.371451162285659e-12,
        2.4100718788992796e-12,
        2.3911759469536495e-11,
        1.1896180535388337e-11,
        5.9781447830161065e-12,
        9.744113426887544e-12,
        7.466493290249241e-12,
    ]

    kelly = :approx
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-10
    @test rmsd(w12, w22) < 1e-10
    @test rmsd(w13, w23) < 3.5e-4
    @test rmsd(w14, w24) < 1e-10

    w11 = [
        0.03773810157989838,
        8.218519125778296e-14,
        1.8909216453358465e-13,
        2.372179564900224e-13,
        0.06767028644965215,
        5.259644103336042e-13,
        4.737887712069405e-13,
        8.761479553870644e-11,
        2.929747505048438e-14,
        1.363805841188755e-12,
        0.49113432442939414,
        4.953508611797011e-13,
        0.028699870249064247,
        2.988125142775998e-13,
        3.2840057300798275e-13,
        0.14543878662957055,
        0.09520044588421932,
        0.102993342036098,
        6.306042456928766e-13,
        0.031124842649833936,
    ]
    w12 = [
        0.03773810175397356,
        1.4181859209230405e-12,
        6.426425217170415e-12,
        9.995586305649273e-13,
        0.06767028658777575,
        3.724236080414627e-12,
        3.395809480341353e-12,
        3.472999457571455e-11,
        1.7445153778399072e-12,
        5.654937226414557e-12,
        0.49113432397048407,
        3.4747368808332607e-12,
        0.028699870198940262,
        8.644104740812288e-13,
        7.882642662325359e-13,
        0.14543878687911138,
        0.09520044611655315,
        0.10299334232907636,
        4.3301236910744876e-12,
        0.031124842096534128,
    ]
    w13 = [
        1.0345947348204074e-10,
        4.2759962604708345e-11,
        0.011870069189330729,
        1.943167212596463e-11,
        0.28871362956040714,
        1.0876964105279184e-11,
        1.64080478300663e-11,
        0.06347622131871408,
        1.4149488689385676e-11,
        1.7256421483910193e-11,
        0.35128202494391975,
        9.033388683848323e-12,
        5.738323673484521e-12,
        2.2405650334768815e-11,
        8.643971967339894e-12,
        0.28465805450272236,
        7.244768414307791e-11,
        4.0384877031086744e-11,
        3.052956208541654e-11,
        7.138041785589228e-11,
    ]
    w14 = [
        1.3741159393600643e-12,
        1.5485890085566755e-12,
        2.0439914269193055e-12,
        1.7428425550330708e-12,
        0.8533951448337673,
        5.867272514090747e-13,
        0.1466048551414273,
        1.0507807575745433e-12,
        1.673031493219416e-12,
        1.1280247642521313e-12,
        1.002306616327056e-12,
        6.091659363540497e-13,
        4.2501476760985133e-13,
        7.911887623547183e-13,
        4.3262457982875845e-13,
        3.5394943796326598e-12,
        2.5802313963156424e-12,
        1.0982814882386467e-12,
        1.8133990949330632e-12,
        1.3655684789520054e-12,
    ]

    kelly = :exact
    obj = :min_risk
    w1 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :utility
    w2 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :sharpe
    w3 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    obj = :max_ret
    w4 = opt_port!(port, type = type, rm = rm, obj = obj, kelly = kelly, rf = rf, l = l)
    w21 = w1.weights
    w22 = w2.weights
    w23 = w3.weights
    w24 = w4.weights

    @test rmsd(w11, w21) < 1e-8
    @test rmsd(w12, w22) < 1e-9
    @test rmsd(w13, w23) < 3e-5
    @test rmsd(w14, w24) < 2e-7
end
=#