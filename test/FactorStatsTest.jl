using CSV, TimeSeries, DataFrames, StatsBase, Statistics, LinearAlgebra, Test,
      PortfolioOptimiser

prices_assets = TimeArray(CSV.File("./assets/stock_prices.csv"); timestamp = :date)
prices_factors = TimeArray(CSV.File("./assets/factor_prices.csv"); timestamp = :date)

rf = 1.0329^(1 / 252) - 1
l = 2.0

@testset "Loadings Matrix" begin
    portfolio = Portfolio(; prices = prices_assets, f_prices = prices_factors)
    nms = ["tickers", "const", "MTUM", "QUAL", "VLUE", "SIZE", "USMV"]

    pval = PVal()
    @test_throws AssertionError pval.threshold = 1
    @test_throws AssertionError pval.threshold = 0
    pval.threshold = 0.5
    @test pval.threshold == 0.5

    opt = FReg()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008407013969662878, 0.0017791646483353075, -0.0006069768500075827,
                 0.001738046978669652, 0.00033425409596189986, 0.0008641141675397427,
                 0.0004021965063144702, 0.00024611494888044164, -0.0005357683629290428,
                 -0.001552593059063253, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003575774384995594,
                 0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10297765603226086,
                 0.0, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0, 0.0, 0.0,
                 -0.06739388297308944, 0.0, -0.09204546965378291, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0, -0.10164210407325881,
                 -0.3265706503736942, 0.0, -0.13261040097042645, 0.0, 0.0, 0.0,
                 0.0916256099434114, 0.0, 0.0, 0.12474407131296936, 0.0, 0.0, 0.0, 0.0,
                 -0.07813119508111976, 0.0, 0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.06760938082816292, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AIC()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008448251080905888, 0.0017791646483353075, -0.0005705023313015225,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.00046117682801699036, 0.00023380565458931617, -0.0005357683629290428,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003400639408427236,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2705732482923092, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17938541886894335,
                 0.0, 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.0, 0.4759572343739958, 0.0, 0.0, 0.0, 1.5152358143137712, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.5882648692660363, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0,
                 -0.18588533550714395, 0.0, 0.0, 0.0, 0.2677805704229642,
                 -0.1368807270072514, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0,
                 -0.1688494427521949, -0.23411356595605096, -0.21731935166210736, 0.0,
                 -0.09204546965378291, 0.0, -0.33097845086566885, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, -0.46343683351821613,
                 -0.10164210407325881, -0.3265706503736942, 0.0, -0.13261040097042645, 0.0,
                 0.0, 0.0, 0.0916256099434114, 0.0, 0.0, 0.4148171351115785, 0.0, 0.0, 0.0,
                 0.0, -0.6089091167169949, -0.27210017033490924, 0.1828375829856837, 0.0,
                 -0.9158091732143825, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AICC()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008448251080905888, 0.0017791646483353075, -0.0005705023313015225,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.00046117682801699036, 0.00023380565458931617, -0.0005357683629290428,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003400639408427236,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2705732482923092, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17938541886894335,
                 0.0, 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.0, 0.4759572343739958, 0.0, 0.0, 0.0, 1.5152358143137712, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.5882648692660363, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0,
                 -0.18588533550714395, 0.0, 0.0, 0.0, 0.2677805704229642,
                 -0.1368807270072514, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0,
                 -0.1688494427521949, -0.23411356595605096, -0.21731935166210736, 0.0,
                 -0.09204546965378291, 0.0, -0.33097845086566885, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, -0.46343683351821613,
                 -0.10164210407325881, -0.3265706503736942, 0.0, -0.13261040097042645, 0.0,
                 0.0, 0.0, 0.0916256099434114, 0.0, 0.0, 0.4148171351115785, 0.0, 0.0, 0.0,
                 0.0, -0.6089091167169949, -0.27210017033490924, 0.1828375829856837, 0.0,
                 -0.9158091732143825, 0.0, 0.0, 0.0, 0.0, 0.0, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = BIC()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008407013969662878, 0.0017791646483353075, -0.0006069768500075827,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.0004021965063144702, 0.00024611494888044164, -0.0005357683629290428,
                 -0.001552593059063253, -1.9438538649469838e-6, -0.0011014684717375986,
                 0.001178183021578672, 0.0010624628566782079, 0.0003575774384995594,
                 0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0, 0.4759572343739958,
                 0.0, 0.0, 0.0, 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.10297765603226086, 0.0, 0.0, 0.0, 0.0, 0.0, -0.06016206857452389, 0.0,
                 0.0, 0.0, -0.06739388297308944, 0.0, -0.09204546965378291, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.10164210407325881, -0.3265706503736942, 0.0, -0.13261040097042645, 0.0,
                 0.0, 0.0, 0.0916256099434114, 0.0, 0.0, 0.12474407131296936, 0.0, 0.0, 0.0,
                 0.0, -0.6089091167169949, 0.0, 0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.06760938082816292, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = RSq()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006605270346146956, 0.0007774242176882836, 0.0009370531829272047,
                 0.0008561485179286095, 0.0017762385187782336, -0.0005490480003969219,
                 0.001795187751077693, 0.00033117861888304546, 0.000886487183785207,
                 0.000485837378175358, 0.00023840334761025575, -0.0005300737742189842,
                 -0.0013719710233941755, -1.7316400621600023e-5, -0.0011626112121448753,
                 0.0011435095930696592, 0.0010475815408063694, 0.0003607202174155234,
                 0.000905002327242427, 0.0006335355748513342, -0.04507437059598512,
                 0.15247497298230217, 0.09603781841346652, -0.13526134186512948,
                 0.1902851254919559, -0.2037413548433964, 0.288689517996145,
                 0.09950211625811438, 0.020356052145108897, -0.17554176795392434,
                 -0.010596628752833528, 0.2175546149218007, -0.3348003264155173,
                 0.028730286176449786, 0.5609679140708942, 0.25974960885539,
                 0.1791136832070494, 0.1576174054666974, 0.01003594721236305,
                 0.20239510712940292, -0.08068093674781521, -0.1720437664966112,
                 -0.21548715966283602, 0.09575791638320814, -0.11454260932734896,
                 0.6859818842815929, 0.7330260332011653, 0.3019875958502012,
                 0.6531478892732593, 0.31691645318061845, 0.14530827117445438,
                 -0.3756027355574984, 1.50267884880278, 0.17591540350812612,
                 0.22181812002706483, 0.23464324623056007, 0.028790824760029497,
                 0.3291712644048697, 0.5820377566944817, 0.19856123464947448,
                 -0.07356747335142304, -0.034416947722216276, -0.1236919880155243,
                 -0.04695240036615764, 0.013271331872104516, -0.16331736469449784,
                 -0.15879312984621063, -0.15984372366879807, -0.15352705923754084,
                 0.19020696504724202, -0.18766345514624042, 0.3333280955357791,
                 0.2243925669722518, -0.10651349190692556, -0.3598564789115531,
                 -0.2766030283107483, -0.06262549687373214, -0.2589882965998035,
                 -0.2293083794155016, -0.26607818377911097, -0.00265749847204974,
                 -0.09785890326042787, 0.05548548974780297, -0.3059941081245066,
                 -0.07230812801559372, -0.08772917399626662, -0.20091330981361358,
                 -0.038107276136239654, -0.0301307597186033, -0.0029331243629587907,
                 -0.0030846362210230314, -0.3745504891367562, -0.5375459165227069,
                 -0.13451695124930121, -0.24243263320624733, 0.08750120363596908,
                 -0.1178110493382135, 0.005305723184252505, -0.01034554138147961,
                 0.010462255486823885, 0.3156618161151268, 0.07541020723900897,
                 0.22385463178341566, 0.4967783027694937, -0.04845885470690798,
                 -0.22924216223929628, -0.6879398855172563, -0.30640432745736895,
                 -0.6411804450194915, -0.3318959121852137, 0.09004448842949532,
                 0.33428341526935434, -0.6773456061966712, -0.05745465207553017,
                 -0.6112534458900131, -0.40039463845646667, -0.19807950081819095,
                 -0.26838621903106186, -0.47591858170378665, -0.21718778672737993]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AdjRSq()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006578842498376756, 0.0008125085541546204, 0.0009544324464201135,
                 0.0008448251080905888, 0.0017791646483353075, -0.0005534582683851492,
                 0.001738046978669652, 0.00033425409596189986, 0.0008871437642839244,
                 0.00046117682801699036, 0.00023380565458931617, -0.0005064348607251292,
                 -0.0014180446758150116, -1.0903288485071947e-5, -0.0011729012942708831,
                 0.0011237784536619372, 0.0010624628566782079, 0.0003609869435232479,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2063391478113464, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.2036038528484018, 0.0, 0.0, 0.6143288994174554,
                 0.18003577844734933, 0.0, 0.15777451592095218, 0.0, 0.18704558888036088,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.6886586900825836, 0.0, 0.0, 0.6658929551670347,
                 0.0, 0.0, 0.0, 1.5152358143137712, 0.08481636839940015, 0.0, 0.0, 0.0,
                 0.32900937537809516, 0.5882648692660363, 0.0, -0.11545376480706666, 0.0,
                 -0.15715150650747267, 0.0, 0.0, -0.2041249049130362, 0.0, 0.0,
                 -0.1675283285693941, 0.2677805704229642, -0.1368807270072514,
                 0.22501801913844097, 0.0, 0.0, -0.2878814081814334, -0.20446885830467773,
                 0.0, -0.2565203204139224, -0.23411356595605096, -0.21731935166210736, 0.0,
                 -0.09204546965378291, 0.0, -0.33097845086566885, 0.0, 0.0, 0.0,
                 -0.057535605163043506, 0.0, 0.0, 0.0, -0.34876549248126765,
                 -0.46343683351821613, -0.17272770121762607, -0.24418382874528208, 0.0,
                 -0.13261040097042645, 0.0, 0.0, 0.0, 0.2142893868685247, 0.0,
                 0.181867437019944, 0.4148171351115785, 0.0, -0.2626706043495686, 0.0, 0.0,
                 -0.642731243953271, -0.27210017033490924, 0.1828375829856837, 0.0,
                 -0.9158091732143825, 0.0, -0.5022419089711825, 0.0, 0.0,
                 -0.26636451915360293, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt = BReg()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006682666783877028, 0.0008125085541546204, 0.0009938539577313578,
                 0.0008448251080905889, 0.0017791646483353075, -0.0005632788650349695,
                 0.001738046978669652, 0.00033425409596189986, 0.0008913431138749996,
                 0.00046117682801699036, 0.0002458401993870664, -0.0005357683629290428,
                 -0.001552593059063253, -1.9438538649469838e-6, -0.0011297716334776765,
                 0.001178183021578672, 0.0010624628566782079, 0.00035901438896399323,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0,
                 0.026624010504930753, -0.2614329387110636, 0.17373178882466736, 0.0, 0.0,
                 0.0, 0.0, 0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.34214288894365086, 0.0,
                 0.0, 0.4759572343739958, 0.0, 0.20947832327860058, 0.0,
                 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.26762446801768025,
                 0.5882648692660363, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.2677805704229642, -0.1957071228053125, 0.0, 0.0, 0.0,
                 -0.2693637060710647, -0.06016206857452389, 0.0, -0.24169692610064705,
                 -0.23411356595605096, -0.21731935166210736, 0.0, -0.09204546965378291, 0.0,
                 -0.33097845086566874, 0.0, 0.0, 0.0, -0.057535605163043506, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.10164210407325881, 0.0, 0.0, -0.13261040097042645, 0.0, 0.0,
                 0.0, 0.0916256099434114, 0.0, 0.0, 0.41481713511157836, 0.0, 0.0, 0.0, 0.0,
                 -0.6089091167169949, -0.27210017033490924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, -0.4748967098697935, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AIC()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.000709977675346524, 0.0007746382686595056, 0.000975348480044519,
                 0.0008448251080905889, 0.0017956125285473888, -0.0005705023313015225,
                 0.001845375649197695, 0.00034023703034132685, 0.0008913431138749996,
                 0.00046117682801699036, 0.0002458401993870664, -0.00045352998172103014,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011855254271186657,
                 0.00115449512163721, 0.0010624628566782079, 0.0003609869435232479,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.2705732482923092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.6088892622598946, 0.0, 0.0, 0.15777451592095218, 0.0,
                 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.3629195919075172, 0.4759572343739958, 0.0, 0.20947832327860058, 0.0,
                 1.5152358143137712, 0.0, 0.0, 0.0, 0.0, 0.32900937537809516,
                 0.5882648692660363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.18588533550714395,
                 0.0, -0.1774978841176457, 0.0, 0.2677805704229642, -0.1957071228053125,
                 0.34473167286296263, 0.0, 0.0, -0.39907363096671844, 0.0, 0.0,
                 -0.2565203204139224, -0.23411356595605096, -0.21731935166210736, 0.0, 0.0,
                 0.0, -0.33097845086566874, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.286196348705267, -0.46343683351821613, -0.10164210407325881, 0.0, 0.0,
                 -0.13261040097042645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.41481713511157836,
                 0.0, 0.0, 0.0, -0.2707354341978757, -0.6089091167169949,
                 -0.27210017033490924, 0.0, 0.0, -0.9158091732143825, 0.0,
                 -0.591646027027249, 0.0, 0.0, -0.26636451915360293, -0.4748967098697935,
                 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AICC()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.000709977675346524, 0.0007746382686595056, 0.000975348480044519,
                 0.0008448251080905889, 0.0017956125285473888, -0.0005705023313015225,
                 0.001845375649197695, 0.00034023703034132685, 0.0008913431138749996,
                 0.00046117682801699036, 0.0002458401993870664, -0.00045352998172103014,
                 -0.0014180446758150116, -1.9438538649469838e-6, -0.0011855254271186657,
                 0.00115449512163721, 0.0010624628566782079, 0.0003609869435232479,
                 0.0009055676318466468, 0.000618697117955252, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.2705732482923092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.6088892622598946, 0.0, 0.0, 0.15777451592095218, 0.0,
                 0.18704558888036088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5331923581973012, 0.0,
                 0.3629195919075172, 0.4759572343739958, 0.0, 0.20947832327860058, 0.0,
                 1.5152358143137712, 0.0, 0.0, 0.0, 0.0, 0.32900937537809516,
                 0.5882648692660363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.18588533550714395,
                 0.0, -0.1774978841176457, 0.0, 0.2677805704229642, -0.1957071228053125,
                 0.34473167286296263, 0.0, 0.0, -0.39907363096671844, 0.0, 0.0,
                 -0.2565203204139224, -0.23411356595605096, -0.21731935166210736, 0.0, 0.0,
                 0.0, -0.33097845086566874, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.286196348705267, -0.46343683351821613, -0.10164210407325881, 0.0, 0.0,
                 -0.13261040097042645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.41481713511157836,
                 0.0, 0.0, 0.0, -0.2707354341978757, -0.6089091167169949,
                 -0.27210017033490924, 0.0, 0.0, -0.9158091732143825, 0.0,
                 -0.591646027027249, 0.0, 0.0, -0.26636451915360293, -0.4748967098697935,
                 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = BIC()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.000709977675346524, 0.0007746382686595056, 0.000975348480044519,
                 0.0008974890088837409, 0.0017956125285473888, -0.0005706669410836566,
                 0.001845375649197695, 0.0003105822107311081, 0.0008913431138749996,
                 0.0004427423929519425, 0.0002631446419061819, -0.0004355469454567747,
                 -0.0013430732876448985, -4.376248452712736e-5, -0.0012358294979835974,
                 0.00115449512163721, 0.0010079029335960474, 0.00035901438896399323,
                 0.0008621888482796806, 0.0006486846462746479, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4759572343739958, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.26762446801768025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 -0.24169692610064705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0, -0.6089091167169949, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                 0.0, 0.0, 0.0, 0.0, 0.0]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = RSq()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006605270346146956, 0.0007774242176882835, 0.0009370531829272047,
                 0.0008561485179286097, 0.0017762385187782331, -0.0005490480003969219,
                 0.001795187751077693, 0.00033117861888304535, 0.0008864871837852069,
                 0.00048583737817535814, 0.00023840334761025575, -0.0005300737742189843,
                 -0.0013719710233941755, -1.7316400621600047e-5, -0.0011626112121448753,
                 0.0011435095930696594, 0.0010475815408063692, 0.0003607202174155234,
                 0.0009050023272424269, 0.0006335355748513344, -0.045074370595985465,
                 0.15247497298230228, 0.09603781841346641, -0.13526134186512964,
                 0.19028512549195592, -0.2037413548433964, 0.288689517996145,
                 0.09950211625811443, 0.020356052145108806, -0.1755417679539243,
                 -0.0105966287528336, 0.21755461492180087, -0.3348003264155161,
                 0.028730286176449873, 0.5609679140708937, 0.2597496088553898,
                 0.17911368320704973, 0.1576174054666974, 0.01003594721236287,
                 0.2023951071294028, -0.0806809367478154, -0.1720437664966117,
                 -0.21548715966283596, 0.0957579163832087, -0.11454260932734849,
                 0.6859818842815929, 0.733026033201166, 0.30198759585020196,
                 0.6531478892732594, 0.31691645318061873, 0.14530827117445455,
                 -0.3756027355574993, 1.5026788488027794, 0.17591540350812607,
                 0.22181812002706874, 0.23464324623056168, 0.028790824760028776,
                 0.3291712644048697, 0.5820377566944815, 0.19856123464947423,
                 -0.073567473351423, -0.03441694772221593, -0.1236919880155243,
                 -0.04695240036615811, 0.013271331872104029, -0.16331736469449784,
                 -0.15879312984621186, -0.15984372366879857, -0.15352705923754084,
                 0.190206965047242, -0.18766345514624042, 0.3333280955357793,
                 0.22439256697225132, -0.10651349190692569, -0.3598564789115549,
                 -0.2766030283107488, -0.06262549687373202, -0.2589882965998035,
                 -0.22930837941550158, -0.26607818377911086, -0.002657498472049806,
                 -0.09785890326042801, 0.05548548974780297, -0.30599410812450634,
                 -0.07230812801559358, -0.08772917399626662, -0.20091330981361316,
                 -0.03810727613623948, -0.0301307597186033, -0.0029331243629587013,
                 -0.0030846362210230085, -0.3745504891367561, -0.537545916522707,
                 -0.1345169512493009, -0.24243263320624764, 0.08750120363596914,
                 -0.11781104933821343, 0.005305723184252505, -0.010345541381479657,
                 0.010462255486823849, 0.3156618161151275, 0.07541020723900915,
                 0.22385463178341575, 0.49677830276949353, -0.04845885470690811,
                 -0.22924216223929628, -0.687939885517256, -0.30640432745736956,
                 -0.6411804450194915, -0.3318959121852142, 0.0900444884294952,
                 0.3342834152693548, -0.6773456061966712, -0.057454652075530334,
                 -0.6112534458900147, -0.4003946384564678, -0.19807950081819076,
                 -0.26838621903106186, -0.4759185817037862, -0.2171877867273796]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt.criterion = AdjRSq()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006578842498376756, 0.0007841952298179896, 0.0009544324464201135,
                 0.0008448251080905889, 0.0017956125285473888, -0.0005534582683851492,
                 0.001822946586668907, 0.00034023703034132685, 0.0008871437642839244,
                 0.00048568992592094634, 0.0002458401993870664, -0.0005003851266011519,
                 -0.0014180446758150116, -1.0903288485071947e-5, -0.0011855254271186657,
                 0.001123778453661937, 0.001052679682192032, 0.0003609869435232479,
                 0.0009055676318466468, 0.0006340615270329902, 0.0, 0.1734542732738663, 0.0,
                 0.0, 0.0, -0.2063391478113464, 0.0, 0.0, 0.0, -0.17562862218379008, 0.0,
                 0.0, 0.0, 0.0, 0.6088892622598946, 0.18003577844734905,
                 0.16899770884632118, 0.15777451592095218, 0.0, 0.2027049102712144, 0.0,
                 -0.16441071542895827, 0.0, 0.0, 0.0, 0.6886586900825836,
                 0.6251873618824249, 0.3629195919075172, 0.6658929551670347,
                 0.3170059491139811, 0.20947832327860058, 0.0, 1.5152358143137712,
                 0.08481636839940047, 0.0, 0.0, 0.0, 0.32900937537809516,
                 0.5882648692660363, 0.19824200873062883, -0.11545376480706655, 0.0,
                 -0.15715150650747267, 0.0, 0.0, -0.2041249049130362, 0.0,
                 -0.1774978841176457, -0.1675283285693941, 0.1888426117203485,
                 -0.1957071228053125, 0.23960292354068619, 0.0, 0.0, -0.39907363096671844,
                 -0.2044688583046774, 0.0, -0.2565203204139224, -0.23411356595605096,
                 -0.2612116280815347, 0.0, -0.10367274107064804, 0.0, -0.33097845086566874,
                 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.36941602983235183,
                 -0.46343683351821613, -0.1727277012176264, 0.0, 0.0, -0.14488227110529303,
                 0.0, 0.0, 0.0, 0.21428938686852453, 0.0, 0.181867437019944,
                 0.41481713511157836, 0.0, -0.2626706043495686, -0.5693600754090178,
                 -0.2707354341978757, -0.642731243953271, -0.333013553825995, 0.0,
                 0.26906461993536374, -0.9158091732143825, 0.0, -0.591646027027249, 0.0,
                 -0.19676044991186897, -0.26636451915360293, -0.4748967098697935,
                 -0.21320123486609163]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt = PCAReg()
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    @test loadings[!, 1] == portfolio.assets
    loadingst = [0.0006662517554895613, 0.0007849399521007353, 0.0009459643095974261,
                 0.0008592165739551059, 0.0017810088172303237, -0.0005785685052765102,
                 0.0017612947636060521, 0.00031520900097339053, 0.0008537176877854478,
                 0.00047237916398566173, 0.00023196965409296732, -0.0005054162297035768,
                 -0.001428622056331956, -2.5004548117932965e-5, -0.001179636183792172,
                 0.0011274045369944025, 0.0010443935920757378, 0.00034316200087855785,
                 0.0008756515571520005, 0.0006211971816987232, -0.06480893184671573,
                 0.1265663349283535, 0.0653189102028268, -0.1458377072284466,
                 0.1738406998081868, -0.10197670562589776, 0.40552722097762495,
                 0.15455342961953245, 0.13332079577168368, -0.12914789861819367,
                 0.011581940571448275, 0.1325538204431709, -0.13950988276499687,
                 0.05523327575227011, 0.6196572987779648, 0.315267811840457,
                 0.1901033490552249, 0.2181450202232006, 0.1112154776675105,
                 0.24492867002761706, 0.03621442191787707, -0.018576988118456914,
                 -0.03352731026571275, 0.15840577598426964, -0.017135982753150723,
                 0.0831909218360671, 0.04095160488367174, -0.02410240121837963,
                 -0.01598551861123954, 0.04210781026291533, 0.01393611737205344,
                 0.12788949977560313, 0.3458988137936377, 0.01892805360877195,
                 -0.12582156590453195, -0.09421231675663497, -0.03630517178213051,
                 -0.02935696159653079, -0.017287323397846218, -0.05338133590717174,
                 -0.11792470271706608, -0.09265160448044046, -0.19273865391548436,
                 -0.07072481964191567, -0.023690683780219036, 0.06541829500950375,
                 0.10382212284974605, -0.036105288208929893, 0.10038297096845952,
                 0.2944861267239948, -0.13781284666197127, 0.14227242984111085,
                 0.6633454725811263, -0.04694291556860384, -0.22794077702668802,
                 -0.15181516844961981, -0.03792410511305874, -0.1229408184421549,
                 -0.0018878868853721012, -0.17047580472220158, 0.007948848158307329,
                 -0.08393429696037787, 0.07199537737330615, -0.30030983697667524,
                 -0.06347006586041139, -0.14242261919650265, -0.26370777286611385,
                 -0.06769462315395024, -0.09084369945363686, -0.027867525155885045,
                 -0.015004515818550985, -0.3288667833455897, -0.6425048316279028,
                 -0.14876099197615023, -0.27397526290127255, 0.057662926631842935,
                 -0.12371744897166057, -0.027224863873640707, -0.06472451430464975,
                 -0.01239742230337165, 0.2429776134867728, -0.020013687633151846,
                 0.11071406987599973, 0.45782457720286424, -0.10902518568940027,
                 0.14556639266862656, -0.25761588843203403, -0.10364528131083896,
                 -0.2251209131507337, -0.16102302797620519, 0.17173019738912343,
                 0.021217677908348307, 0.04192704432402359, 0.040158294070653806,
                 -0.39509504865053635, -0.1959159949203974, -0.15760355158485595,
                 -0.045457451592167034, -0.10326507296810955, -0.06053276587733206]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)

    opt = PCAReg(; target = PPCATarget())
    loadings = loadings_matrix(DataFrame(portfolio.f_returns, portfolio.f_assets),
                               DataFrame(portfolio.returns, portfolio.assets), opt)
    @test names(loadings) == nms
    loadingst = [0.0006773507085066999, 0.0008566766561794648, 0.0010098405017116522,
                 0.0008761631990632395, 0.0017990063177154051, -0.0006112214274626797,
                 0.0016932287237912918, 0.00035539316079867105, 0.0008477004112693992,
                 0.00035073693439963247, 0.0002721517155654639, -0.0005942273147421123,
                 -0.0017719408402455078, 3.316086380728137e-5, -0.0009444988314966423,
                 0.0011948330126606702, 0.0011224345022763775, 0.00038458862099602527,
                 0.0009037356213218716, 0.0006984539729989053, -0.06835261167585173,
                 -0.0329119006781486, -0.03874046201934856, -0.187724909884953,
                 0.0357141163077643, -0.05400912234137319, 0.13913793842337685,
                 0.014380864192705635, 0.061438061840512405, 0.08247269571317288,
                 -0.06177010224306664, 0.02709738915547039, 0.08290846382753803,
                 -0.06262747982222804, 0.0021087750008415233, 0.07137306240639336,
                 -0.003346663095608215, 0.023179445694003514, 0.013715676969492923,
                 0.00995230947733108, 0.040991454546654524, -0.05315417143224909,
                 0.005702277867290691, 0.01299491146927509, -0.0298362266896798,
                 0.012570488918209478, -0.024963970008334262, -0.04543459015963409,
                 -0.04999029749162833, 0.021788596695864075, 0.010524915982287225,
                 0.007121009349666979, 0.07864968929475893, -0.052179371703283,
                 -0.22457362542848508, -0.040298208137347434, -0.08863010193685401,
                 -0.018592362791538725, -0.04170488425165136, -0.03850140443015113,
                 0.08453256473780107, 0.017421064711411353, 0.09225263449458099,
                 0.06514214642813178, 0.015483115269512668, -0.011816132599211203,
                 0.028127572812575923, 0.002268397609406926, -0.06364568498552146,
                 -0.1252089488723607, 0.07667628999411623, 0.011168920527889363,
                 -0.14507342660509173, -0.003961089570789795, 0.002219539936239349,
                 0.06676948489028867, -0.028713051872320712, 0.07348538319116242,
                 -0.016331069606180023, 0.07596567793998299, 0.012069498260692172,
                 0.026605908490452652, -0.03802318444627086, 0.16732855025569593,
                 0.05797797616372937, 0.08473024967877084, 0.27468549546540894,
                 0.036902782915577644, 0.051909711732143315, 0.02849707968098861,
                 0.014229339543896383, 0.27758851160741105, 0.5287564533206148,
                 0.05391689413706397, 0.09603234108350923, -0.003647835732038783,
                 0.036603129078469, 0.05127575630230818, 0.029158515673832448,
                 0.023294007645791804, 0.03984774846614073, -0.12206496163889118,
                 -0.07426223575682359, 0.0811733755615938, -0.09218919325432934,
                 0.08358315699514139, -0.10248318598575384, -0.10830699691950887,
                 -0.0678526331078928, 0.15116411745993058, -0.025551850481017838,
                 0.04421130107306894, 0.399342295832863, -0.07765677905931176,
                 -0.5093150727030749, -0.20004484218290525, -0.16759383812641576,
                 -0.12336573183580966, -0.0808385843644366, -0.17149161022866316]
    @test isapprox(vec(Matrix(loadings[!, 2:end])), loadingst)
end

@testset "Factor statistics" begin
    portfolio = Portfolio(; prices = prices_assets, f_prices = prices_factors)
    nms = ["tickers", "const", "MTUM", "QUAL", "VLUE", "SIZE", "USMV"]

    factor_type = FactorType()
    factor_statistics!(portfolio; factor_type = factor_type)
    cov_ft = reshape([8.105068334247097e-5, 6.737792030107118e-5, 6.526436064638604e-5,
                      5.172315242594955e-5, 5.51672771198704e-5, 6.737792030107118e-5,
                      6.735131559151525e-5, 6.590933068160697e-5, 5.032199930722891e-5,
                      5.176317429079491e-5, 6.526436064638604e-5, 6.590933068160697e-5,
                      8.14231956501312e-5, 5.658711016988663e-5, 4.93155881733915e-5,
                      5.172315242594955e-5, 5.032199930722891e-5, 5.658711016988663e-5,
                      6.004210984073431e-5, 4.068025501715829e-5, 5.51672771198704e-5,
                      5.176317429079491e-5, 4.93155881733915e-5, 4.068025501715829e-5,
                      4.641688411216057e-5], (5, 5))
    mu_ft = [0.0006177837185361617, 0.0004504578115065042, 0.0003937347983990847,
             0.00041143019463705437, 0.00045523295271467036]
    cov_fmt = reshape([0.00020997582228184753, -3.430859738898174e-7,
                       -2.1237216600865536e-7, 5.305334564169448e-7, 1.3457732878927986e-7,
                       3.823039776506764e-7, 8.781682256877476e-7, -2.1445552078718219e-7,
                       -3.322900442809539e-7, 4.6531183434761127e-7, 1.590984652744138e-7,
                       8.200163472120675e-7, 2.206016054116758e-6, -3.788560196971194e-7,
                       -1.2172441517080708e-6, -2.718465691022185e-7, -4.942857995726257e-7,
                       2.194915284308351e-7, -2.8754102795781984e-7, -3.0452403480801977e-7,
                       -3.430859738898174e-7, 0.00021152344684106076, 2.4480283008240944e-7,
                       -4.670958394691531e-7, -1.2675376857405406e-7,
                       -3.7336305587697627e-7, -8.27116521403115e-7, 3.179765171030214e-7,
                       2.9255703915244526e-7, -5.363680940867272e-7, -1.4007454251330543e-7,
                       -7.72345262285658e-7, -2.1544240798647743e-6, 5.617356791963917e-7,
                       1.804826727721565e-6, 3.133593762080108e-7, 7.328851988732744e-7,
                       -2.0673153976959955e-7, 2.531588087636604e-7, 3.510269116249402e-7,
                       -2.1237216600865536e-7, 2.4480283008240944e-7, 0.0002572414426920628,
                       -2.8913497697679955e-7, -8.166689885631501e-8, -2.496976407408245e-7,
                       -5.329075581397908e-7, 1.5302088225955697e-7, 1.8109446848397612e-7,
                       -3.9408295054521827e-7, -8.67069372115333e-8, -4.976186753799453e-7,
                       -1.4408351373541164e-6, 2.7032590334164187e-7, 8.685426858490453e-7,
                       2.3023291079110036e-7, 3.526887480506141e-7, -1.3319622713158562e-7,
                       1.5670674015538704e-7, 2.579081839114098e-7, 5.305334564169448e-7,
                       -4.670958394691531e-7, -2.8913497697679955e-7, 0.0004006277432140748,
                       1.8322086925224355e-7, 5.204893553313488e-7, 1.1955858175201527e-6,
                       -2.91971369086203e-7, -4.5239767578053354e-7, 6.33500750308521e-7,
                       2.1660527346265793e-7, 1.1164146984407432e-6, 3.003389818002344e-6,
                       -5.157951185005295e-7, -1.6572221604827117e-6, -3.701066527493461e-7,
                       -6.729474769003651e-7, 2.988276628344299e-7, -3.914739396455615e-7,
                       -4.1459552561850514e-7, 1.3457732878927986e-7,
                       -1.2675376857405406e-7, -8.166689885631501e-8, 1.8322086925224355e-7,
                       0.0003311044630153936, 1.4459794298980158e-7, 3.7489482723344104e-7,
                       -7.923100190629364e-8, -1.1475708086009098e-7, 1.789338745585146e-7,
                       5.494499687380121e-8, 3.500694716845466e-7, 8.343763138118049e-7,
                       -1.3996908034193812e-7, -4.4971317758759825e-7,
                       -1.0453755160364244e-7, -1.8261483306394464e-7, 9.370213613210431e-8,
                       -9.930291191044434e-8, -1.1710354524033969e-7, 3.823039776506764e-7,
                       -3.7336305587697627e-7, -2.496976407408245e-7, 5.204893553313488e-7,
                       1.4459794298980158e-7, 0.00017908772525119742, 9.435565423673886e-7,
                       -2.3338106097133916e-7, -3.259991030516564e-7, 5.470927260809149e-7,
                       1.560864006280637e-7, 8.810746809407705e-7, 2.5251548148335534e-6,
                       -4.122897816187949e-7, -1.3246650426346429e-6,
                       -3.1962496886501124e-7, -5.379061537044883e-7, 2.3583484529167208e-7,
                       -2.820972786218783e-7, -3.580456632783989e-7, 8.781682256877476e-7,
                       -8.27116521403115e-7, -5.329075581397908e-7, 1.1955858175201527e-6,
                       3.7489482723344104e-7, 9.435565423673886e-7, 0.0016481856234771097,
                       -5.170124046113099e-7, -7.488335739060907e-7, 1.1676115475774083e-6,
                       3.585369902135286e-7, 2.2843363706380385e-6, 5.444622609527996e-6,
                       -9.133514540735695e-7, -2.934549428075428e-6, -6.821472608752267e-7,
                       -1.1916312010259113e-6, 6.114420561811344e-7, -6.479892470935131e-7,
                       -7.641451459218272e-7, -2.1445552078718219e-7, 3.179765171030214e-7,
                       1.5302088225955697e-7, -2.91971369086203e-7, -7.923100190629364e-8,
                       -2.3338106097133916e-7, -5.170124046113099e-7,
                       0.00016353541427233863, 1.8287099143126994e-7,
                       -3.3527193678846966e-7, -8.755752566371169e-8, -4.827760912901008e-7,
                       -1.3466832607742428e-6, 3.5112865810565587e-7, 1.1281576201901435e-6,
                       1.9587407627400537e-7, 4.58110470736007e-7, -1.2922335332386305e-7,
                       1.5824402134465918e-7, 2.194192268758236e-7, -3.322900442809539e-7,
                       2.9255703915244526e-7, 1.8109446848397612e-7, -4.5239767578053354e-7,
                       -1.1475708086009098e-7, -3.259991030516564e-7, -7.488335739060907e-7,
                       1.8287099143126994e-7, 0.00027619979891424474, -3.967817483061801e-7,
                       -1.356667992184628e-7, -6.992461740042183e-7, -1.8811189446130657e-6,
                       3.2305895263227864e-7, 1.0379711560686226e-6, 2.3180961453655065e-7,
                       4.2148849274877986e-7, -1.871653071349172e-7, 2.451926286010346e-7,
                       2.5967441619400636e-7, 4.6531183434761127e-7, -5.363680940867272e-7,
                       -3.9408295054521827e-7, 6.33500750308521e-7, 1.789338745585146e-7,
                       5.470927260809149e-7, 1.1676115475774083e-6, -3.3527193678846966e-7,
                       -3.967817483061801e-7, 0.000243322112701978, 1.8997670345801056e-7,
                       1.0902928712288688e-6, 3.15689976400868e-6, -5.922896786316525e-7,
                       -1.902995095624486e-6, -5.044450977772232e-7, -7.727483850332126e-7,
                       2.9183570493062274e-7, -3.4334772812632054e-7, -5.650821969965132e-7,
                       1.590984652744138e-7, -1.4007454251330543e-7, -8.67069372115333e-8,
                       2.1660527346265793e-7, 5.494499687380121e-8, 1.560864006280637e-7,
                       3.585369902135286e-7, -8.755752566371169e-8, -1.356667992184628e-7,
                       1.8997670345801056e-7, 0.00010534978848760108, 3.347948427820332e-7,
                       9.006683836531599e-7, -1.546786743736971e-7, -4.969743173827983e-7,
                       -1.1098904268535905e-7, -2.0180614340181233e-7, 8.961361807337906e-8,
                       -1.1739674894996512e-7, -1.243305413404581e-7, 8.200163472120675e-7,
                       -7.72345262285658e-7, -4.976186753799453e-7, 1.1164146984407432e-6,
                       3.500694716845466e-7, 8.810746809407705e-7, 2.2843363706380385e-6,
                       -4.827760912901008e-7, -6.992461740042183e-7, 1.0902928712288688e-6,
                       3.347948427820332e-7, 0.0007066882567333453, 5.084082313177316e-6,
                       -8.528697590984687e-7, -2.7402249732266185e-6, -6.369757966197674e-7,
                       -1.1127219547529462e-6, 5.709526566493775e-7, -6.050797101183869e-7,
                       -7.135438210690339e-7, 2.206016054116758e-6, -2.1544240798647743e-6,
                       -1.4408351373541164e-6, 3.003389818002344e-6, 8.343763138118049e-7,
                       2.5251548148335534e-6, 5.444622609527996e-6, -1.3466832607742428e-6,
                       -1.8811189446130657e-6, 3.15689976400868e-6, 9.006683836531599e-7,
                       5.084082313177316e-6, 0.001943967760708157, -2.379043720100683e-6,
                       -7.643740377321997e-6, -1.844338154537996e-6, -3.103890307321258e-6,
                       1.360842380010351e-6, -1.6277913959638095e-6, -2.0660378323888294e-6,
                       -3.788560196971194e-7, 5.617356791963917e-7, 2.7032590334164187e-7,
                       -5.157951185005295e-7, -1.3996908034193812e-7, -4.122897816187949e-7,
                       -9.133514540735695e-7, 3.5112865810565587e-7, 3.2305895263227864e-7,
                       -5.922896786316525e-7, -1.546786743736971e-7, -8.528697590984687e-7,
                       -2.379043720100683e-6, 0.00014363521728518003, 1.9929974477101833e-6,
                       3.460301354175023e-7, 8.092956007266877e-7, -2.2828531115678971e-7,
                       2.795530739775053e-7, 3.876248773361596e-7, -1.2172441517080708e-6,
                       1.804826727721565e-6, 8.685426858490453e-7, -1.6572221604827117e-6,
                       -4.4971317758759825e-7, -1.3246650426346429e-6,
                       -2.934549428075428e-6, 1.1281576201901435e-6, 1.0379711560686226e-6,
                       -1.902995095624486e-6, -4.969743173827983e-7, -2.7402249732266185e-6,
                       -7.643740377321997e-6, 1.9929974477101833e-6, 0.0009937022125140937,
                       1.1117763391708596e-6, 2.600223530235016e-6, -7.334685090885263e-7,
                       8.981890921600667e-7, 1.2454180228446984e-6, -2.718465691022185e-7,
                       3.133593762080108e-7, 2.3023291079110036e-7, -3.701066527493461e-7,
                       -1.0453755160364244e-7, -3.1962496886501124e-7,
                       -6.821472608752267e-7, 1.9587407627400537e-7, 2.3180961453655065e-7,
                       -5.044450977772232e-7, -1.1098904268535905e-7, -6.369757966197674e-7,
                       -1.844338154537996e-6, 3.460301354175023e-7, 1.1117763391708596e-6,
                       0.0005054585590745466, 4.514585311269494e-7, -1.704975658703112e-7,
                       2.0059215134952584e-7, 3.301348583356413e-7, -4.942857995726257e-7,
                       7.328851988732744e-7, 3.526887480506141e-7, -6.729474769003651e-7,
                       -1.8261483306394464e-7, -5.379061537044883e-7,
                       -1.1916312010259113e-6, 4.58110470736007e-7, 4.2148849274877986e-7,
                       -7.727483850332126e-7, -2.0180614340181233e-7,
                       -1.1127219547529462e-6, -3.103890307321258e-6, 8.092956007266877e-7,
                       2.600223530235016e-6, 4.514585311269494e-7, 0.0001624387273643112,
                       -2.9783923625135804e-7, 3.6472725127721466e-7, 5.057263510858805e-7,
                       2.194915284308351e-7, -2.0673153976959955e-7, -1.3319622713158562e-7,
                       2.988276628344299e-7, 9.370213613210431e-8, 2.3583484529167208e-7,
                       6.114420561811344e-7, -1.2922335332386305e-7, -1.871653071349172e-7,
                       2.9183570493062274e-7, 8.961361807337906e-8, 5.709526566493775e-7,
                       1.360842380010351e-6, -2.2828531115678971e-7, -7.334685090885263e-7,
                       -1.704975658703112e-7, -2.9783923625135804e-7,
                       0.00012202561764009547, -1.6196002780664673e-7, -1.90992319142532e-7,
                       -2.8754102795781984e-7, 2.531588087636604e-7, 1.5670674015538704e-7,
                       -3.914739396455615e-7, -9.930291191044434e-8, -2.820972786218783e-7,
                       -6.479892470935131e-7, 1.5824402134465918e-7, 2.451926286010346e-7,
                       -3.4334772812632054e-7, -1.1739674894996512e-7,
                       -6.050797101183869e-7, -1.6277913959638095e-6, 2.795530739775053e-7,
                       8.981890921600667e-7, 2.0059215134952584e-7, 3.6472725127721466e-7,
                       -1.6196002780664673e-7, 0.0001849011455817158, 2.247044407494789e-7,
                       -3.0452403480801977e-7, 3.510269116249402e-7, 2.579081839114098e-7,
                       -4.1459552561850514e-7, -1.1710354524033969e-7,
                       -3.580456632783989e-7, -7.641451459218272e-7, 2.194192268758236e-7,
                       2.5967441619400636e-7, -5.650821969965132e-7, -1.243305413404581e-7,
                       -7.135438210690339e-7, -2.0660378323888294e-6, 3.876248773361596e-7,
                       1.2454180228446984e-6, 3.301348583356413e-7, 5.057263510858805e-7,
                       -1.90992319142532e-7, 2.247044407494789e-7, 0.0001578918565106169],
                      (20, 20))
    mu_fmt = [0.0007099776753465247, 0.0007746382686595054, 0.0009753484800445197,
              0.0008974890088837402, 0.0017956125285473895, -0.0005706669410836571,
              0.0018453756491976943, 0.0003105822107311082, 0.0008285462729038386,
              0.00044274239295194267, 0.0002631446419061822, -0.00043554694545677475,
              -0.0013430732876448994, -4.376248452712759e-5, -0.001235829497983597,
              0.0011544951216372098, 0.0010079029335960474, 0.0003844034306609132,
              0.0008621888482796805, 0.0006486846462746479]
    loadingst = reshape([0.0006682666783877028, 0.0008125085541546204,
                         0.0009938539577313578, 0.0008407013969662878,
                         0.0017791646483353075, -0.0006069768500075827,
                         0.001738046978669652, 0.00033425409596189986,
                         0.0008641141675397427, 0.0004021965063144702,
                         0.00024611494888044164, -0.0005357683629290428,
                         -0.001552593059063253, -1.9438538649469838e-6,
                         -0.0011014684717375986, 0.001178183021578672,
                         0.0010624628566782079, 0.0003575774384995594,
                         0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                         0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                         0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181,
                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0,
                         0.0, 0.0, 0.0, 0.0, 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0,
                         0.0, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0,
                         0.0, 0.10297765603226086, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.06016206857452389, 0.0, 0.0, 0.0, -0.06739388297308944, 0.0,
                         -0.09204546965378291, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.10164210407325881, -0.3265706503736942, 0.0,
                         -0.13261040097042645, 0.0, 0.0, 0.0, 0.0916256099434114, 0.0, 0.0,
                         0.12474407131296936, 0.0, 0.0, 0.0, 0.0, -0.07813119508111976, 0.0,
                         0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.06760938082816292, 0.0], (20, 6))
    @test names(portfolio.loadings) == nms
    @test portfolio.loadings[!, 1] == portfolio.assets
    @test isapprox(loadingst, Matrix(portfolio.loadings[!, 2:end]))
    @test isapprox(cov_ft, portfolio.f_cov)
    @test isapprox(mu_ft, portfolio.f_mu)
    @test isapprox(cov_fmt, portfolio.fm_cov)
    @test isapprox(mu_fmt, portfolio.fm_mu)

    factor_type.error = false
    factor_statistics!(portfolio; factor_type = factor_type)
    cov_ft = reshape([8.105068334247097e-5, 6.737792030107118e-5, 6.526436064638604e-5,
                      5.172315242594955e-5, 5.51672771198704e-5, 6.737792030107118e-5,
                      6.735131559151525e-5, 6.590933068160697e-5, 5.032199930722891e-5,
                      5.176317429079491e-5, 6.526436064638604e-5, 6.590933068160697e-5,
                      8.14231956501312e-5, 5.658711016988663e-5, 4.93155881733915e-5,
                      5.172315242594955e-5, 5.032199930722891e-5, 5.658711016988663e-5,
                      6.004210984073431e-5, 4.068025501715829e-5, 5.51672771198704e-5,
                      5.176317429079491e-5, 4.93155881733915e-5, 4.068025501715829e-5,
                      4.641688411216057e-5], (5, 5))
    mu_ft = [0.0006177837185361617, 0.0004504578115065042, 0.0003937347983990847,
             0.00041143019463705437, 0.00045523295271467036]
    cov_fmt = reshape([3.8968145762719637e-7, -3.430859738895428e-7, -2.123721660084906e-7,
                       5.305334564164142e-7, 1.345773287891756e-7, 3.823039776504279e-7,
                       8.78168225687067e-7, -2.1445552078701058e-7, -3.322900442806216e-7,
                       4.653118343472503e-7, 1.5909846527425472e-7, 8.20016347211432e-7,
                       2.2060160541153237e-6, -3.788560196968161e-7, -1.2172441517070965e-6,
                       -2.718465691020076e-7, -4.942857995722304e-7, 2.1949152843066498e-7,
                       -2.8754102795753227e-7, -3.045240348077838e-7, -3.430859738895428e-7,
                       5.086988791146228e-7, 2.4480283008221955e-7, -4.6709583946877915e-7,
                       -1.2675376857395578e-7, -3.733630558767334e-7, -8.271165214024735e-7,
                       3.1797651710270334e-7, 2.925570391522111e-7, -5.363680940863112e-7,
                       -1.4007454251319333e-7, -7.72345262285059e-7, -2.154424079863373e-6,
                       5.617356791958298e-7, 1.80482672771976e-6, 3.133593762077678e-7,
                       7.328851988725414e-7, -2.067315397694392e-7, 2.531588087634577e-7,
                       3.5102691162466817e-7, -2.123721660084906e-7, 2.4480283008221955e-7,
                       1.7986271488605104e-7, -2.891349769765752e-7, -8.166689885625371e-8,
                       -2.4969764074066835e-7, -5.329075581393908e-7, 1.530208822594383e-7,
                       1.8109446848383562e-7, -3.9408295054482414e-7, -8.670693721146603e-8,
                       -4.976186753795718e-7, -1.4408351373532154e-6, 2.7032590334143234e-7,
                       8.68542685848372e-7, 2.3023291079087004e-7, 3.526887480503406e-7,
                       -1.3319622713148564e-7, 1.567067401552655e-7, 2.579081839111519e-7,
                       5.305334564164142e-7, -4.6709583946877915e-7, -2.891349769765752e-7,
                       7.22297001483158e-7, 1.832208692521016e-7, 5.204893553310104e-7,
                       1.195585817519226e-6, -2.9197136908596927e-7, -4.5239767578008117e-7,
                       6.335007503080294e-7, 2.166052734624413e-7, 1.1164146984398775e-6,
                       3.0033898180003914e-6, -5.157951185001166e-7, -1.657222160481385e-6,
                       -3.701066527490589e-7, -6.729474768998267e-7, 2.9882766283419836e-7,
                       -3.9147393964516995e-7, -4.145955256181838e-7, 1.345773287891756e-7,
                       -1.2675376857395578e-7, -8.166689885625371e-8, 1.832208692521016e-7,
                       5.745179904053431e-8, 1.445979429897112e-7, 3.7489482723306607e-7,
                       -7.92310019062322e-8, -1.1475708086000205e-7, 1.7893387455838026e-7,
                       5.4944996873758635e-8, 3.500694716841965e-7, 8.343763138112831e-7,
                       -1.399690803418296e-7, -4.497131775872496e-7, -1.0453755160356396e-7,
                       -1.8261483306380313e-7, 9.370213613201059e-8, -9.930291191036743e-8,
                       -1.1710354524025182e-7, 3.823039776504279e-7, -3.733630558767334e-7,
                       -2.4969764074066835e-7, 5.204893553310104e-7, 1.445979429897112e-7,
                       4.3761092676233546e-7, 9.435565423667988e-7, -2.3338106097118738e-7,
                       -3.2599910305144456e-7, 5.470927260805728e-7, 1.5608640062796226e-7,
                       8.810746809402197e-7, 2.525154814831029e-6, -4.1228978161852685e-7,
                       -1.3246650426337814e-6, -3.1962496886481145e-7,
                       -5.379061537041385e-7, 2.3583484529152467e-7, -2.82097278621695e-7,
                       -3.580456632781752e-7, 8.78168225687067e-7, -8.271165214024735e-7,
                       -5.329075581393908e-7, 1.195585817519226e-6, 3.7489482723306607e-7,
                       9.435565423667988e-7, 2.4463312521724733e-6, -5.170124046109089e-7,
                       -7.488335739055104e-7, 1.1676115475765318e-6, 3.585369902132507e-7,
                       2.284336370635753e-6, 5.444622609524591e-6, -9.133514540728611e-7,
                       -2.9345494280731525e-6, -6.821472608747145e-7,
                       -1.1916312010249876e-6, 6.114420561805228e-7, -6.479892470930111e-7,
                       -7.64145145921254e-7, -2.1445552078701058e-7, 3.1797651710270334e-7,
                       1.530208822594383e-7, -2.9197136908596927e-7, -7.92310019062322e-8,
                       -2.3338106097118738e-7, -5.170124046109089e-7, 1.987601498256606e-7,
                       1.8287099143112361e-7, -3.352719367882097e-7, -8.755752566364163e-8,
                       -4.827760912897264e-7, -1.346683260773367e-6, 3.511286581053047e-7,
                       1.1281576201890155e-6, 1.958740762738535e-7, 4.581104707355489e-7,
                       -1.2922335332376286e-7, 1.5824402134453252e-7, 2.194192268756536e-7,
                       -3.322900442806216e-7, 2.925570391522111e-7, 1.8109446848383562e-7,
                       -4.5239767578008117e-7, -1.1475708086000205e-7,
                       -3.2599910305144456e-7, -7.488335739055104e-7, 1.8287099143112361e-7,
                       2.833511099054465e-7, -3.967817483058723e-7, -1.3566679921832714e-7,
                       -6.992461740036764e-7, -1.8811189446118426e-6, 3.2305895263202003e-7,
                       1.0379711560677919e-6, 2.3180961453637081e-7, 4.2148849274844274e-7,
                       -1.8716530713477218e-7, 2.451926286007894e-7, 2.5967441619380514e-7,
                       4.653118343472503e-7, -5.363680940863112e-7, -3.9408295054482414e-7,
                       6.335007503080294e-7, 1.7893387455838026e-7, 5.470927260805728e-7,
                       1.1676115475765318e-6, -3.352719367882097e-7, -3.967817483058723e-7,
                       8.634439439481023e-7, 1.899767034578632e-7, 1.0902928712280505e-6,
                       3.1568997640067066e-6, -5.922896786311934e-7, -1.9029950956230104e-6,
                       -5.044450977767188e-7, -7.727483850326135e-7, 2.918357049304037e-7,
                       -3.433477281260542e-7, -5.65082196995948e-7, 1.5909846527425472e-7,
                       -1.4007454251319333e-7, -8.670693721146603e-8, 2.166052734624413e-7,
                       5.4944996873758635e-8, 1.5608640062796226e-7, 3.585369902132507e-7,
                       -8.755752566364163e-8, -1.3566679921832714e-7, 1.899767034578632e-7,
                       6.495644367274424e-8, 3.3479484278177375e-7, 9.006683836525744e-7,
                       -1.5467867437357333e-7, -4.969743173824006e-7,
                       -1.1098904268527296e-7, -2.0180614340165086e-7, 8.96136180733096e-8,
                       -1.1739674894984771e-7, -1.2433054134036175e-7, 8.20016347211432e-7,
                       -7.72345262285059e-7, -4.976186753795718e-7, 1.1164146984398775e-6,
                       3.500694716841965e-7, 8.810746809402197e-7, 2.284336370635753e-6,
                       -4.827760912897264e-7, -6.992461740036764e-7, 1.0902928712280505e-6,
                       3.3479484278177375e-7, 2.133068712418128e-6, 5.084082313174136e-6,
                       -8.528697590978072e-7, -2.7402249732244933e-6, -6.369757966192893e-7,
                       -1.1127219547520835e-6, 5.709526566488064e-7, -6.050797101179181e-7,
                       -7.135438210684986e-7, 2.2060160541153237e-6, -2.154424079863373e-6,
                       -1.4408351373532154e-6, 3.0033898180003914e-6, 8.343763138112831e-7,
                       2.525154814831029e-6, 5.444622609524591e-6, -1.346683260773367e-6,
                       -1.8811189446118426e-6, 3.1568997640067066e-6, 9.006683836525744e-7,
                       5.084082313174136e-6, 1.4570949784213403e-5, -2.379043720099136e-6,
                       -7.643740377317027e-6, -1.8443381545368427e-6,
                       -3.1038903073192397e-6, 1.3608423800095003e-6,
                       -1.6277913959627518e-6, -2.0660378323875386e-6,
                       -3.788560196968161e-7, 5.617356791958298e-7, 2.7032590334143234e-7,
                       -5.157951185001166e-7, -1.399690803418296e-7, -4.1228978161852685e-7,
                       -9.133514540728611e-7, 3.511286581053047e-7, 3.2305895263202003e-7,
                       -5.922896786311934e-7, -1.5467867437357333e-7, -8.528697590978072e-7,
                       -2.379043720099136e-6, 6.203020809313217e-7, 1.9929974477081907e-6,
                       3.4603013541723397e-7, 8.092956007258785e-7, -2.2828531115661276e-7,
                       2.795530739772815e-7, 3.8762487733585924e-7, -1.2172441517070965e-6,
                       1.80482672771976e-6, 8.68542685848372e-7, -1.657222160481385e-6,
                       -4.497131775872496e-7, -1.3246650426337814e-6,
                       -2.9345494280731525e-6, 1.1281576201890155e-6, 1.0379711560677919e-6,
                       -1.9029950956230104e-6, -4.969743173824006e-7,
                       -2.7402249732244933e-6, -7.643740377317027e-6, 1.9929974477081907e-6,
                       6.403394327834085e-6, 1.1117763391699975e-6, 2.6002235302324162e-6,
                       -7.334685090879578e-7, 8.981890921593476e-7, 1.2454180228437337e-6,
                       -2.718465691020076e-7, 3.133593762077678e-7, 2.3023291079087004e-7,
                       -3.701066527490589e-7, -1.0453755160356396e-7,
                       -3.1962496886481145e-7, -6.821472608747145e-7, 1.958740762738535e-7,
                       2.3180961453637081e-7, -5.044450977767188e-7, -1.1098904268527296e-7,
                       -6.369757966192893e-7, -1.8443381545368427e-6, 3.4603013541723397e-7,
                       1.1117763391699975e-6, 2.947091799705379e-7, 4.514585311265995e-7,
                       -1.704975658701832e-7, 2.0059215134937025e-7, 3.3013485833531117e-7,
                       -4.942857995722304e-7, 7.328851988725414e-7, 3.526887480503406e-7,
                       -6.729474768998267e-7, -1.8261483306380313e-7, -5.379061537041385e-7,
                       -1.1916312010249876e-6, 4.581104707355489e-7, 4.2148849274844274e-7,
                       -7.727483850326135e-7, -2.0180614340165086e-7,
                       -1.1127219547520835e-6, -3.1038903073192397e-6, 8.092956007258785e-7,
                       2.6002235302324162e-6, 4.514585311265995e-7, 1.055871630113209e-6,
                       -2.978392362511272e-7, 3.6472725127692275e-7, 5.057263510854888e-7,
                       2.1949152843066498e-7, -2.067315397694392e-7, -1.3319622713148564e-7,
                       2.9882766283419836e-7, 9.370213613201059e-8, 2.3583484529152467e-7,
                       6.114420561805228e-7, -1.2922335332376286e-7, -1.8716530713477218e-7,
                       2.918357049304037e-7, 8.96136180733096e-8, 5.709526566488064e-7,
                       1.3608423800095003e-6, -2.2828531115661276e-7, -7.334685090879578e-7,
                       -1.704975658701832e-7, -2.978392362511272e-7, 1.5282533292864752e-7,
                       -1.6196002780652131e-7, -1.909923191423887e-7,
                       -2.8754102795753227e-7, 2.531588087634577e-7, 1.567067401552655e-7,
                       -3.9147393964516995e-7, -9.930291191036743e-8, -2.82097278621695e-7,
                       -6.479892470930111e-7, 1.5824402134453252e-7, 2.451926286007894e-7,
                       -3.433477281260542e-7, -1.1739674894984771e-7, -6.050797101179181e-7,
                       -1.6277913959627518e-6, 2.795530739772815e-7, 8.981890921593476e-7,
                       2.0059215134937025e-7, 3.6472725127692275e-7, -1.6196002780652131e-7,
                       2.1217289440068395e-7, 2.247044407493048e-7, -3.045240348077838e-7,
                       3.5102691162466817e-7, 2.579081839111519e-7, -4.145955256181838e-7,
                       -1.1710354524025182e-7, -3.580456632781752e-7, -7.64145145921254e-7,
                       2.194192268756536e-7, 2.5967441619380514e-7, -5.65082196995948e-7,
                       -1.2433054134036175e-7, -7.135438210684986e-7,
                       -2.0660378323875386e-6, 3.8762487733585924e-7, 1.2454180228437337e-6,
                       3.3013485833531117e-7, 5.057263510854888e-7, -1.909923191423887e-7,
                       2.247044407493048e-7, 3.6981889976820413e-7], (20, 20))
    mu_fmt = [0.0007099776753465247, 0.0007746382686595054, 0.0009753484800445197,
              0.0008974890088837402, 0.0017956125285473895, -0.0005706669410836571,
              0.0018453756491976943, 0.0003105822107311082, 0.0008285462729038386,
              0.00044274239295194267, 0.0002631446419061822, -0.00043554694545677475,
              -0.0013430732876448994, -4.376248452712759e-5, -0.001235829497983597,
              0.0011544951216372098, 0.0010079029335960474, 0.0003844034306609132,
              0.0008621888482796805, 0.0006486846462746479]
    loadingst = reshape([0.0006682666783877028, 0.0008125085541546204,
                         0.0009938539577313578, 0.0008407013969662878,
                         0.0017791646483353075, -0.0006069768500075827,
                         0.001738046978669652, 0.00033425409596189986,
                         0.0008641141675397427, 0.0004021965063144702,
                         0.00024611494888044164, -0.0005357683629290428,
                         -0.001552593059063253, -1.9438538649469838e-6,
                         -0.0011014684717375986, 0.001178183021578672,
                         0.0010624628566782079, 0.0003575774384995594,
                         0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                         0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                         0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181,
                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0,
                         0.0, 0.0, 0.0, 0.0, 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0,
                         0.0, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0,
                         0.0, 0.10297765603226086, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.06016206857452389, 0.0, 0.0, 0.0, -0.06739388297308944, 0.0,
                         -0.09204546965378291, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.10164210407325881, -0.3265706503736942, 0.0,
                         -0.13261040097042645, 0.0, 0.0, 0.0, 0.0916256099434114, 0.0, 0.0,
                         0.12474407131296936, 0.0, 0.0, 0.0, 0.0, -0.07813119508111976, 0.0,
                         0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.06760938082816292, 0.0], (20, 6))
    @test names(portfolio.loadings) == nms
    @test portfolio.loadings[!, 1] == portfolio.assets
    @test isapprox(loadingst, Matrix(portfolio.loadings[!, 2:end]))
    @test isapprox(cov_ft, portfolio.f_cov)
    @test isapprox(mu_ft, portfolio.f_mu)
    @test isapprox(cov_fmt, portfolio.fm_cov)
    @test isapprox(mu_fmt, portfolio.fm_mu)

    portfolio = Portfolio(; prices = prices_assets, f_prices = prices_factors)
    factor_type = FactorType()
    mu_type = MuJS()
    @time factor_statistics!(portfolio; factor_type = factor_type, mu_type = mu_type)
    cov_ft = reshape([8.105068334247097e-5, 6.737792030107118e-5, 6.526436064638604e-5,
                      5.172315242594955e-5, 5.51672771198704e-5, 6.737792030107118e-5,
                      6.735131559151525e-5, 6.590933068160697e-5, 5.032199930722891e-5,
                      5.176317429079491e-5, 6.526436064638604e-5, 6.590933068160697e-5,
                      8.14231956501312e-5, 5.658711016988663e-5, 4.93155881733915e-5,
                      5.172315242594955e-5, 5.032199930722891e-5, 5.658711016988663e-5,
                      6.004210984073431e-5, 4.068025501715829e-5, 5.51672771198704e-5,
                      5.176317429079491e-5, 4.93155881733915e-5, 4.068025501715829e-5,
                      4.641688411216057e-5], (5, 5))
    mu_ft = [0.0019550921194520484, 0.00031615969192663046, -0.0002394338035398044,
             -6.611002345606985e-5, 0.0003629314914106712]
    cov_fmt = reshape([0.00020997582228184753, -3.430859738898174e-7,
                       -2.1237216600865536e-7, 5.305334564169448e-7, 1.3457732878927986e-7,
                       3.823039776506764e-7, 8.781682256877476e-7, -2.1445552078718219e-7,
                       -3.322900442809539e-7, 4.6531183434761127e-7, 1.590984652744138e-7,
                       8.200163472120675e-7, 2.206016054116758e-6, -3.788560196971194e-7,
                       -1.2172441517080708e-6, -2.718465691022185e-7, -4.942857995726257e-7,
                       2.194915284308351e-7, -2.8754102795781984e-7, -3.0452403480801977e-7,
                       -3.430859738898174e-7, 0.00021152344684106076, 2.4480283008240944e-7,
                       -4.670958394691531e-7, -1.2675376857405406e-7,
                       -3.7336305587697627e-7, -8.27116521403115e-7, 3.179765171030214e-7,
                       2.9255703915244526e-7, -5.363680940867272e-7, -1.4007454251330543e-7,
                       -7.72345262285658e-7, -2.1544240798647743e-6, 5.617356791963917e-7,
                       1.804826727721565e-6, 3.133593762080108e-7, 7.328851988732744e-7,
                       -2.0673153976959955e-7, 2.531588087636604e-7, 3.510269116249402e-7,
                       -2.1237216600865536e-7, 2.4480283008240944e-7, 0.0002572414426920628,
                       -2.8913497697679955e-7, -8.166689885631501e-8, -2.496976407408245e-7,
                       -5.329075581397908e-7, 1.5302088225955697e-7, 1.8109446848397612e-7,
                       -3.9408295054521827e-7, -8.67069372115333e-8, -4.976186753799453e-7,
                       -1.4408351373541164e-6, 2.7032590334164187e-7, 8.685426858490453e-7,
                       2.3023291079110036e-7, 3.526887480506141e-7, -1.3319622713158562e-7,
                       1.5670674015538704e-7, 2.579081839114098e-7, 5.305334564169448e-7,
                       -4.670958394691531e-7, -2.8913497697679955e-7, 0.0004006277432140748,
                       1.8322086925224355e-7, 5.204893553313488e-7, 1.1955858175201527e-6,
                       -2.91971369086203e-7, -4.5239767578053354e-7, 6.33500750308521e-7,
                       2.1660527346265793e-7, 1.1164146984407432e-6, 3.003389818002344e-6,
                       -5.157951185005295e-7, -1.6572221604827117e-6, -3.701066527493461e-7,
                       -6.729474769003651e-7, 2.988276628344299e-7, -3.914739396455615e-7,
                       -4.1459552561850514e-7, 1.3457732878927986e-7,
                       -1.2675376857405406e-7, -8.166689885631501e-8, 1.8322086925224355e-7,
                       0.0003311044630153936, 1.4459794298980158e-7, 3.7489482723344104e-7,
                       -7.923100190629364e-8, -1.1475708086009098e-7, 1.789338745585146e-7,
                       5.494499687380121e-8, 3.500694716845466e-7, 8.343763138118049e-7,
                       -1.3996908034193812e-7, -4.4971317758759825e-7,
                       -1.0453755160364244e-7, -1.8261483306394464e-7, 9.370213613210431e-8,
                       -9.930291191044434e-8, -1.1710354524033969e-7, 3.823039776506764e-7,
                       -3.7336305587697627e-7, -2.496976407408245e-7, 5.204893553313488e-7,
                       1.4459794298980158e-7, 0.00017908772525119742, 9.435565423673886e-7,
                       -2.3338106097133916e-7, -3.259991030516564e-7, 5.470927260809149e-7,
                       1.560864006280637e-7, 8.810746809407705e-7, 2.5251548148335534e-6,
                       -4.122897816187949e-7, -1.3246650426346429e-6,
                       -3.1962496886501124e-7, -5.379061537044883e-7, 2.3583484529167208e-7,
                       -2.820972786218783e-7, -3.580456632783989e-7, 8.781682256877476e-7,
                       -8.27116521403115e-7, -5.329075581397908e-7, 1.1955858175201527e-6,
                       3.7489482723344104e-7, 9.435565423673886e-7, 0.0016481856234771097,
                       -5.170124046113099e-7, -7.488335739060907e-7, 1.1676115475774083e-6,
                       3.585369902135286e-7, 2.2843363706380385e-6, 5.444622609527996e-6,
                       -9.133514540735695e-7, -2.934549428075428e-6, -6.821472608752267e-7,
                       -1.1916312010259113e-6, 6.114420561811344e-7, -6.479892470935131e-7,
                       -7.641451459218272e-7, -2.1445552078718219e-7, 3.179765171030214e-7,
                       1.5302088225955697e-7, -2.91971369086203e-7, -7.923100190629364e-8,
                       -2.3338106097133916e-7, -5.170124046113099e-7,
                       0.00016353541427233863, 1.8287099143126994e-7,
                       -3.3527193678846966e-7, -8.755752566371169e-8, -4.827760912901008e-7,
                       -1.3466832607742428e-6, 3.5112865810565587e-7, 1.1281576201901435e-6,
                       1.9587407627400537e-7, 4.58110470736007e-7, -1.2922335332386305e-7,
                       1.5824402134465918e-7, 2.194192268758236e-7, -3.322900442809539e-7,
                       2.9255703915244526e-7, 1.8109446848397612e-7, -4.5239767578053354e-7,
                       -1.1475708086009098e-7, -3.259991030516564e-7, -7.488335739060907e-7,
                       1.8287099143126994e-7, 0.00027619979891424474, -3.967817483061801e-7,
                       -1.356667992184628e-7, -6.992461740042183e-7, -1.8811189446130657e-6,
                       3.2305895263227864e-7, 1.0379711560686226e-6, 2.3180961453655065e-7,
                       4.2148849274877986e-7, -1.871653071349172e-7, 2.451926286010346e-7,
                       2.5967441619400636e-7, 4.6531183434761127e-7, -5.363680940867272e-7,
                       -3.9408295054521827e-7, 6.33500750308521e-7, 1.789338745585146e-7,
                       5.470927260809149e-7, 1.1676115475774083e-6, -3.3527193678846966e-7,
                       -3.967817483061801e-7, 0.000243322112701978, 1.8997670345801056e-7,
                       1.0902928712288688e-6, 3.15689976400868e-6, -5.922896786316525e-7,
                       -1.902995095624486e-6, -5.044450977772232e-7, -7.727483850332126e-7,
                       2.9183570493062274e-7, -3.4334772812632054e-7, -5.650821969965132e-7,
                       1.590984652744138e-7, -1.4007454251330543e-7, -8.67069372115333e-8,
                       2.1660527346265793e-7, 5.494499687380121e-8, 1.560864006280637e-7,
                       3.585369902135286e-7, -8.755752566371169e-8, -1.356667992184628e-7,
                       1.8997670345801056e-7, 0.00010534978848760108, 3.347948427820332e-7,
                       9.006683836531599e-7, -1.546786743736971e-7, -4.969743173827983e-7,
                       -1.1098904268535905e-7, -2.0180614340181233e-7, 8.961361807337906e-8,
                       -1.1739674894996512e-7, -1.243305413404581e-7, 8.200163472120675e-7,
                       -7.72345262285658e-7, -4.976186753799453e-7, 1.1164146984407432e-6,
                       3.500694716845466e-7, 8.810746809407705e-7, 2.2843363706380385e-6,
                       -4.827760912901008e-7, -6.992461740042183e-7, 1.0902928712288688e-6,
                       3.347948427820332e-7, 0.0007066882567333453, 5.084082313177316e-6,
                       -8.528697590984687e-7, -2.7402249732266185e-6, -6.369757966197674e-7,
                       -1.1127219547529462e-6, 5.709526566493775e-7, -6.050797101183869e-7,
                       -7.135438210690339e-7, 2.206016054116758e-6, -2.1544240798647743e-6,
                       -1.4408351373541164e-6, 3.003389818002344e-6, 8.343763138118049e-7,
                       2.5251548148335534e-6, 5.444622609527996e-6, -1.3466832607742428e-6,
                       -1.8811189446130657e-6, 3.15689976400868e-6, 9.006683836531599e-7,
                       5.084082313177316e-6, 0.001943967760708157, -2.379043720100683e-6,
                       -7.643740377321997e-6, -1.844338154537996e-6, -3.103890307321258e-6,
                       1.360842380010351e-6, -1.6277913959638095e-6, -2.0660378323888294e-6,
                       -3.788560196971194e-7, 5.617356791963917e-7, 2.7032590334164187e-7,
                       -5.157951185005295e-7, -1.3996908034193812e-7, -4.122897816187949e-7,
                       -9.133514540735695e-7, 3.5112865810565587e-7, 3.2305895263227864e-7,
                       -5.922896786316525e-7, -1.546786743736971e-7, -8.528697590984687e-7,
                       -2.379043720100683e-6, 0.00014363521728518003, 1.9929974477101833e-6,
                       3.460301354175023e-7, 8.092956007266877e-7, -2.2828531115678971e-7,
                       2.795530739775053e-7, 3.876248773361596e-7, -1.2172441517080708e-6,
                       1.804826727721565e-6, 8.685426858490453e-7, -1.6572221604827117e-6,
                       -4.4971317758759825e-7, -1.3246650426346429e-6,
                       -2.934549428075428e-6, 1.1281576201901435e-6, 1.0379711560686226e-6,
                       -1.902995095624486e-6, -4.969743173827983e-7, -2.7402249732266185e-6,
                       -7.643740377321997e-6, 1.9929974477101833e-6, 0.0009937022125140937,
                       1.1117763391708596e-6, 2.600223530235016e-6, -7.334685090885263e-7,
                       8.981890921600667e-7, 1.2454180228446984e-6, -2.718465691022185e-7,
                       3.133593762080108e-7, 2.3023291079110036e-7, -3.701066527493461e-7,
                       -1.0453755160364244e-7, -3.1962496886501124e-7,
                       -6.821472608752267e-7, 1.9587407627400537e-7, 2.3180961453655065e-7,
                       -5.044450977772232e-7, -1.1098904268535905e-7, -6.369757966197674e-7,
                       -1.844338154537996e-6, 3.460301354175023e-7, 1.1117763391708596e-6,
                       0.0005054585590745466, 4.514585311269494e-7, -1.704975658703112e-7,
                       2.0059215134952584e-7, 3.301348583356413e-7, -4.942857995726257e-7,
                       7.328851988732744e-7, 3.526887480506141e-7, -6.729474769003651e-7,
                       -1.8261483306394464e-7, -5.379061537044883e-7,
                       -1.1916312010259113e-6, 4.58110470736007e-7, 4.2148849274877986e-7,
                       -7.727483850332126e-7, -2.0180614340181233e-7,
                       -1.1127219547529462e-6, -3.103890307321258e-6, 8.092956007266877e-7,
                       2.600223530235016e-6, 4.514585311269494e-7, 0.0001624387273643112,
                       -2.9783923625135804e-7, 3.6472725127721466e-7, 5.057263510858805e-7,
                       2.194915284308351e-7, -2.0673153976959955e-7, -1.3319622713158562e-7,
                       2.988276628344299e-7, 9.370213613210431e-8, 2.3583484529167208e-7,
                       6.114420561811344e-7, -1.2922335332386305e-7, -1.871653071349172e-7,
                       2.9183570493062274e-7, 8.961361807337906e-8, 5.709526566493775e-7,
                       1.360842380010351e-6, -2.2828531115678971e-7, -7.334685090885263e-7,
                       -1.704975658703112e-7, -2.9783923625135804e-7,
                       0.00012202561764009547, -1.6196002780664673e-7, -1.90992319142532e-7,
                       -2.8754102795781984e-7, 2.531588087636604e-7, 1.5670674015538704e-7,
                       -3.914739396455615e-7, -9.930291191044434e-8, -2.820972786218783e-7,
                       -6.479892470935131e-7, 1.5824402134465918e-7, 2.451926286010346e-7,
                       -3.4334772812632054e-7, -1.1739674894996512e-7,
                       -6.050797101183869e-7, -1.6277913959638095e-6, 2.795530739775053e-7,
                       8.981890921600667e-7, 2.0059215134952584e-7, 3.6472725127721466e-7,
                       -1.6196002780664673e-7, 0.0001849011455817158, 2.247044407494789e-7,
                       -3.0452403480801977e-7, 3.510269116249402e-7, 2.579081839114098e-7,
                       -4.1459552561850514e-7, -1.1710354524033969e-7,
                       -3.580456632783989e-7, -7.641451459218272e-7, 2.194192268758236e-7,
                       2.5967441619400636e-7, -5.650821969965132e-7, -1.243305413404581e-7,
                       -7.135438210690339e-7, -2.0660378323888294e-6, 3.876248773361596e-7,
                       1.2454180228446984e-6, 3.301348583356413e-7, 5.057263510858805e-7,
                       -1.90992319142532e-7, 2.247044407494789e-7, 0.0001578918565106169],
                      (20, 20))
    mu_fmt = [0.0007099727662866386, 0.0007746436140780643, 0.0009753513707354856,
              0.0008974823062095927, 0.0017956115441846291, -0.0005706715920916397,
              0.0018453664814553953, 0.00031058550376539354, 0.0008285508576200677,
              0.0004427367765781838, 0.00026314263021436237, -0.0004355561062567704,
              -0.0013430995833714182, -4.375683177121564e-5, -0.0012358116404610848,
              0.0011544987957283499, 0.0010079106047102971, 0.0003844011178923159,
              0.0008621928559515785, 0.0006486885828118242]
    loadingst = reshape([0.0006682666783877028, 0.0008125085541546204,
                         0.0009938539577313578, 0.0008407013969662878,
                         0.0017791646483353075, -0.0006069768500075827,
                         0.001738046978669652, 0.00033425409596189986,
                         0.0008641141675397427, 0.0004021965063144702,
                         0.00024611494888044164, -0.0005357683629290428,
                         -0.001552593059063253, -1.9438538649469838e-6,
                         -0.0011014684717375986, 0.001178183021578672,
                         0.0010624628566782079, 0.0003575774384995594,
                         0.0008929668663452958, 0.0006752199632003888, 0.0, 0.0, 0.0, 0.0,
                         0.026624010504930753, 0.0, 0.17373178882466736, 0.0, 0.0, 0.0, 0.0,
                         0.1622273531418773, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04342295103684181,
                         0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08060668057346207, 0.0, 0.0,
                         0.0, 0.0, 0.0, 0.0, 0.46512629166678016, 0.0, 0.0, 0.0, 0.0, 0.0,
                         0.0, 0.0, 0.0, 0.0, -0.0469998531043761, 0.0, 0.0, 0.0, 0.0, 0.0,
                         0.0, 0.10297765603226086, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.06016206857452389, 0.0, 0.0, 0.0, -0.06739388297308944, 0.0,
                         -0.09204546965378291, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.057535605163043506, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.10164210407325881, -0.3265706503736942, 0.0,
                         -0.13261040097042645, 0.0, 0.0, 0.0, 0.0916256099434114, 0.0, 0.0,
                         0.12474407131296936, 0.0, 0.0, 0.0, 0.0, -0.07813119508111976, 0.0,
                         0.0374087440818776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                         -0.06760938082816292, 0.0], (20, 6))
    @test names(portfolio.loadings) == nms
    @test portfolio.loadings[!, 1] == portfolio.assets
    @test isapprox(loadingst, Matrix(portfolio.loadings[!, 2:end]))
    @test isapprox(cov_ft, portfolio.f_cov)
    @test isapprox(mu_ft, portfolio.f_mu)
    @test isapprox(cov_fmt, portfolio.fm_cov)
    @test isapprox(mu_fmt, portfolio.fm_mu)
end
