using Test
using PortfolioOptimiser, CSV, DataFrames

@testset "Efficient return value" begin
    df = CSV.read("./assets/stock_prices.csv", DataFrame)
    dropmissing!(df)
    returns = returns_from_prices(df[!, 2:end])

    # Mean returns.
    mu = ret_model(MRet(), Matrix(returns))
    mutest = [
        0.165077005733385
        0.183572017421321
        0.238036763838874
        0.192316447138601
        0.508570682802054
        -0.153295057043960
        0.305495623268028
        0.059318615800612
        0.189931534062078
        0.084295329365638
        0.054465665833134
        -0.182249168372897
        -0.439434885859736
        -0.028695410193010
        -0.353755082717798
        0.256437396469586
        0.262994437027811
        0.084965198887185
        0.214010363955894
        0.154258862256590
    ]
    @test mu ≈ mutest

    mu = ret_model(MRet(), Matrix(returns); compound = false)
    mutest = [
        0.178914374187325
        0.195208843702195
        0.245787816971219
        0.226167230238702
        0.452494357193942
        -0.143808069153082
        0.465034663597819
        0.078266717104239
        0.208793660771767
        0.111571083023889
        0.066312449760358
        -0.109757830255107
        -0.338454468486514
        -0.011028146100837
        -0.311429033491868
        0.290932770652577
        0.253991539266203
        0.096869664526551
        0.217271589766479
        0.163468530861212
    ]
    @test mu ≈ mutest

    # Exponential returns.
    mu = ret_model(EMRet(), Matrix(returns); span = 500)
    mutest = [
        0.174206788637514
        0.261448055846544
        0.182275222944877
        0.388168987273908
        0.602214112048088
        -0.405425982176985
        0.309416246725018
        0.119263386354215
        0.351783576012055
        0.140163506583907
        0.010482845369419
        -0.119858604418692
        -0.396957355595715
        -0.012867616138760
        -0.290725396632509
        0.513672821109176
        0.407679425007418
        0.098478138659613
        0.319774016932130
        0.099739436963900
    ]
    @test mu ≈ mutest

    mu = ret_model(EMRet(), Matrix(returns); compound = false, span = 500)
    mutest = [
        0.160644027761459
        0.232367378080205
        0.167496377111932
        0.328199137640111
        0.471827651094508
        -0.519374112543301
        0.269725670874286
        0.112695969837963
        0.301605231542693
        0.131205823781312
        0.010428497113714
        -0.127640371175951
        -0.505260162800969
        -0.012950788228994
        -0.343278494299677
        0.414880173944252
        0.342174649145516
        0.093943217781961
        0.277613325432957
        0.095091212893796
    ]
    @test mu ≈ mutest

    # CAPM rets.
    mu = ret_model(CAPMRet(), Matrix(returns))
    mutest = [
        0.094883850444685
        0.095679415838370
        0.103105763584424
        0.113528802174820
        0.105209157372728
        0.089111865352351
        0.191417900856481
        0.066415817812618
        0.122436002682103
        0.104694131070045
        0.062870019348941
        0.144651558003671
        0.197305954089759
        0.082330006545561
        0.144756910925415
        0.113935315988995
        0.096108833370246
        0.071786198182351
        0.107079483654873
        0.084533187625037
    ]
    @test mu ≈ mutest

    mu = ret_model(CAPMRet(), Matrix(returns); compound = false)
    mutest = [
        0.100933917383660
        0.101793758637327
        0.109820100917702
        0.121085244725778
        0.112093433526496
        0.094695598148891
        0.205267212404455
        0.070165876111249
        0.130712081830110
        0.111536796868735
        0.066333603088240
        0.154722491395735
        0.211630977236295
        0.087365814796178
        0.154836356062335
        0.121524601880310
        0.102257869962287
        0.075970143901725
        0.114114868480771
        0.089746996778792
    ]
    @test mu ≈ mutest
end